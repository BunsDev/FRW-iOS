{
    "scripts": {
          "testnet": {
            "version": "0.42",
            "basic": {
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICBsZXQga2V5OiBQdWJsaWNLZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCiAgICAgICAgc2lnbmVyLmtleXMuYWRkKAogICAgICAgICAgICBwdWJsaWNLZXk6IGtleSwKICAgICAgICAgICAgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29yaXRobSkhLAogICAgICAgICAgICB3ZWlnaHQ6IHdlaWdodAogICAgICAgICkKICAgIH0KfQoK",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGaWF0VG9rZW4gZnJvbSAweEZpYXRUb2tlbgppbXBvcnQgc3RGbG93VG9rZW4gZnJvbSAweHN0Rmxvd1Rva2VuCgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewoJcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgkJbGV0IGFjY291bnQgPSBBdXRoQWNjb3VudChwYXllcjogc2lnbmVyKQoKCQkvLyBhZGQgYWxsIHRoZSBrZXlzIHRvIHRoZSBhY2NvdW50CgkJZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKCQkJYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCgkJfQoJCQoJCS8vIGFkZCBjb250cmFjdHMgaWYgcHJvdmlkZWQKCQlmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewoJCQlhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQoJCX0KCiAgICAgICAgLy8gYWRkIFVTREMgVmF1bHQKICAgICAgICBsZXQgdXNkY1ZhdWx0IDwtIEZpYXRUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBhY2NvdW50LnNhdmUoPC11c2RjVmF1bHQsIHRvOiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgYWNjb3VudC5saW5rPCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KEZpYXRUb2tlbi5WYXVsdFJlY2VpdmVyUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKICAgICAgICBhY2NvdW50Lmxpbms8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihGaWF0VG9rZW4uVmF1bHRCYWxhbmNlUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgLy8gc3RGbG93CiAgICAgICAgbGV0IHN0Rmxvd1ZhdWx0IDwtIHN0Rmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGFjY291bnQuc2F2ZSg8LXZhdWx0LCB0bzogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc3RGbG93VG9rZW4udG9rZW5SZWNlaXZlclBhdGgsIHRhcmdldDogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihzdEZsb3dUb2tlbi50b2tlbkJhbGFuY2VQYXRoLCB0YXJnZXQ6IHN0Rmxvd1Rva2VuLnRva2VuVmF1bHRQYXRoKQoKCX0KfQ==",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMKaW1wb3J0IHN0Rmxvd1Rva2VuIGZyb20gMHhkNmY4MDU2NTE5M2FkNzI3Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewoJcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgkJbGV0IGFjY291bnQgPSBBdXRoQWNjb3VudChwYXllcjogc2lnbmVyKQoKCQkvLyBhZGQgYWxsIHRoZSBrZXlzIHRvIHRoZSBhY2NvdW50CgkJZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKCQkJYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCgkJfQoJCQoJCS8vIGFkZCBjb250cmFjdHMgaWYgcHJvdmlkZWQKCQlmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewoJCQlhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQoJCX0KCiAgICAgICAgLy8gYWRkIFVTREMgVmF1bHQKICAgICAgICBsZXQgdXNkY1ZhdWx0IDwtIEZpYXRUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBhY2NvdW50LnNhdmUoPC11c2RjVmF1bHQsIHRvOiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgYWNjb3VudC5saW5rPCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KEZpYXRUb2tlbi5WYXVsdFJlY2VpdmVyUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKICAgICAgICBhY2NvdW50Lmxpbms8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihGaWF0VG9rZW4uVmF1bHRCYWxhbmNlUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgLy8gc3RGbG93CiAgICAgICAgbGV0IHN0Rmxvd1ZhdWx0IDwtIHN0Rmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGFjY291bnQuc2F2ZSg8LXZhdWx0LCB0bzogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc3RGbG93VG9rZW4udG9rZW5SZWNlaXZlclBhdGgsIHRhcmdldDogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihzdEZsb3dUb2tlbi50b2tlbkJhbGFuY2VQYXRoLCB0YXJnZXQ6IHN0Rmxvd1Rva2VuLnRva2VuVmF1bHRQYXRoKQoJfQp9",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgc3RvcmFnZVVzZWQ6IFVJbnQ2NAogIHB1YiBsZXQgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsCiAgICBiYWxhbmNlOiBVRml4NjQsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQsCiAgICBzdG9yYWdlVXNlZDogVUludDY0LAogICAgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICAgIHNlbGYuYXZhaWxhYmxlQmFsYW5jZSA9IGF2YWlsYWJsZUJhbGFuY2UKICAgIHNlbGYuc3RvcmFnZVVzZWQgPSBzdG9yYWdlVXNlZAogICAgc2VsZi5zdG9yYWdlQ2FwYWNpdHkgPSBzdG9yYWdlQ2FwYWNpdHkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIFJlc3VsdCgKICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcywKICAgIGJhbGFuY2U6IGFjY291bnQuYmFsYW5jZSwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IGFjY291bnQuYXZhaWxhYmxlQmFsYW5jZSwKICAgIHN0b3JhZ2VVc2VkOiBhY2NvdW50LnN0b3JhZ2VVc2VkLAogICAgc3RvcmFnZUNhcGFjaXR5OiBhY2NvdW50LnN0b3JhZ2VDYXBhY2l0eQogICkKfQ==",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCB1c2RDYXA6IFVJbnQ2NCA9IGFjY291bnQuc3RvcmFnZVVzZWQKCiAgbGV0IG1pbkZsb3cgPSBVRml4NjQodXNkQ2FwKSAqIDAuMDAwMDAwMDIKICBpZiBtaW5GbG93ID4gMC4wMDEgewogICAgcmV0dXJuIG1pbkZsb3cKICB9IGVsc2UgewogICAgcmV0dXJuIDAuMDAxCiAgfQp9",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKICAgICAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAKICAgIHJldHVybiBsb2NrZWRCYWxhbmNlICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gVUZpeDY0KDApCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZQp9",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdW5sb2NrZWRWYXVsdCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSEKICAgICAgLmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgIGlmIGxvY2tlZEJhbGFuY2UgPT0gVUZpeDY0KDApIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CgogICAgaWYgbG9ja2VkQmFsYW5jZVVubG9ja2VkID4gbG9ja2VkQmFsYW5jZSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZSArIGxvY2tlZEJhbGFuY2UKICAgIH0KCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZVVubG9ja2VkICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAovL0NoZWNrIHRoZSBzdGF0dXMgb2YgYSBmaW4gdXNlcgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nKSA6IEFkZHJlc3M/IHsKICAgIGxldCBzdGF0dXM9RklORC5zdGF0dXMobmFtZSkKICAgIHJldHVybiBzdGF0dXMub3duZXIKfQ==",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogU3RyaW5nP3sKcmV0dXJuIEZJTkQucmV2ZXJzZUxvb2t1cChhZGRyZXNzKQp9",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBBZGRyZXNzPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1laGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnZhciBhZGRyZXNzID0gRG9tYWlucy5nZXRSZWNvcmRzKG5hbWVoYXNoKQpyZXR1cm4gYWRkcmVzcwp9",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwovLyBhZGRyZXNzOiBGbG93IGFkZHJlc3MKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW0RvbWFpbnMuRG9tYWluRGV0YWlsXSB7CmxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQpsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCmxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKbGV0IGRvbWFpbnM6W0RvbWFpbnMuRG9tYWluRGV0YWlsXSA9IFtdCmxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgpmb3IgaWQgaW4gaWRzIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpCiAgICBsZXQgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCiAgICBkb21haW5zLmFwcGVuZChkZXRhaWwpCn0KCnJldHVybiBkb21haW5zCn0=",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgcHViIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOiB7U3RyaW5nOiBVSW50NjR9IHsKICAgIGxldCBhY2N0ID0gZ2V0QWNjb3VudChhZGRyKQogICAgbGV0IHJldDoge1N0cmluZzogVUludDY0fSA9IHt9CiAgICByZXRbImNhcGFjaXR5Il0gPSBhY2N0LnN0b3JhZ2VDYXBhY2l0eQogICAgcmV0WyJ1c2VkIl0gPSBhY2N0LnN0b3JhZ2VVc2VkCiAgICByZXRbImF2YWlsYWJsZSJdID0gYWNjdC5zdG9yYWdlQ2FwYWNpdHkgLSBhY2N0LnN0b3JhZ2VVc2VkCiAgICByZXR1cm4gcmV0Cn0=",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSBjYXBhYmlsaXR5IikKCiAgICByZXR1cm4gdmF1bHRSZWYuYmFsYW5jZQp9",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleTogU3RyaW5nKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHZhciBmbGFnID0gZmFsc2UKICBmdW4gYWNjb3VudEZuKGFjY291bnRLZXk6IEFjY291bnRLZXkpOiBCb29sIHsKICAgIGxldCBrZXkgPSBTdHJpbmcuZW5jb2RlSGV4KGFjY291bnRLZXkucHVibGljS2V5LnB1YmxpY0tleSkKICAgIGlmIHB1YmxpY0tleSA9PSBrZXkgewogICAgICBmbGFnID0gYWNjb3VudEtleS53ZWlnaHQgPj0gVUZpeDY0KDEwMDApICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZAogICAgfQogICAgcmV0dXJuIGZhbHNlCiAgfQogIGFjY291bnQua2V5cy5mb3JFYWNoKGFjY291bnRGbikKCiAgcmV0dXJuIGZsYWcKfQo=",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleXM6IFtTdHJpbmddKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHZhciB3ZWlnaHQ6IFVGaXg2NCA9IDAuMAogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5cy5jb250YWlucyhrZXkpICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZCB7CiAgICAgIHdlaWdodCA9IHdlaWdodCArIGFjY291bnRLZXkud2VpZ2h0CiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gd2VpZ2h0ID49IFVGaXg2NCgxMDAwKQp9Cg==",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiBmYWxzZQogICAgfQogICAgcmV0dXJuIHRydWUKfQ==",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIC5nZXRDYXBhYmlsaXR5PCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmNoZWNrKCkKICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgLmdldENhcGFiaWxpdHk8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oPFRva2VuQmFsYW5jZVBhdGg+KQogICAgLmNoZWNrKCkKICAgIHJldHVybiByZWNlaXZlciAmJiBiYWxhbmNlCn0=",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCnB1YiBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpID8/IG5pbAogICAgCiAgICAKICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgIH0KICAgIAogICAgcmV0dXJuIDAuMAp9CgpwdWIgZnVuIG1haW4oYWRkcnM6W0FkZHJlc3NdKTogW1VGaXg2NF0gewogICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgZm9yIGFkZHIgaW4gYWRkcnMgewogICAgbGV0IGJhbCA9IGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyKQogICAgYmFscy5hcHBlbmQoYmFsKQogICB9CgogICAgcmV0dXJuIGJhbHMKfQ==",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCgpwdWIgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgIAogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICB9CiAgICAKICAgIHJldHVybiAwLjAKfQoKcHViIGZ1biBtYWluKGFkZHJzOltBZGRyZXNzXSk6IFtVRml4NjRdIHsKICAgbGV0IGJhbHM6IFtVRml4NjRdID0gW10KCiAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgIGxldCBiYWwgPSBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcikKICAgIGJhbHMuYXBwZW5kKGJhbCkKICAgfQoKICAgIHJldHVybiBiYWxzCn0=",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihpbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICAvLyBHZXQgYSBrZXkgZnJvbSBhbiBhdXRoIGFjY291bnQuCiAgICAgICAgbGV0IGtleUEgPSBzaWduZXIua2V5cy5yZXZva2Uoa2V5SW5kZXg6IGluZGV4KQogICAgfQp9",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGFtb3VudDogVUZpeDY0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCgogICAgICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgICAgIHBhbmljKCJDb3VsZCBub3QgZ2V0IGZsb3cgbG9ja2VkIHRva2VuIHZhdWx0IikKICAgICAgICB9CgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgICAgICAvLyBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgLy8gICAgIHBhbmljKCJOb3QgZW5vdWdoIGFtb3VudCB0byB3aXRoZHJhdyIpCiAgICAgICAgLy8gfQoKICAgICAgICBzZWxmLmFtb3VudCA9IGxvY2tlZEJhbGFuY2VVbmxvY2tlZAogICAgCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBzZWxmLmFtb3VudCkpCiAgICB9Cn0=",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgp0cmFuc2FjdGlvbigpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5ob2xkZXJSZWYgPSBhY2N0LmJvcnJvdzwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gVG9rZW5Ib2xkZXIiKQoKICAgICAgICBzZWxmLnZhdWx0UmVmID0gYWNjdC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0="
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MsIHRhcmdldDogQWRkcmVzcyk6ICZGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSB7CiAgICByZXR1cm4gY29sbGVjdGlvbi5ib3Jyb3dQdWJsaWNBY2NvdW50Qm9va21hcmsoYWRkcmVzczogdGFyZ2V0KQogIH0gCgogIHJldHVybiBuaWwKfQ==",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MpOiAme0FkZHJlc3M6IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9fT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYWNjb3VudCBib29rbWFyayBjb2xsZWN0aW9uIikKCiAgcmV0dXJuIGNvbGxlY3Rpb24uZ2V0QWNjb3VudEJvb2ttYXJrcygpCn0="
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKICAgIC8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KICAgIC8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCiAgICBwdWIgZnVuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oPFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgIC5jaGVjaygpCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgcmV0dXJuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIGlmIHNpZ25lci5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSA9PSBuaWwgewogICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgc2lnbmVyLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICB9CiAgICBpZiAoc2lnbmVyLmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgIHNpZ25lci51bmxpbmsoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICBzaWduZXIubGluazwmPENvbGxlY3Rpb25QdWJsaWNUeXBlPj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPiwgdGFyZ2V0OiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIH0KICAgIH0KfQ==",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKcHViIGZ1biBtYWluKCk6IHtTdHJpbmcgOiB7U3RyaW5nIDogQm9vbH19IHsKICBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ1R5cGVEYXRhKCkKICByZXR1cm4gY2F0YWxvZwp9",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBWaWV3SW5mbyB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBwdWIgbGV0IHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0KICBwdWIgbGV0IHJhcml0eTogU3RyaW5nPwoKICBpbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiBBbnlTdHJ1Y3R7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgIH0KCiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICApCiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKcHViIGZ1biBtYWluKGNvbGxlY3Rpb25JZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gewogIGxldCByZXM6IHtTdHJpbmc6IE5GVENhdGFsb2cuTkZUQ2F0YWxvZ01ldGFkYXRhfSA9IHt9CiAgZm9yIGNvbGxlY3Rpb25JRCBpbiBjb2xsZWN0aW9uSWRlbnRpZmllcnMgewogICAgICBpZiBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ0VudHJ5KGNvbGxlY3Rpb25JZGVudGlmaWVyOiBjb2xsZWN0aW9uSUQpIHsKICAgICAgICByZXNbY29sbGVjdGlvbklEXSA9IGNhdGFsb2cKICAgICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgcHViIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCnB1YiBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgcHViIGxldCBpZDogU3RyaW5nCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCnB1YiBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZyk6IE5GVENvbGxlY3Rpb24gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHN0b3JhZ2VQYXRoSUQpIQogIGxldCBjb2xsZWN0aW9uID0gYWNjb3VudC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBwdWIgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKcHViIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0b3JhZ2VQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IHZhdWx0VHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIAogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIQogIHJldHVybiBORlRDb2xsZWN0aW9uKAogICAgaWQ6IGFjY291bnQudHlwZShhdDogcGF0aCkhLmlkZW50aWZpZXIsCiAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHBhdGg6IHBhdGgpLAogICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgKQp9",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBWaWV3SW5mbyB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBwdWIgbGV0IHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0KICBwdWIgbGV0IHJhcml0eTogU3RyaW5nPwogIHB1YiBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpCiAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgfQoKICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgIGlmIGxldCBjRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gY0Rpc3BsYXkKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXkKICAgICAgKQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogc3RvcmFnZVBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgcHViIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBwdWIgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBwdWIgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBwdWIgbGV0IHB1YmxpY0NvbGxlY3Rpb246IFR5cGUKICBwdWIgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKICBwdWIgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSUQ6IFVJbnQ2NCk6IHtTdHJpbmc6IEFueVN0cnVjdH0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KGZyb206IHBhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVChpZDogdG9rZW5JRCkKCiAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogIH0KCiAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogIH0KCiAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICB9CgogIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogIH0KCiAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgfQoKICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgfQoKICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICB9CgogIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgfQoKICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICB9CgogIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQoKICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICBzdG9yYWdlUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgsCiAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgKQogICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogIH0KCiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXInJ3MgTkZUIGNvbGxlY3Rpb24KICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyCiAgICAuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IC9zdG9yYWdlL01vbWVudENvbGxlY3Rpb24pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXInJ3MgY29sbGVjdGlvbiIpCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRSZWYgPSByZWNpcGllbnQKICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvTW9tZW50Q29sbGVjdGlvbikKICAgIC5ib3Jyb3c8JntUb3BTaG90Lk1vbWVudENvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKCiAgfSAgIAp9",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCi8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgoKdHJhbnNhY3Rpb24ocmVjaXBpZW50OiBBZGRyZXNzLCB3aXRoZHJhd0lEOiBVSW50NjQpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgICAgICAgICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSByZWNpcGllbnQKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICB9Cn0="
            },
            "contract": {
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdHJpbmddIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICByZXR1cm4gYWNjb3VudC5jb250cmFjdHMubmFtZXMKfQ=="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OlN0cmluZywga2V5OlN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9CnZhciB2YXVsdFJlZjogJjxUb2tlbj4uVmF1bHQKcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQoKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkgCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0/ID0gbmlsCiAgICBsZXQgY29sbGVjdGlvblByaXZhdGUgPSBhY2NvdW50LmJvcnJvdzwme0RvbWFpbnMuQ29sbGVjdGlvblByaXZhdGV9Pihmcm9tOiBEb21haW5zLkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBmaW5kIHlvdXIgZG9tYWluIGNvbGxlY3Rpb24gY2FwIikKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQogICAgaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQoKICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgIGlmIHZhdWx0UmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+LAogICAgICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQogICAgc2VsZi52YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICB9IGVsc2UgewogICAgc2VsZi52YXVsdFJlZiA9IHZhdWx0UmVmIQogICAgfQp9CmV4ZWN1dGUgewogICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3VmF1bHQoa2V5OiBrZXksIGFtb3VudDogYW1vdW50KSkKfQp9",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBrZXkgd2lsbCBiZSAnQS5mOGQ2ZTA1ODZiMGEyMGM3LkRvbWFpbnMuQ29sbGVjdGlvbicgb2YgYSBORlQgY29sbGVjdGlvbgp0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZywga2V5OiBTdHJpbmcsIGl0ZW1JZDogVUludDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgY29sbGVjdGlvblJlZjogJjxORlQ+LkNvbGxlY3Rpb24KcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9bmlsIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQogICAgc2VsZi5kb21haW4gPSBkb21haW4hCgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIGFjY291bnQubGluazwmPENvbGxlY3Rpb25QdWJsaWNUeXBlPj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPiwgdGFyZ2V0OiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPik/PyBwYW5pYygiQ2FuIG5vdCBib3Jyb3cgY29sbGVjdGlvbiIpCiAgICB9IGVsc2UgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmID0gY29sbGVjdGlvblJlZiEKICAgIH0KCn0KZXhlY3V0ZSB7CiAgICBzZWxmLmNvbGxlY3Rpb25SZWYuZGVwb3NpdCh0b2tlbjogPC0gc2VsZi5kb21haW4ud2l0aGRyYXdORlQoa2V5OiBrZXksIGl0ZW1JZDogaXRlbUlkKSkKfQp9",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZyk6IEFkZHJlc3M/IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0QWRkcmVzc09mRG9tYWluKG5hbWU6IG5hbWUsIHJvb3Q6IHJvb3QpCn0=",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogU3RyaW5nfSB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldERlZmF1bHREb21haW5zT2ZBZGRyZXNzKGFkZHJlc3MpCn0=",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBTdHJpbmcpOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1lSGFzaCkgPz8gcGFuaWMoIkRvbWFpbiBub3QgZXhpc3QiKQpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCnZhciBkZXRhaWw6IERvbWFpbnMuRG9tYWluRGV0YWlsPyA9IG5pbAoKbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQhKQogICAgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCn0KCnJldHVybiBkZXRhaWwKfQoKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZywgcm9vdDogU3RyaW5nKSA6IERvbWFpbnMuRG9tYWluRGV0YWlsPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1lSGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnJldHVybiBnZXREZXRhaWwobmFtZUhhc2g6IG5hbWVIYXNoKQp9",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgIGxldCBzZW5kZXJSZWYgPSBzaWduZXIKICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgaWYgcmVjaXBpZW50UmVmID09IG5pbCB7CiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgIGRlZmF1bHREb21haW4gPSBkb21haW4KICAgICAgICB9CiAgICB9CiAgICBsZXQgdHlwZUtleSA9IGNvbGxlY3Rpb25SZWYuZ2V0VHlwZSgpLmlkZW50aWZpZXIKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIGRlZmF1bHREb21haW4hLmFkZENvbGxlY3Rpb24oY29sbGVjdGlvbjogPC0gY29sbGVjdGlvbikKICAgIH0KICAgIGRlZmF1bHREb21haW4hLmRlcG9zaXRORlQoa2V5OiB0eXBlS2V5LCB0b2tlbjogPC0gbmZ0LCBzZW5kZXJSZWY6IHNlbmRlclJlZiApCiAgICB9IGVsc2UgewogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ=="
            },
            "ft": {
              "addToken": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\ntransaction {\n    prepare(signer: AuthAccount) {\n        if(signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>) != nil) {\n            return\n        }\n        signer.save(<-<Token>.createEmptyVault(), to: <TokenStoragePath>)\n        \n        signer.link<&<Token>.Vault{FungibleToken.Receiver}>(\n            <TokenReceiverPath>,\n                target: <TokenStoragePath>\n        )\n        \n        signer.link<&<Token>.Vault{FungibleToken.Balance}>(\n            <TokenBalancePath>,\n                target: <TokenStoragePath>\n        )\n    }\n}",
              "enableTokenStorage": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\nprepare(signer: AuthAccount) {\n    if(signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>) == nil) {\n    signer.save(<-<Token>.createEmptyVault(), to: <TokenStoragePath>)\n    }\n\n    signer.unlink(\n    <TokenReceiverPath>\n    )\n\n    signer.link<&<Token>.Vault{FungibleToken.Receiver}>(\n    <TokenReceiverPath>,\n    target: <TokenStoragePath>\n    )\n\n    signer.unlink(\n    <TokenBalancePath>\n    )\n\n    signer.link<&<Token>.Vault{FungibleToken.Balance}>(\n    <TokenBalancePath>,\n    target: <TokenStoragePath>\n    )\n}\n}",
              "transferTokens": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @FungibleToken.Vault\n\n    prepare(signer: AuthAccount) {\n    // Get a reference to the signer's stored vault\n    let vaultRef = signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>)\n        ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n    // Withdraw tokens from the signer's stored vault\n    self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n    // Get the recipient's public account object\n    let recipientAccount = getAccount(recipient)\n\n    // Get a reference to the recipient's Receiver\n    let receiverRef = recipientAccount.getCapability(<TokenReceiverPath>)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n    // Deposit the withdrawn tokens in the recipient's receiver\n    receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "isTokenListEnabled": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0IC0gdjEuNzcKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMNCmltcG9ydCBGbG92YXRhckR1c3RUb2tlbiBmcm9tIDB4OTM5MmE0YTdjM2Y0OWEwYg0KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKICAgIAogICAgcHViIGZ1biBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmdldENhcGFiaWxpdHk8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9VU0RDVmF1bHRSZWNlaXZlcikKICAgICAgLmNoZWNrKCkKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmlhdFRva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvVVNEQ1ZhdWx0QmFsYW5jZSkKICAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UKCiAgICAgICBsZXQgcmVjZWl2ZXIxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9VU0RDVmF1bHRSZWNlaXZlcikKICAgICAgIC5jaGVjaygpCiAgICAgICBsZXQgYmFsYW5jZTE6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL1VTRENWYXVsdEJhbGFuY2UpCiAgICAgICAgLmNoZWNrKCkKCiAgICAgICAgbGV0IGZsYWcxID0gcmVjZWl2ZXIxICYmIGJhbGFuY2UxCgogICAgICAgcmV0dXJuIGZsYWcgfHwgZmxhZzEKICAgIH0KICAgIA0KCiAgICBwdWIgZnVuIGNoZWNrRmxvdmF0YXJEdXN0VG9rZW5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICBsZXQgcmVjZWl2ZXI6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgIC5nZXRDYXBhYmlsaXR5PCZGbG92YXRhckR1c3RUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9GbG92YXRhckR1c3RUb2tlblJlY2VpdmVyKQogICAgICAuY2hlY2soKQogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZGbG92YXRhckR1c3RUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL0Zsb3ZhdGFyRHVzdFRva2VuQmFsYW5jZSkKICAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UKCiAgICAgICBsZXQgcmVjZWl2ZXIxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9GbG92YXRhckR1c3RUb2tlblJlY2VpdmVyKQogICAgICAgLmNoZWNrKCkKICAgICAgIGxldCBiYWxhbmNlMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5CYWxhbmNlKQogICAgICAgIC5jaGVjaygpCgogICAgICAgIGxldCBmbGFnMSA9IHJlY2VpdmVyMSAmJiBiYWxhbmNlMQoKICAgICAgIHJldHVybiBmbGFnIHx8IGZsYWcxCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmdldENhcGFiaWxpdHk8JkZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikKICAgICAgLmNoZWNrKCkKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmxvd1Rva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UKCiAgICAgICBsZXQgcmVjZWl2ZXIxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikKICAgICAgIC5jaGVjaygpCiAgICAgICBsZXQgYmFsYW5jZTE6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICAgICAgLmNoZWNrKCkKCiAgICAgICAgbGV0IGZsYWcxID0gcmVjZWl2ZXIxICYmIGJhbGFuY2UxCgogICAgICAgcmV0dXJuIGZsYWcgfHwgZmxhZzEKICAgIH0KICAgIAoKICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IHtTdHJpbmc6IEJvb2x9IHsKICAgICAgcmV0dXJuIHsKICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS45MzkyYTRhN2MzZjQ5YTBiLkZsb3ZhdGFyRHVzdFRva2VuIiA6CiAgICBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLjdlNjBkZjA0MmE5YzA4NjguRmxvd1Rva2VuIiA6CiAgICBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg",
              "isLinkedAccountTokenListEnabled": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0IC0gdjEuNzcKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMNCmltcG9ydCBGbG92YXRhckR1c3RUb2tlbiBmcm9tIDB4OTM5MmE0YTdjM2Y0OWEwYg0KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKICAgIAogICAgcHViIGZ1biBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIAogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9VU0RDVmF1bHRCYWxhbmNlKQogICAgICAgLmNoZWNrKCkKCiAgICAgIGxldCBmbGFnID0gYmFsYW5jZQogICAgCiAgICAgIGxldCBiYWxhbmNlMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL1VTRENWYXVsdEJhbGFuY2UpCiAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZzEgPSBiYWxhbmNlMQoKICAgICAgcmV0dXJuIGZsYWcgfHwgZmxhZzEKICAgIH0KICAgIA0KCiAgICBwdWIgZnVuIGNoZWNrRmxvdmF0YXJEdXN0VG9rZW5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICAKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmxvdmF0YXJEdXN0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9GbG92YXRhckR1c3RUb2tlbkJhbGFuY2UpCiAgICAgICAuY2hlY2soKQoKICAgICAgbGV0IGZsYWcgPSBiYWxhbmNlCiAgICAKICAgICAgbGV0IGJhbGFuY2UxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5CYWxhbmNlKQogICAgICAuY2hlY2soKQoKICAgICAgbGV0IGZsYWcxID0gYmFsYW5jZTEKCiAgICAgIHJldHVybiBmbGFnIHx8IGZsYWcxCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIAogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZGbG93VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgICAgLmNoZWNrKCkKCiAgICAgIGxldCBmbGFnID0gYmFsYW5jZQogICAgCiAgICAgIGxldCBiYWxhbmNlMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZzEgPSBiYWxhbmNlMQoKICAgICAgcmV0dXJuIGZsYWcgfHwgZmxhZzEKICAgIH0KICAgIAoKICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IHtTdHJpbmc6IEJvb2x9IHsKICAgICAgcmV0dXJuIHsKICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS45MzkyYTRhN2MzZjQ5YTBiLkZsb3ZhdGFyRHVzdFRva2VuIiA6CiAgICBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLjdlNjBkZjA0MmE5YzA4NjguRmxvd1Rva2VuIiA6CiAgICBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg",
              "getTokenListBalance": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0IC0gdjEuNzcKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMNCmltcG9ydCBGbG92YXRhckR1c3RUb2tlbiBmcm9tIDB4OTM5MmE0YTdjM2Y0OWEwYg0KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKICAgIAogICAgcHViIGZ1biBjaGVja0ZpYXRUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL1VTRENWYXVsdEJhbGFuY2UpCiAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkgPz8gbmlsCiAgICAgICAgCiAgICAgIAogICAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIAogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gMC4wCiAgICAgIAogICAgfQogICAgDQoKICAgIHB1YiBmdW4gY2hlY2tGbG92YXRhckR1c3RUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL0Zsb3ZhdGFyRHVzdFRva2VuQmFsYW5jZSkKICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgICAgICAKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkgPz8gbmlsCiAgICAgICAgCiAgICAgIAogICAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIAogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gMC4wCiAgICAgIAogICAgfQogICAgCgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDoge1N0cmluZzogVUZpeDY0fSB7CiAgICAgIHJldHVybiB7CiAgICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuOTM5MmE0YTdjM2Y0OWEwYi5GbG92YXRhckR1c3RUb2tlbiIgOgogICAgY2hlY2tGbG92YXRhckR1c3RUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuN2U2MGRmMDQyYTljMDg2OC5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA=="
            },
            "hybridCustody": {
              "batchSendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQogICAgfQp9",
              "batchSendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIC8vIGxldCBjb2xsUmVmID0gYWNjdC5ib3Jyb3c8JkZMT0FULkNvbGxlY3Rpb24+KGZyb206IEZMT0FULkZMT0FUQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSEKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgLmdldENhcGFiaWxpdHkoRkxPQVQuRkxPQVRDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KCiAgICB9Cn0=",
              "batchSendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikhCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgICAgICAKICAgICAgICAKICAgICAgICBsZXQgcmVjZWl2ZXJBY2MgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpIQogICAgICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQWNjLmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChyZWNlaXZlckNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IHJlY2VpdmVyQ2FwUmVmID0gcmVjZWl2ZXJDYXAhLmJvcnJvdygpIQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgICAgICB9CiAgICB9Cn0=",
              "batchSendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCiAgICAgICAgCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IHJlY2VpdmVyKSEKICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQocmVjZWl2ZXJDYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICByZWNlaXZlckNhcFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQogICAgfQp9",
              "batchTransferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBhY2N0CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KICAgIH0KfQ==",
              "batchTransferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGFjY3QKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpICAgICAgIAogICAgICAgIAogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQoKICAgIH0KfQ==",
              "batchTransferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgY2FwUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgICAgICB9CiAgICB9Cn0=",
              "batchTransferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKICAgICAgICAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KICAgIH0KfQ==",
              "checkChildLinkedCollections": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedVaults": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgcGF0aDogU3RyaW5nKTogQm9vbCB7CiAgbGV0IG1nciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBtYW5hZ2VyIGZyb20gcGFyZW50IikKICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgbGV0IGNhcCA9IGNoaWxkLmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KICAKICByZXR1cm4gY2FwICE9IG5pbAp9IAogICAg",
              "checkChildLinkedVaultsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgcGF0aDogU3RyaW5nKTogQm9vbCB7CiAgbGV0IG1nciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBtYW5hZ2VyIGZyb20gcGFyZW50IikKICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgbGV0IGNhcCA9IGNoaWxkLmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KICAKICByZXR1cm4gY2FwICE9IG5pbAp9IAogICAg",
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyZXNzOiBBZGRyZXNzLCBuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG0gPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICBsZXQgZCA9IE1ldGFkYXRhVmlld3MuRGlzcGxheSgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiB0aHVtYm5haWwpCiAgICAgICAgKQoKICAgICAgICBtLnNldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkKQogICAgfQp9",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgVG9rZW5JbmZvIHsKcHViIGxldCBpZDogU3RyaW5nCnB1YiBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKTogW1Rva2VuSW5mb10gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRva2VuSW5mbyhpZDogdHlwZS5pZGVudGlmaWVyLCBiYWxhbmNlOiB2YXVsdC5iYWxhbmNlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgIAogICAgcmV0dXJuIGNvaW5JbmZvTGlzdAp9Cg==",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogW1VJbnQ2NF19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gbmZ0cwp9",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCnB1YiBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY29sbGVjdGlvbkxpc3Q6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0eXBlLmlkZW50aWZpZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogY2hpbGRBY2NvdW50LCBwYXRoOiBwYXRoKSwKICAgICAgICAgICAgICAgICAgICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gY29sbGVjdGlvbkxpc3QKfQ==",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHNjcmlwdCB5b3UgY2FuIGV4ZWN1dGUgb24gRmxvdyBOZXR3b3JrCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKToge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwogICAgdmFyIGFjY2Vzc2libGVORlRzOiB7QWRkcmVzczoge1N0cmluZzogW1VJbnQ2NF19fSAgPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgYWNjZXNzaWJsZU5GVHNbYWRkcmVzc10gPSBuZnRzCiAgICB9CiAgICByZXR1cm4gYWNjZXNzaWJsZU5GVHMKfQ==",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogVUZpeDY0fSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1R5cGVdfSA9IHt9CgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IHZhdWx0VHlwZTogVHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICAgICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZXM6IHtTdHJpbmc6IFVGaXg2NH0gPSB7fQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byB2YXVsdEJhbGFuY2VzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9PSBuaWwgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgICAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IHZhdWx0ID0gYWNjdC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXVsdEJhbGFuY2VzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiB2YXVsdEJhbGFuY2VzCn0=",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKICAgIHB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0K",
              "getChildAccountAllowTypes": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBbU3RyaW5nXT8gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGQpCiAgICAvLyB2YXIgZmFjdG9yeVN1cHBvcnRlZFR5cGVzOiBbVHlwZV0/ID0gbmlsCiAgICB2YXIgZmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgLy8gdmFyIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/ID0gbmlsCiAgICBpZiBsZXQgYWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgewogICAgICAgIC8vIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgLy8gICBmYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5LmdldFN1cHBvcnRlZFR5cGVzKCkKICAgICAgICAvLyB9CiAgICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICAgIGZpbHRlckRldGFpbHMgPSBmaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgICAgfQogICAgICAgIC8vIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICAvLyAgIG1hbmFnZXJGaWx0ZXJEZXRhaWxzID0gbUZpbHRlci5nZXREZXRhaWxzKCkKICAgICAgICAvLyB9CiAgICAgICAgbGV0IGlkZW5BcnI6IFtTdHJpbmddID0gW10KICAgICAgICBsZXQgZGF0YSA9IGZpbHRlckRldGFpbHMgYXMhIHtTdHJpbmc6IEFueVN0cnVjdH0/CgogICAgICAgIGxldCB0eXBlQXJyID0gZGF0YSFbImFsbG93ZWRUeXBlcyJdISBhcyEgW1R5cGVdCgogICAgICAgIGZvciB0eXBlIGluIHR5cGVBcnIgewogICAgICAgICAgaWRlbkFyci5hcHBlbmQodHlwZS5pZGVudGlmaWVyKQogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gaWRlbkFycgogICAgICB9CgogICAgfQoKICAgIHJldHVybiBuaWwKfQo=",
              "getChildAccountAllowTypesTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IFtTdHJpbmddPyB7CiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkKICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAKICAgIGlmIGxldCBtYW5hZ2VyID0gbSB7CiAgICAgICBsZXQgZGlzcGxheSA9IG1hbmFnZXIuZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBjaGlsZCkKICAgIC8vIHZhciBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8gPSBuaWwKICAgIHZhciBmaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/ID0gbmlsCiAgICAvLyB2YXIgbWFuYWdlckZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIGlmIGxldCBhY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSB7CiAgICAgICAgLy8gaWYgbGV0IGZhY3RvcnkgPSBhY2N0LmdldENhcGFiaWxpdHlGYWN0b3J5TWFuYWdlcigpIHsKICAgICAgICAvLyAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlcyA9IGZhY3RvcnkuZ2V0U3VwcG9ydGVkVHlwZXMoKQogICAgICAgIC8vIH0KICAgICAgICBpZiBsZXQgZmlsdGVyID0gYWNjdC5nZXRDYXBhYmlsaXR5RmlsdGVyKCkgewogICAgICAgICAgZmlsdGVyRGV0YWlscyA9IGZpbHRlci5nZXREZXRhaWxzKCkKICAgICAgICB9CiAgICAgICAgLy8gaWYgbGV0IG1GaWx0ZXIgPSBhY2N0LmdldE1hbmFnZXJDYXBhYmlsaXR5RmlsdGVyKCkgewogICAgICAgIC8vICAgbWFuYWdlckZpbHRlckRldGFpbHMgPSBtRmlsdGVyLmdldERldGFpbHMoKQogICAgICAgIC8vIH0KICAgICAgICBsZXQgaWRlbkFycjogW1N0cmluZ10gPSBbXQogICAgICAgIGxldCBkYXRhID0gZmlsdGVyRGV0YWlscyBhcyEge1N0cmluZzogQW55U3RydWN0fT8KCiAgICAgICAgbGV0IHR5cGVBcnIgPSBkYXRhIVsiYWxsb3dlZFR5cGVzIl0hIGFzISBbVHlwZV0KCiAgICAgICAgZm9yIHR5cGUgaW4gdHlwZUFyciB7CiAgICAgICAgICBpZGVuQXJyLmFwcGVuZCh0eXBlLmlkZW50aWZpZXIpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBpZGVuQXJyCiAgICAgIH0KCiAgICB9CgogICAgcmV0dXJuIG5pbAp9CgoK",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkKCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICB2YXIgZGF0YToge0FkZHJlc3M6IEFueVN0cnVjdH0gPSB7fQogICAgZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYyA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgbm90IGZvdW5kIikKICAgICAgICBsZXQgZCA9IGMucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpCiAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQogICAgfQogICAgcmV0dXJuIGRhdGEKfQ==",
              "getChildAccountNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwovLyBpbXBvcnQgTGlua2VkQWNjb3VudHMgZnJvbSAweENoaWxkQWNjb3VudAoKLy8vIEN1c3RvbSBzdHJ1Y3QgdG8gbWFrZSBpbnRlcnByZXRhdGlvbiBvZiBORlQgJiBDb2xsZWN0aW9uIGRhdGEgZWFzeSBjbGllbnQgc2lkZQpwdWIgc3RydWN0IE5GVERhdGEgewogICAgcHViIGxldCBuYW1lOiBTdHJpbmcKICAgIHB1YiBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogICAgcHViIGxldCB0aHVtYm5haWw6IFN0cmluZwogICAgcHViIGxldCByZXNvdXJjZUlEOiBVSW50NjQKICAgIHB1YiBsZXQgb3duZXJBZGRyZXNzOiBBZGRyZXNzPwogICAgcHViIGxldCBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblVSTDogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcKICAgIHB1YiBsZXQgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CgogICAgaW5pdCgKICAgICAgICBuYW1lOiBTdHJpbmcsCiAgICAgICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgICAgICB0aHVtYm5haWw6IFN0cmluZywKICAgICAgICByZXNvdXJjZUlEOiBVSW50NjQsCiAgICAgICAgb3duZXJBZGRyZXNzOiBBZGRyZXNzPywKICAgICAgICBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblVSTDogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcsCiAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CiAgICApIHsKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICAgICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgICAgICBzZWxmLnJlc291cmNlSUQgPSByZXNvdXJjZUlECiAgICAgICAgc2VsZi5vd25lckFkZHJlc3MgPSBvd25lckFkZHJlc3MKICAgICAgICBzZWxmLmNvbGxlY3Rpb25OYW1lID0gY29sbGVjdGlvbk5hbWUKICAgICAgICBzZWxmLmNvbGxlY3Rpb25EZXNjcmlwdGlvbiA9IGNvbGxlY3Rpb25EZXNjcmlwdGlvbgogICAgICAgIHNlbGYuY29sbGVjdGlvblVSTCA9IGNvbGxlY3Rpb25VUkwKICAgICAgICBzZWxmLmNvbGxlY3Rpb25TdG9yYWdlUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIKICAgIH0KfQoKLy8vIEhlbHBlciBmdW5jdGlvbiB0aGF0IHJldHJpZXZlcyBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudAovLy8KcHViIGZ1biBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKF8gYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBHZXQgdGhlIGFjY291bnQKICAgIGxldCBhY2NvdW50OiBBdXRoQWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAvLyBJbml0IGZvciByZXR1cm4gdmFsdWUKICAgIGxldCBkYXRhOiBbTkZURGF0YV0gPSBbXQogICAgLy8gQXNzaWduIHRoZSB0eXBlcyB3ZSdsbCBuZWVkCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIGxldCBkaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXlUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRhdGFUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCgogICAgLy8gSXRlcmF0ZSBvdmVyIGVhY2ggcHVibGljIHBhdGgKICAgIGFjY291bnQuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgaWYgaXQncyBhIENvbGxlY3Rpb24gd2UncmUgaW50ZXJlc3RlZCBpbiwgaWYgc28sIGdldCBhIHJlZmVyZW5jZQogICAgICAgIGlmIHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KGZyb206IHBhdGgpIHsKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciB0aGUgQ29sbGVjdGlvbidzIE5GVHMsIGNvbnRpbnVpbmcgaWYgdGhlIE5GVCByZXNvbHZlcyB0aGUgdmlld3Mgd2Ugd2FudAogICAgICAgICAgICAgICAgZm9yIGlkIGluIGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkgewogICAgICAgICAgICAgICAgICAgIGxldCByZXNvbHZlclJlZjogJntNZXRhZGF0YVZpZXdzLlJlc29sdmVyfSA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiBpZCkKICAgICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGRpc3BsYXlUeXBlKSBhcyEgTWV0YWRhdGFWaWV3cy5EaXNwbGF5PyB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EYXRhVHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEJ1aWxkIG91ciBORlREYXRhIHN0cnVjdCBmcm9tIHRoZSBtZXRhZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmZ0RGF0YSA9IE5GVERhdGEoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwudXJpKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZUlEOiByZXNvbHZlclJlZi51dWlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3duZXJBZGRyZXNzOiByZXNvbHZlclJlZi5vd25lcj8uYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25OYW1lOiBjb2xsZWN0aW9uRGlzcGxheT8ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25EZXNjcmlwdGlvbjogY29sbGVjdGlvbkRpc3BsYXk/LmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblVSTDogY29sbGVjdGlvbkRpc3BsYXk/LmV4dGVybmFsVVJMPy51cmwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXI6IGNvbGxlY3Rpb25EYXRhPy5wdWJsaWNQYXRoPy50b1N0cmluZygpCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGl0IHRvIG91ciBkYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKG5mdERhdGEpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgcmV0dXJuIGRhdGEKfQoKLy8vIFNjcmlwdCB0aGF0IHJldHJpZXZlIGRhdGEgYWJvdXQgYWxsIHB1YmxpY2x5IGFjY2Vzc2libGUgTkZUcyBpbiBhbiBhY2NvdW50IGFuZCBhbnkgb2YgaXRzCi8vLyBjaGlsZCBhY2NvdW50cwovLy8KLy8vIE5vdGUgdGhhdCB0aGlzIHNjcmlwdCBkb2VzIG5vdCBjb25zaWRlciBhY2NvdW50cyB3aXRoIGV4Y2VwdGlvbmFsbHkgbGFyZ2UgY29sbGVjdGlvbnMgCi8vLyB3aGljaCB3b3VsZCByZXN1bHQgaW4gbWVtb3J5IGVycm9ycy4gVG8gY29tcG9zZSBhIHNjcmlwdCB0aGF0IGRvZXMgY292ZXIgYWNjb3VudHMgd2l0aAovLy8gYSBsYXJnZSBudW1iZXIgb2Ygc3ViLWFjY291bnRzIGFuZC9vciBORlRzIHdpdGhpbiB0aG9zZSBhY2NvdW50cywgc2VlIGV4YW1wbGUgNSBpbgovLy8gdGhlIE5GVCBDYXRhbG9nJ3MgUkVBRE1FOiBodHRwczovL2dpdGh1Yi5jb20vZGFwcGVybGFicy9uZnQtY2F0YWxvZyBhbmQgYWRhcHQgZm9yIHVzZQovLy8gd2l0aCBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCi8vLwovLyBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtBZGRyZXNzOiBbTkZURGF0YV19IHsKLy8gICAgIGxldCBhbGxORlREYXRhOiB7QWRkcmVzczogW05GVERhdGFdfSA9IHt9CiAgICAKLy8gICAgIC8vIEFkZCBhbGwgcmV0cmlldmVkIHZpZXdzIHRvIHRoZSBydW5uaW5nIG1hcHBpbmcgaW5kZXhlZCBvbiBhZGRyZXNzCi8vICAgICBhbGxORlREYXRhLmluc2VydChrZXk6IGFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykpCiAgICAKLy8gICAgIC8qIEl0ZXJhdGUgb3ZlciBhbnkgY2hpbGQgYWNjb3VudHMgKi8gCi8vICAgICAvLwovLyAgICAgLy8gR2V0IHJlZmVyZW5jZSB0byBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uIGlmIGl0IGV4aXN0cwovLyAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBnZXRBY2NvdW50KGFkZHJlc3MpLmdldENhcGFiaWxpdHk8JkxpbmtlZEFjY291bnRzLkNvbGxlY3Rpb257TGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY30+KAovLyAgICAgICAgICAgICBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uUHVibGljUGF0aAovLyAgICAgICAgICkuYm9ycm93KCkgewovLyAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIGxpbmtlZCBhY2NvdW50IGluIExpbmtlZEFjY291bnRzLkNvbGxlY3Rpb24KLy8gICAgICAgICBmb3IgY2hpbGRBZGRyZXNzIGluIGNvbGxlY3Rpb25SZWYuZ2V0TGlua2VkQWNjb3VudEFkZHJlc3NlcygpIHsKLy8gICAgICAgICAgICAgaWYgIWFsbE5GVERhdGEuY29udGFpbnNLZXkoY2hpbGRBZGRyZXNzKSB7Ci8vICAgICAgICAgICAgICAgICAvLyBJbnNlcnQgdGhlIE5GVCBtZXRhZGF0YSBmb3IgdGhvc2UgTkZUcyBpbiBlYWNoIGNoaWxkIGFjY291bnQKLy8gICAgICAgICAgICAgICAgIC8vIGluZGV4aW5nIG9uIHRoZSBhY2NvdW50J3MgYWRkcmVzcwovLyAgICAgICAgICAgICAgICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBjaGlsZEFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoY2hpbGRBZGRyZXNzKSkKLy8gICAgICAgICAgICAgfQovLyAgICAgICAgIH0KLy8gICAgIH0KLy8gICAgIHJldHVybiBhbGxORlREYXRhIAovLyB9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgcmV0dXJuIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykgCn0KCg==",
              "getChildAccounts": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnB1YiBzdHJ1Y3QgQ2hpbGRBY2NvdW50SW5mbyB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBkaXNwbGF5OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/CiAgcHViIGxldCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8KICBwdWIgbGV0IGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8KICBwdWIgbGV0IG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgZGlzcGxheTogTWV0YWRhdGFWaWV3cy5EaXNwbGF5PywKICAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPywKICAgIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8sCiAgICBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5mYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5U3VwcG9ydGVkVHlwZXMKICAgIHNlbGYuZmlsdGVyRGV0YWlscyA9IGZpbHRlckRldGFpbHMKICAgIHNlbGYubWFuYWdlckZpbHRlckRldGFpbHMgPSBtYW5hZ2VyRmlsdGVyRGV0YWlscwogIH0KfQoKCgpwdWIgZnVuIG1haW4oY2hpbGQ6IEFkZHJlc3MpOiAgW0NoaWxkQWNjb3VudEluZm9dIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICByZXR1cm4gZ2V0Q2hpbGRBY2NvdW50cyhtYW5hZ2VyOiBtYW5hZ2VyKQogICAgfQoKICAgIHJldHVybiBbXQp9CgpwdWIgZnVuIGdldENoaWxkQWNjb3VudHMobWFuYWdlcjogJkh5YnJpZEN1c3RvZHkuTWFuYWdlcik6IFtDaGlsZEFjY291bnRJbmZvXSB7CiAgbGV0IGNoaWxkQWRkcmVzc2VzID0gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCiAgbGV0IGNoaWxkcmVuOiBbQ2hpbGRBY2NvdW50SW5mb10gPSBbXQogIGZvciBjaGlsZEFkZHJlc3MgaW4gY2hpbGRBZGRyZXNzZXMgewogICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzKQogICAgdmFyIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPyA9IG5pbAogICAgdmFyIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIHZhciBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgaWYgbGV0IGFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSB7CiAgICAgIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgZmFjdG9yeVN1cHBvcnRlZFR5cGVzID0gZmFjdG9yeS5nZXRTdXBwb3J0ZWRUeXBlcygpCiAgICAgIH0KICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBmaWx0ZXJEZXRhaWxzID0gZmlsdGVyLmdldERldGFpbHMoKQogICAgICB9CiAgICAgIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBtYW5hZ2VyRmlsdGVyRGV0YWlscyA9IG1GaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgIH0KICAgIH0KICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IGZhY3RvcnlTdXBwb3J0ZWRUeXBlcywgZmlsdGVyRGV0YWlsczogZmlsdGVyRGV0YWlscywgbWFuYWdlckZpbHRlckRldGFpbHM6IG1hbmFnZXJGaWx0ZXJEZXRhaWxzKQogICAgY2hpbGRyZW4uYXBwZW5kKGNoaWxkKQogIH0KCiAgcmV0dXJuIGNoaWxkcmVuCn0KCnB1YiBmdW4gZ2V0T3duZWRBY2NvdW50cyhtYW5hZ2VyOiAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyKTogW0NoaWxkQWNjb3VudEluZm9dIHsKICBsZXQgb3duZWRBZGRyZXNzZXMgPSBtYW5hZ2VyLmdldE93bmVkQWRkcmVzc2VzKCkKICBsZXQgY2hpbGRyZW46IFtDaGlsZEFjY291bnRJbmZvXSA9IFtdCiAgZm9yIG93bmVkQWRkcmVzcyBpbiBvd25lZEFkZHJlc3NlcyB7CiAgICBpZiBsZXQgbyA9IG1hbmFnZXIuYm9ycm93T3duZWRBY2NvdW50KGFkZHI6IG93bmVkQWRkcmVzcykgewogICAgICBsZXQgZCA9IG8ucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/IAogICAgICBpZiBsZXQgZGlzcGxheSA9IGQgewogICAgICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IG5pbCwgZmlsdGVyRGV0YWlsczogbmlsLCBtYW5hZ2VyRmlsdGVyRGV0YWlsczogbmlsKQogICAgICAgIGNoaWxkcmVuLmFwcGVuZChjaGlsZCkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY2hpbGRyZW4uYXBwZW5kKENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBuaWwsIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogbmlsLCBmaWx0ZXJEZXRhaWxzOiBuaWwsIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBuaWwpKQogICAgfQogIH0KICByZXR1cm4gY2hpbGRyZW4KfQ==",
              "getChildAccountsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCnB1YiBzdHJ1Y3QgQ2hpbGRBY2NvdW50SW5mbyB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBkaXNwbGF5OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/CiAgcHViIGxldCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8KICBwdWIgbGV0IGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8KICBwdWIgbGV0IG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgZGlzcGxheTogTWV0YWRhdGFWaWV3cy5EaXNwbGF5PywKICAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPywKICAgIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8sCiAgICBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5mYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5U3VwcG9ydGVkVHlwZXMKICAgIHNlbGYuZmlsdGVyRGV0YWlscyA9IGZpbHRlckRldGFpbHMKICAgIHNlbGYubWFuYWdlckZpbHRlckRldGFpbHMgPSBtYW5hZ2VyRmlsdGVyRGV0YWlscwogIH0KfQoKCgpwdWIgZnVuIG1haW4oY2hpbGQ6IEFkZHJlc3MpOiAgW0NoaWxkQWNjb3VudEluZm9dIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICByZXR1cm4gZ2V0Q2hpbGRBY2NvdW50cyhtYW5hZ2VyOiBtYW5hZ2VyKQogICAgfQoKICAgIHJldHVybiBbXQp9CgpwdWIgZnVuIGdldENoaWxkQWNjb3VudHMobWFuYWdlcjogJkh5YnJpZEN1c3RvZHkuTWFuYWdlcik6IFtDaGlsZEFjY291bnRJbmZvXSB7CiAgbGV0IGNoaWxkQWRkcmVzc2VzID0gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCiAgbGV0IGNoaWxkcmVuOiBbQ2hpbGRBY2NvdW50SW5mb10gPSBbXQogIGZvciBjaGlsZEFkZHJlc3MgaW4gY2hpbGRBZGRyZXNzZXMgewogICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzKQogICAgdmFyIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPyA9IG5pbAogICAgdmFyIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIHZhciBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgaWYgbGV0IGFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSB7CiAgICAgIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgZmFjdG9yeVN1cHBvcnRlZFR5cGVzID0gZmFjdG9yeS5nZXRTdXBwb3J0ZWRUeXBlcygpCiAgICAgIH0KICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBmaWx0ZXJEZXRhaWxzID0gZmlsdGVyLmdldERldGFpbHMoKQogICAgICB9CiAgICAgIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBtYW5hZ2VyRmlsdGVyRGV0YWlscyA9IG1GaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgIH0KICAgIH0KICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IGZhY3RvcnlTdXBwb3J0ZWRUeXBlcywgZmlsdGVyRGV0YWlsczogZmlsdGVyRGV0YWlscywgbWFuYWdlckZpbHRlckRldGFpbHM6IG1hbmFnZXJGaWx0ZXJEZXRhaWxzKQogICAgY2hpbGRyZW4uYXBwZW5kKGNoaWxkKQogIH0KCiAgcmV0dXJuIGNoaWxkcmVuCn0KCnB1YiBmdW4gZ2V0T3duZWRBY2NvdW50cyhtYW5hZ2VyOiAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyKTogW0NoaWxkQWNjb3VudEluZm9dIHsKICBsZXQgb3duZWRBZGRyZXNzZXMgPSBtYW5hZ2VyLmdldE93bmVkQWRkcmVzc2VzKCkKICBsZXQgY2hpbGRyZW46IFtDaGlsZEFjY291bnRJbmZvXSA9IFtdCiAgZm9yIG93bmVkQWRkcmVzcyBpbiBvd25lZEFkZHJlc3NlcyB7CiAgICBpZiBsZXQgbyA9IG1hbmFnZXIuYm9ycm93T3duZWRBY2NvdW50KGFkZHI6IG93bmVkQWRkcmVzcykgewogICAgICBsZXQgZCA9IG8ucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/IAogICAgICBpZiBsZXQgZGlzcGxheSA9IGQgewogICAgICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IG5pbCwgZmlsdGVyRGV0YWlsczogbmlsLCBtYW5hZ2VyRmlsdGVyRGV0YWlsczogbmlsKQogICAgICAgIGNoaWxkcmVuLmFwcGVuZChjaGlsZCkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY2hpbGRyZW4uYXBwZW5kKENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBuaWwsIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogbmlsLCBmaWx0ZXJEZXRhaWxzOiBuaWwsIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBuaWwpKQogICAgfQogIH0KICByZXR1cm4gY2hpbGRyZW4KfQ==",
              "getChildNFTInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogICAgCiAgICBwdWIgc3RydWN0IE5GVEluZm8gewogICAgICBwdWIgbGV0IGlkOiBTdHJpbmcKICAgICAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCiAgICAKICAgICAgaW5pdChpZDogU3RyaW5nLCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICAgICAgc2VsZi5pZCA9IGlkCiAgICAgICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICAgICAgfQogICAgfQogICAgCiAgICBwdWIgc3RydWN0IENoaWxkTkZUSW5mbyB7CiAgICAgIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogICAgICBwdWIgbGV0IGluZm86IFtORlRJbmZvXQogICAgCiAgICAgIGluaXQoYWRkcmVzczogQWRkcmVzcywgaW5mbzogW05GVEluZm9dKSB7CiAgICAgICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgICAgIHNlbGYuaW5mbyA9IGluZm8KICAgICAgfQogICAgfQogICAgCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IENoaWxkTkZUSW5mbyB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIAogICAgICAgIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1R5cGVdfSA9IHt9CiAgICAKICAgICAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgCiAgICAgICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICAgICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgICAgICBsZXQgbmZ0czogW05GVEluZm9dID0gW10KICAgICAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCiAgICAKICAgICAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRdID0gZm91bmRUeXBlcwogICAgCiAgICAgICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgICAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIAogICAgICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZF0gPT0gbmlsIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgCiAgICAgICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKICAgIAogICAgICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5GVEluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9KQogICAgCiAgICAgICAgcmV0dXJuIENoaWxkTkZUSW5mbyhhZGRyZXNzOiBjaGlsZCwgaW5mbzogbmZ0cykKICAgIH0=",
              "sendChildFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSBjYXBSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCgogICAgbGV0IHJlY2VpdmVyUmVmID0gZ2V0QWNjb3VudChyZWNlaXZlcikuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKCiAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtIHZhdWx0KQogIH0KfQ==",
              "sendChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewpwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAKICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykhCgogICAgCiAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PwoKICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgIAogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSBnZXRBY2NvdW50KHJlY2VpdmVyKS5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpIQoKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSBjYXBSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAKICAgIGxldCByZWNlaXZlckFjYyA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikhCiAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkKICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgYXNzZXJ0KHJlY2VpdmVyQ2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgIAogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAKICAgIGxldCByZWNlaXZlckFjYyA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikhCiAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkKICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgYXNzZXJ0KHJlY2VpdmVyQ2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KfQ==",
              "sendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIAogICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICAvLyBsZXQgY29sbFJlZiA9IGFjY3QuYm9ycm93PCZGTE9BVC5Db2xsZWN0aW9uPihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkhCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQogICAgICAgIC5nZXRDYXBhYmlsaXR5KEZMT0FULkZMT0FUQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9Cn0=",
              "sendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikhCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgICAgICAKICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAKICAgICAgICBsZXQgcmVjZWl2ZXJBY2MgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpIQogICAgICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQWNjLmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChyZWNlaXZlckNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IHJlY2VpdmVyQ2FwUmVmID0gcmVjZWl2ZXJDYXAhLmJvcnJvdygpIQoKICAgICAgICByZWNlaXZlckNhcFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9Cn0=",
              "sendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCiAgICAgICAgCiAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IHJlY2VpdmVyKSEKICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQocmVjZWl2ZXJDYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKCiAgICAgICAgcmVjZWl2ZXJDYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "transferChildFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewpwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAKICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykhCgogICAgCiAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PwoKICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgIGlmKGFjY3QuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pID09IG5pbCkgewoKICAgICAgICBhY2N0LnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICBhY2N0LnVubGluaygKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICAgICAgKQoKICAgICAgICBhY2N0Lmxpbms8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICAgICApCgogICAgICAgIGFjY3QudW5saW5rKAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPgogICAgICAgICkKCiAgICAgICAgYWNjdC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgIH0KCgogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSBhY2N0LmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkhCgogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LSB2YXVsdCkKICB9Cn0=",
              "transferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBhY2N0CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KfQ==",
              "transferFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgdHlwZTogVHlwZTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIEZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgbGV0IHZhdWx0UmVmID0gYWNjdC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBjYXBSZWYuZGVwb3NpdChmcm9tOiA8LSB2YXVsdCkKICB9Cn0=",
              "transferFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgYW1vdW50OiBVRml4NjQgKSB7CnByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKIAogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSEKCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlciwgRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+PwoKCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5Qcm92aWRlcikhCgogICAgCiAgICBsZXQgdmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCgogICAgY2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "transferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "transferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKdHJhbnNhY3Rpb24oY2hpbGQ6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUgKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICBtYW5hZ2VyLnJlbW92ZUNoaWxkKGFkZHI6IGNoaWxkKQogICAgfQp9"
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gRGV0ZXJtaW5lcyBpZiBhbiBhY2NvdW50IGlzIHNldCB1cCB3aXRoIGEgU3Rha2luZyBDb2xsZWN0aW9uCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVnaXN0ZXJEZWxlZ2F0b3Iobm9kZUlEOiBpZCwgYW1vdW50OiBhbW91bnQpICAgICAgCiAgICB9Cn0=",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlTmV3VG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgLyA3LjAgKiAzNjUuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
              "getApyWeekly": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgKiA1NC4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getDelegatesIndo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIHB1YiBsZXQgZGVsZWdhdG9ySUQ6IFVJbnQzMgogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCgogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgcHViIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgaW5pdChkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbykgewogICAgICAgIHNlbGYuZGVsZWdhdG9ySUQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICAgICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JJbmZvLm5vZGVJRCkKICAgICAgICBzZWxmLmRlbGVnYXRlZE5vZGVJbmZvID0gbm9kZUluZm8KICAgICAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYucmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zID0gc2VsZi50b2tlbnNVbnN0YWtlZCArIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZGVsZWdhdG9ySURzOiBbRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkRlbGVnYXRvcklEc10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0RGVsZWdhdG9ySURzKGFkZHJlc3M6IGFjY291bnQpCgogICAgbGV0IGZvcm1hdHRlZERlbGVnYXRvckluZm86IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319ID0ge30KCiAgICBmb3IgZGVsZWdhdG9ySUQgaW4gZGVsZWdhdG9ySURzIHsKICAgICAgICBpZiBsZXQgX2Zvcm1hdHRlZERlbGVnYXRvckluZm8gPSBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRF0gPSBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gPSB7IGRlbGVnYXRvcklELmRlbGVnYXRvcklEOiBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyl9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvCn0=",
              "getDelegatesInfoArray": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweEZsb3dUYWJsZVN0YWtpbmcKLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4U3Rha2luZ0NvbGxlY3Rpb24KICAgICAgICAKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dIHsKCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBnZXRBY2NvdW50KGFjY291bnQpCiAgICAgICAgLmdldENhcGFiaWxpdHk8JntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PihGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIC5ib3Jyb3coKQogICAgICAgID8/IHBhbmljKCJjYW5ub3QgYm9ycm93IHJlZmVyZW5jZSB0byBhY2N0LlN0YWtpbmdDb2xsZWN0aW9uIikKCiAgICByZXR1cm4gc3Rha2luZ0NvbGxlY3Rpb25SZWYuZ2V0QWxsRGVsZWdhdG9ySW5mbygpCn0=",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YT8gewogIHJldHVybiBGbG93RXBvY2guZ2V0RXBvY2hNZXRhZGF0YShlcG9jaENvdW50ZXIpCn0=",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcpOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpCn0=",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvIHsKCiAgICBwdWIgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlQ291bnQ6IFVJbnQ2NAoKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBzdGFrZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGluaXQoYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dLCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10pIHsKCiAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBVSW50NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBVSW50NjQoMCkKCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBzZWxmLm5vZGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICAgICAgZm9yIGRlbGVnYXRlSW5mbyBpbiBhbGxEZWxlZ2F0ZUluZm8gewogICAgICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBzZWxmLmRlbGVnYXRlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbz8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsRGVsZWdhdG9ySW5mbyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIHJldHVybiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8oYWxsTm9kZUluZm86IGFsbE5vZGVJbmZvLCBhbGxEZWxlZ2F0ZUluZm86IGFsbERlbGVnYXRlSW5mbykKfQ==",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKcHViIHN0cnVjdCBTdGFrZUluZm8gewogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIHB1YiBsZXQgbmV0d29ya2luZ0tleTogU3RyaW5nCiAgICBwdWIgbGV0IHN0YWtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAoKICAgIHB1YiBsZXQgZGVsZWdhdG9yczogW1VJbnQzMl0KICAgIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICAgIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zRGVsZWdhdGVkOiBVRml4NjQKICAgIHB1YiBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgbWFjaGluZUFjY291bnRCYWxhbmNlOiBVRml4NjQ/CgogICAgaW5pdChub2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm8/KSB7CiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgICAgIHNlbGYubmV0d29ya2luZ0tleSA9IG5vZGVJbmZvLm5ldHdvcmtpbmdLZXkKICAgICAgICBzZWxmLnN0YWtpbmdLZXkgPSBub2RlSW5mby5zdGFraW5nS2V5CiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAoKICAgICAgICBzZWxmLmRlbGVnYXRvcnMgPSBub2RlSW5mby5kZWxlZ2F0b3JzCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdGFrZUluZm99PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGZvcm1hdHRlZE5vZGVJbmZvOiB7U3RyaW5nOiBTdGFrZUluZm99ID0ge30KICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBtYWNoaW5lQWNjb3VudHM6IHtTdHJpbmc6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm99ID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldE1hY2hpbmVBY2NvdW50cyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgZm9ybWF0dGVkTm9kZUluZm9bbm9kZUluZm8uaWRdID0gU3Rha2VJbmZvKG5vZGVJbmZvOiBub2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBtYWNoaW5lQWNjb3VudHNbbm9kZUluZm8uaWRdKQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWROb2RlSW5mbwp9",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgcmV3YXJkZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlUmV3YXJkZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyB1bnN0YWtlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBzZXRzIHVwIGFuIGFjY291bnQgdG8gdXNlIGEgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBJdCB3aWxsIHdvcmsgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgaGF2ZSBhIHJlZ3VsYXIgYWNjb3VudCwgYSB0d28tYWNjb3VudCBsb2NrZWQgdG9rZW5zIHNldHVwLAovLy8gb3Igc3Rha2luZyBvYmplY3RzIHN0b3JlZCBpbiB0aGUgdW5sb2NrZWQgYWNjb3VudAoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmxpbms8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oL3ByaXZhdGUvZmxvd1Rva2VuSG9sZGVyLCB0YXJnZXQ6IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgbGV0IGZsb3dUb2tlbiA9IHNpZ25lci5saW5rPCZGbG93VG9rZW4uVmF1bHQ+KC9wcml2YXRlL2Zsb3dUb2tlblZhdWx0LCB0YXJnZXQ6IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KSEKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBTdGFraW5nIENvbGxlY3Rpb24gYW5kIHB1dCBpdCBpbiBzdG9yYWdlCiAgICAgICAgICAgIGlmIGxvY2tlZEhvbGRlci5jaGVjaygpIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IG5pbCksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGxpbmsgdG8gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgICAgICBzaWduZXIubGluazwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9ue0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KAogICAgICAgICAgICAgICAgRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCwKICAgICAgICAgICAgICAgIHRhcmdldDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IG5vZGUgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIubG9hZDxARmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkRGVsZWdhdG9yT2JqZWN0KDwtZGVsZWdhdG9yKQogICAgICAgIH0KICAgIH0KfQ==",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3RzIHVuc3Rha2luZyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5yZXF1ZXN0VW5zdGFraW5nKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RlVOR0lCTEVUT0tFTkFERFJFU1MKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4RkxPV1RPS0VOQUREUkVTUwppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMT0NLRURUT0tFTkFERFJFU1MKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IGhvbGRlclJlZjogJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyByZXdhcmRlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Jld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgdW5zdGFrZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdCBpZiBpdCBpcyB0aGVyZQoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ=="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgovLyB0b2RvIHdpdGggdmFyCnRyYW5zYWN0aW9uIHsKCnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgaWYoc2lnbmVyLmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KSA9PSBuaWwpIHsKICAgICAgICBzaWduZXIuc2F2ZSg8LTxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgIH0KCiAgICAgICAgc2lnbmVyLnVubGluaygKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICAgICAgKQoKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKCiAgICAgICAgc2lnbmVyLnVubGluaygKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4KICAgICAgICApCgogICAgICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgIH0KfQ==",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0YXJnZXRQYXRoOiBTdHJpbmc/KSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoLnRvU3RyaW5nKCksIHRhcmdldFBhdGg6IHRhcmdldFBhdGgpCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICB9CgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQcml2YXRlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQcml2YXRlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHJpdmF0ZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBBIHdvcmthcm91bmQgbWV0aG9kCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiBmYWxzZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBwdWIgbGV0IGlzQ29sbGVjdGlvbkNhcDogQm9vbAogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCgogIHB1YiBsZXQgaXNCYWxhbmNlQ2FwOiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8sIAogICAgaXNDb2xsZWN0aW9uQ2FwOiBCb29sLCAKICAgIHRva2VuSURzOiBbVUludDY0XSwKICAgIGlzQmFsYW5jZUNhcDogQm9vbCwKICAgIGJhbGFuY2U6IFVGaXg2ND8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICAgIHNlbGYuaXNDb2xsZWN0aW9uQ2FwID0gaXNDb2xsZWN0aW9uQ2FwCiAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgIHNlbGYuaXNCYWxhbmNlQ2FwID0gaXNCYWxhbmNlQ2FwCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGxldCBiYWxhbmNlQ2FwVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwmQW55UmVzb3VyY2V7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PigpCgogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCiAgICB2YXIgaXNDb2xsZWN0aW9uQ2FwID0gZmFsc2UKICAgIHZhciBpc0JhbGFuY2VDYXAgPSBmYWxzZQogICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAoKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGJhbGFuY2VDYXBUeXBlKSkgewogICAgICBpc0JhbGFuY2VDYXAgPSB0cnVlCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQoKICAgICAgaWYgbGV0IHZhdWx0ID0gdmF1bHRSZWYgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0LmJhbGFuY2UKICAgICAgfQogICAgfSBlbHNlIGlmICh0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpKSB7CiAgICAgIGlzQ29sbGVjdGlvbkNhcCA9IHRydWUKICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHkocGF0aCkKICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uUmVmIHsKICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgfQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoLAogICAgICBpc0NvbGxlY3Rpb25DYXA6IGlzQ29sbGVjdGlvbkNhcCwKICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICBpc0JhbGFuY2VDYXA6IGlzQmFsYW5jZUNhcCwKICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQdWJsaWNQYXRoXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBjbGVhbmRQYXRoczogW1B1YmxpY1BhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnB1YmxpY1BhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdG9yYWdlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQuc3RvcmFnZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCBpc1Jlc291cmNlOiBCb29sCiAgcHViIGxldCBpc05GVENvbGxlY3Rpb246IEJvb2wKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCiAgcHViIGxldCBpc1ZhdWx0OiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0eXBlOiBUeXBlLCBpc1Jlc291cmNlOiBCb29sLCAKICAgIGlzTkZUQ29sbGVjdGlvbjogQm9vbCwgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LAogICAgdG9rZW5JRHM6IFtVSW50NjRdLCBpc1ZhdWx0OiBCb29sLCBiYWxhbmNlOiBVRml4NjQ/KSB7CiAgICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgICAgc2VsZi5wYXRoID0gcGF0aAogICAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICAgIHNlbGYuaXNSZXNvdXJjZSA9IGlzUmVzb3VyY2UKICAgICAgc2VsZi5pc05GVENvbGxlY3Rpb24gPSBpc05GVENvbGxlY3Rpb24KICAgICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgICAgc2VsZi5pc1ZhdWx0ID0gaXNWYXVsdAogICAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkZW50aWZpZXJzOiBbU3RyaW5nXSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBpZGVudGlmaWVyIGluIHBhdGhJZGVudGlmaWVycyB7CiAgICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgaXNORlRDb2xsZWN0aW9uIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGlzVmF1bHQgPSB0eXBlLmlzU3VidHlwZShvZjogdmF1bHRUeXBlKSAKICAgICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKICAgICAgaWYgaXNWYXVsdCB7CiAgICAgICAgaWYgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdFJlZi5iYWxhbmNlCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICBpc1Jlc291cmNlOiBpc1Jlc291cmNlLAogICAgICAgIGlzTkZUQ29sbGVjdGlvbjogaXNORlRDb2xsZWN0aW9uLAogICAgICAgIGRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5LAogICAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgICBpc1ZhdWx0OiBpc1ZhdWx0LAogICAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICAgKQoKICAgICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICB9CiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVJlc291cmNlPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aFN0cikhCiAgcmV0dXJuIGFjY291bnQuYm9ycm93PCZBbnlSZXNvdXJjZT4oZnJvbTogcGF0aCkKfQ==",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVN0cnVjdD8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55U3RydWN0Pihmcm9tOiBwYXRoKQp9"
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkIGZyb20gMHhGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgU3dpdGNoYm9hcmRJbmZvIHsKICBwdWIgbGV0IHZhdWx0VHlwZXM6IFtUeXBlXQoKICBpbml0KHZhdWx0VHlwZXM6IFtUeXBlXSkgewogICAgc2VsZi52YXVsdFR5cGVzID0gdmF1bHRUeXBlcwogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTd2l0Y2hib2FyZEluZm8/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgaWYgbGV0IGJvYXJkID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5Td2l0Y2hib2FyZD4oZnJvbTogRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkLlN0b3JhZ2VQYXRoKSB7CiAgICBsZXQgdHlwZXMgPSBib2FyZC5nZXRWYXVsdFR5cGVzKCkKICAgIHJldHVybiBTd2l0Y2hib2FyZEluZm8odmF1bHRUeXBlczogdHlwZXMpCiAgfQogIHJldHVybiBuaWwKfQ=="
            },
            "nft": {
              "checkNFTListEnabledNew": "",
              "checkNFTListEnabled": ""
            }
          },
          "mainnet": {
            "version": "0.42",
            "basic": {
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICBsZXQga2V5OiBQdWJsaWNLZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCiAgICAgICAgc2lnbmVyLmtleXMuYWRkKAogICAgICAgICAgICBwdWJsaWNLZXk6IGtleSwKICAgICAgICAgICAgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29yaXRobSkhLAogICAgICAgICAgICB3ZWlnaHQ6IHdlaWdodAogICAgICAgICkKICAgIH0KfQoK",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGaWF0VG9rZW4gZnJvbSAweEZpYXRUb2tlbgppbXBvcnQgc3RGbG93VG9rZW4gZnJvbSAweHN0Rmxvd1Rva2VuCgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewoJcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgkJbGV0IGFjY291bnQgPSBBdXRoQWNjb3VudChwYXllcjogc2lnbmVyKQoKCQkvLyBhZGQgYWxsIHRoZSBrZXlzIHRvIHRoZSBhY2NvdW50CgkJZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKCQkJYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCgkJfQoJCQoJCS8vIGFkZCBjb250cmFjdHMgaWYgcHJvdmlkZWQKCQlmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewoJCQlhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQoJCX0KCiAgICAgICAgLy8gYWRkIFVTREMgVmF1bHQKICAgICAgICBsZXQgdXNkY1ZhdWx0IDwtIEZpYXRUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBhY2NvdW50LnNhdmUoPC11c2RjVmF1bHQsIHRvOiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgYWNjb3VudC5saW5rPCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KEZpYXRUb2tlbi5WYXVsdFJlY2VpdmVyUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKICAgICAgICBhY2NvdW50Lmxpbms8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihGaWF0VG9rZW4uVmF1bHRCYWxhbmNlUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgLy8gc3RGbG93CiAgICAgICAgbGV0IHN0Rmxvd1ZhdWx0IDwtIHN0Rmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGFjY291bnQuc2F2ZSg8LXZhdWx0LCB0bzogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc3RGbG93VG9rZW4udG9rZW5SZWNlaXZlclBhdGgsIHRhcmdldDogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihzdEZsb3dUb2tlbi50b2tlbkJhbGFuY2VQYXRoLCB0YXJnZXQ6IHN0Rmxvd1Rva2VuLnRva2VuVmF1bHRQYXRoKQoKCX0KfQ==",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMKaW1wb3J0IHN0Rmxvd1Rva2VuIGZyb20gMHhkNmY4MDU2NTE5M2FkNzI3Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewoJcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgkJbGV0IGFjY291bnQgPSBBdXRoQWNjb3VudChwYXllcjogc2lnbmVyKQoKCQkvLyBhZGQgYWxsIHRoZSBrZXlzIHRvIHRoZSBhY2NvdW50CgkJZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKCQkJYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCgkJfQoJCQoJCS8vIGFkZCBjb250cmFjdHMgaWYgcHJvdmlkZWQKCQlmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewoJCQlhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQoJCX0KCiAgICAgICAgLy8gYWRkIFVTREMgVmF1bHQKICAgICAgICBsZXQgdXNkY1ZhdWx0IDwtIEZpYXRUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBhY2NvdW50LnNhdmUoPC11c2RjVmF1bHQsIHRvOiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgYWNjb3VudC5saW5rPCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KEZpYXRUb2tlbi5WYXVsdFJlY2VpdmVyUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKICAgICAgICBhY2NvdW50Lmxpbms8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihGaWF0VG9rZW4uVmF1bHRCYWxhbmNlUHViUGF0aCwgdGFyZ2V0OiBGaWF0VG9rZW4uVmF1bHRTdG9yYWdlUGF0aCkKCiAgICAgICAgLy8gc3RGbG93CiAgICAgICAgbGV0IHN0Rmxvd1ZhdWx0IDwtIHN0Rmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGFjY291bnQuc2F2ZSg8LXZhdWx0LCB0bzogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc3RGbG93VG9rZW4udG9rZW5SZWNlaXZlclBhdGgsIHRhcmdldDogc3RGbG93VG9rZW4udG9rZW5WYXVsdFBhdGgpCiAgICAgICAgYWNjb3VudC5saW5rPCZzdEZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PihzdEZsb3dUb2tlbi50b2tlbkJhbGFuY2VQYXRoLCB0YXJnZXQ6IHN0Rmxvd1Rva2VuLnRva2VuVmF1bHRQYXRoKQoJfQp9",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgc3RvcmFnZVVzZWQ6IFVJbnQ2NAogIHB1YiBsZXQgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsCiAgICBiYWxhbmNlOiBVRml4NjQsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQsCiAgICBzdG9yYWdlVXNlZDogVUludDY0LAogICAgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICAgIHNlbGYuYXZhaWxhYmxlQmFsYW5jZSA9IGF2YWlsYWJsZUJhbGFuY2UKICAgIHNlbGYuc3RvcmFnZVVzZWQgPSBzdG9yYWdlVXNlZAogICAgc2VsZi5zdG9yYWdlQ2FwYWNpdHkgPSBzdG9yYWdlQ2FwYWNpdHkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIFJlc3VsdCgKICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcywKICAgIGJhbGFuY2U6IGFjY291bnQuYmFsYW5jZSwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IGFjY291bnQuYXZhaWxhYmxlQmFsYW5jZSwKICAgIHN0b3JhZ2VVc2VkOiBhY2NvdW50LnN0b3JhZ2VVc2VkLAogICAgc3RvcmFnZUNhcGFjaXR5OiBhY2NvdW50LnN0b3JhZ2VDYXBhY2l0eQogICkKfQ==",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCB1c2RDYXA6IFVJbnQ2NCA9IGFjY291bnQuc3RvcmFnZVVzZWQKCiAgbGV0IG1pbkZsb3cgPSBVRml4NjQodXNkQ2FwKSAqIDAuMDAwMDAwMDIKICBpZiBtaW5GbG93ID4gMC4wMDEgewogICAgcmV0dXJuIG1pbkZsb3cKICB9IGVsc2UgewogICAgcmV0dXJuIDAuMDAxCiAgfQp9",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKICAgICAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAKICAgIHJldHVybiBsb2NrZWRCYWxhbmNlICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gVUZpeDY0KDApCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZQp9",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdW5sb2NrZWRWYXVsdCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSEKICAgICAgLmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgIGlmIGxvY2tlZEJhbGFuY2UgPT0gVUZpeDY0KDApIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CgogICAgaWYgbG9ja2VkQmFsYW5jZVVubG9ja2VkID4gbG9ja2VkQmFsYW5jZSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZSArIGxvY2tlZEJhbGFuY2UKICAgIH0KCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZVVubG9ja2VkICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAovL0NoZWNrIHRoZSBzdGF0dXMgb2YgYSBmaW4gdXNlcgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nKSA6IEFkZHJlc3M/IHsKICAgIGxldCBzdGF0dXM9RklORC5zdGF0dXMobmFtZSkKICAgIHJldHVybiBzdGF0dXMub3duZXIKfQ==",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogU3RyaW5nP3sKcmV0dXJuIEZJTkQucmV2ZXJzZUxvb2t1cChhZGRyZXNzKQp9",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBBZGRyZXNzPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1laGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnZhciBhZGRyZXNzID0gRG9tYWlucy5nZXRSZWNvcmRzKG5hbWVoYXNoKQpyZXR1cm4gYWRkcmVzcwp9",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwovLyBhZGRyZXNzOiBGbG93IGFkZHJlc3MKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW0RvbWFpbnMuRG9tYWluRGV0YWlsXSB7CmxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQpsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCmxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKbGV0IGRvbWFpbnM6W0RvbWFpbnMuRG9tYWluRGV0YWlsXSA9IFtdCmxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgpmb3IgaWQgaW4gaWRzIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpCiAgICBsZXQgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCiAgICBkb21haW5zLmFwcGVuZChkZXRhaWwpCn0KCnJldHVybiBkb21haW5zCn0=",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgcHViIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOiB7U3RyaW5nOiBVSW50NjR9IHsKICAgIGxldCBhY2N0ID0gZ2V0QWNjb3VudChhZGRyKQogICAgbGV0IHJldDoge1N0cmluZzogVUludDY0fSA9IHt9CiAgICByZXRbImNhcGFjaXR5Il0gPSBhY2N0LnN0b3JhZ2VDYXBhY2l0eQogICAgcmV0WyJ1c2VkIl0gPSBhY2N0LnN0b3JhZ2VVc2VkCiAgICByZXRbImF2YWlsYWJsZSJdID0gYWNjdC5zdG9yYWdlQ2FwYWNpdHkgLSBhY2N0LnN0b3JhZ2VVc2VkCiAgICByZXR1cm4gcmV0Cn0=",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSBjYXBhYmlsaXR5IikKCiAgICByZXR1cm4gdmF1bHRSZWYuYmFsYW5jZQp9",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleTogU3RyaW5nKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHZhciBmbGFnID0gZmFsc2UKICBmdW4gYWNjb3VudEZuKGFjY291bnRLZXk6IEFjY291bnRLZXkpOiBCb29sIHsKICAgIGxldCBrZXkgPSBTdHJpbmcuZW5jb2RlSGV4KGFjY291bnRLZXkucHVibGljS2V5LnB1YmxpY0tleSkKICAgIGlmIHB1YmxpY0tleSA9PSBrZXkgewogICAgICBmbGFnID0gYWNjb3VudEtleS53ZWlnaHQgPj0gVUZpeDY0KDEwMDApICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZAogICAgfQogICAgcmV0dXJuIGZhbHNlCiAgfQogIGFjY291bnQua2V5cy5mb3JFYWNoKGFjY291bnRGbikKCiAgcmV0dXJuIGZsYWcKfQo=",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleXM6IFtTdHJpbmddKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHZhciB3ZWlnaHQ6IFVGaXg2NCA9IDAuMAogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5cy5jb250YWlucyhrZXkpICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZCB7CiAgICAgIHdlaWdodCA9IHdlaWdodCArIGFjY291bnRLZXkud2VpZ2h0CiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gd2VpZ2h0ID49IFVGaXg2NCgxMDAwKQp9Cg==",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmdldENhcGFiaWxpdHkKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJ7TG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvfT4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiBmYWxzZQogICAgfQogICAgcmV0dXJuIHRydWUKfQ==",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIC5nZXRDYXBhYmlsaXR5PCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmNoZWNrKCkKICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgLmdldENhcGFiaWxpdHk8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oPFRva2VuQmFsYW5jZVBhdGg+KQogICAgLmNoZWNrKCkKICAgIHJldHVybiByZWNlaXZlciAmJiBiYWxhbmNlCn0=",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCnB1YiBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpID8/IG5pbAogICAgCiAgICAKICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgIH0KICAgIAogICAgcmV0dXJuIDAuMAp9CgpwdWIgZnVuIG1haW4oYWRkcnM6W0FkZHJlc3NdKTogW1VGaXg2NF0gewogICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgZm9yIGFkZHIgaW4gYWRkcnMgewogICAgbGV0IGJhbCA9IGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyKQogICAgYmFscy5hcHBlbmQoYmFsKQogICB9CgogICAgcmV0dXJuIGJhbHMKfQ==",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCgpwdWIgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgIAogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICB9CiAgICAKICAgIHJldHVybiAwLjAKfQoKcHViIGZ1biBtYWluKGFkZHJzOltBZGRyZXNzXSk6IFtVRml4NjRdIHsKICAgbGV0IGJhbHM6IFtVRml4NjRdID0gW10KCiAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgIGxldCBiYWwgPSBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcikKICAgIGJhbHMuYXBwZW5kKGJhbCkKICAgfQoKICAgIHJldHVybiBiYWxzCn0=",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihpbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICAvLyBHZXQgYSBrZXkgZnJvbSBhbiBhdXRoIGFjY291bnQuCiAgICAgICAgbGV0IGtleUEgPSBzaWduZXIua2V5cy5yZXZva2Uoa2V5SW5kZXg6IGluZGV4KQogICAgfQp9",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGFtb3VudDogVUZpeDY0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCgogICAgICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgICAgIHBhbmljKCJDb3VsZCBub3QgZ2V0IGZsb3cgbG9ja2VkIHRva2VuIHZhdWx0IikKICAgICAgICB9CgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgICAgICAvLyBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgLy8gICAgIHBhbmljKCJOb3QgZW5vdWdoIGFtb3VudCB0byB3aXRoZHJhdyIpCiAgICAgICAgLy8gfQoKICAgICAgICBzZWxmLmFtb3VudCA9IGxvY2tlZEJhbGFuY2VVbmxvY2tlZAogICAgCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBzZWxmLmFtb3VudCkpCiAgICB9Cn0=",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgp0cmFuc2FjdGlvbigpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5ob2xkZXJSZWYgPSBhY2N0LmJvcnJvdzwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gVG9rZW5Ib2xkZXIiKQoKICAgICAgICBzZWxmLnZhdWx0UmVmID0gYWNjdC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0="
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MsIHRhcmdldDogQWRkcmVzcyk6ICZGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSB7CiAgICByZXR1cm4gY29sbGVjdGlvbi5ib3Jyb3dQdWJsaWNBY2NvdW50Qm9va21hcmsoYWRkcmVzczogdGFyZ2V0KQogIH0gCgogIHJldHVybiBuaWwKfQ==",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MpOiAme0FkZHJlc3M6IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9fT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYWNjb3VudCBib29rbWFyayBjb2xsZWN0aW9uIikKCiAgcmV0dXJuIGNvbGxlY3Rpb24uZ2V0QWNjb3VudEJvb2ttYXJrcygpCn0="
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKICAgIC8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KICAgIC8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCiAgICBwdWIgZnVuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oPFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgIC5jaGVjaygpCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgcmV0dXJuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIGlmIHNpZ25lci5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSA9PSBuaWwgewogICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgc2lnbmVyLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICB9CiAgICBpZiAoc2lnbmVyLmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgIHNpZ25lci51bmxpbmsoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICBzaWduZXIubGluazwmPENvbGxlY3Rpb25QdWJsaWNUeXBlPj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPiwgdGFyZ2V0OiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIH0KICAgIH0KfQ==",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKcHViIGZ1biBtYWluKCk6IHtTdHJpbmcgOiB7U3RyaW5nIDogQm9vbH19IHsKICBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ1R5cGVEYXRhKCkKICByZXR1cm4gY2F0YWxvZwp9",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBWaWV3SW5mbyB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBwdWIgbGV0IHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0KICBwdWIgbGV0IHJhcml0eTogU3RyaW5nPwoKICBpbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiBBbnlTdHJ1Y3R7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgIH0KCiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICApCiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKcHViIGZ1biBtYWluKGNvbGxlY3Rpb25JZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gewogIGxldCByZXM6IHtTdHJpbmc6IE5GVENhdGFsb2cuTkZUQ2F0YWxvZ01ldGFkYXRhfSA9IHt9CiAgZm9yIGNvbGxlY3Rpb25JRCBpbiBjb2xsZWN0aW9uSWRlbnRpZmllcnMgewogICAgICBpZiBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ0VudHJ5KGNvbGxlY3Rpb25JZGVudGlmaWVyOiBjb2xsZWN0aW9uSUQpIHsKICAgICAgICByZXNbY29sbGVjdGlvbklEXSA9IGNhdGFsb2cKICAgICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgcHViIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCnB1YiBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgcHViIGxldCBpZDogU3RyaW5nCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCnB1YiBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZyk6IE5GVENvbGxlY3Rpb24gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHN0b3JhZ2VQYXRoSUQpIQogIGxldCBjb2xsZWN0aW9uID0gYWNjb3VudC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBwdWIgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKcHViIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0b3JhZ2VQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IHZhdWx0VHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIAogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIQogIHJldHVybiBORlRDb2xsZWN0aW9uKAogICAgaWQ6IGFjY291bnQudHlwZShhdDogcGF0aCkhLmlkZW50aWZpZXIsCiAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHBhdGg6IHBhdGgpLAogICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgKQp9",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBWaWV3SW5mbyB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBwdWIgbGV0IHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0KICBwdWIgbGV0IHJhcml0eTogU3RyaW5nPwogIHB1YiBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpCiAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgfQoKICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgIGlmIGxldCBjRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gY0Rpc3BsYXkKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXkKICAgICAgKQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogc3RvcmFnZVBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgcHViIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBwdWIgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBwdWIgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBwdWIgbGV0IHB1YmxpY0NvbGxlY3Rpb246IFR5cGUKICBwdWIgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKICBwdWIgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSUQ6IFVJbnQ2NCk6IHtTdHJpbmc6IEFueVN0cnVjdH0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KGZyb206IHBhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVChpZDogdG9rZW5JRCkKCiAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogIH0KCiAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogIH0KCiAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICB9CgogIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogIH0KCiAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgfQoKICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgfQoKICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICB9CgogIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgfQoKICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICB9CgogIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQoKICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICBzdG9yYWdlUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgsCiAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgKQogICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogIH0KCiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXInJ3MgTkZUIGNvbGxlY3Rpb24KICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyCiAgICAuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IC9zdG9yYWdlL01vbWVudENvbGxlY3Rpb24pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXInJ3MgY29sbGVjdGlvbiIpCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRSZWYgPSByZWNpcGllbnQKICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvTW9tZW50Q29sbGVjdGlvbikKICAgIC5ib3Jyb3c8JntUb3BTaG90Lk1vbWVudENvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKCiAgfSAgIAp9",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCi8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgoKdHJhbnNhY3Rpb24ocmVjaXBpZW50OiBBZGRyZXNzLCB3aXRoZHJhd0lEOiBVSW50NjQpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgICAgICAgICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSByZWNpcGllbnQKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICB9Cn0="
            },
            "contract": {
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdHJpbmddIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICByZXR1cm4gYWNjb3VudC5jb250cmFjdHMubmFtZXMKfQ=="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OlN0cmluZywga2V5OlN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9CnZhciB2YXVsdFJlZjogJjxUb2tlbj4uVmF1bHQKcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQoKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkgCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0/ID0gbmlsCiAgICBsZXQgY29sbGVjdGlvblByaXZhdGUgPSBhY2NvdW50LmJvcnJvdzwme0RvbWFpbnMuQ29sbGVjdGlvblByaXZhdGV9Pihmcm9tOiBEb21haW5zLkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBmaW5kIHlvdXIgZG9tYWluIGNvbGxlY3Rpb24gY2FwIikKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQogICAgaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQoKICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgIGlmIHZhdWx0UmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+LAogICAgICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQogICAgc2VsZi52YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICB9IGVsc2UgewogICAgc2VsZi52YXVsdFJlZiA9IHZhdWx0UmVmIQogICAgfQp9CmV4ZWN1dGUgewogICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3VmF1bHQoa2V5OiBrZXksIGFtb3VudDogYW1vdW50KSkKfQp9",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBrZXkgd2lsbCBiZSAnQS5mOGQ2ZTA1ODZiMGEyMGM3LkRvbWFpbnMuQ29sbGVjdGlvbicgb2YgYSBORlQgY29sbGVjdGlvbgp0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZywga2V5OiBTdHJpbmcsIGl0ZW1JZDogVUludDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgY29sbGVjdGlvblJlZjogJjxORlQ+LkNvbGxlY3Rpb24KcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9bmlsIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQogICAgc2VsZi5kb21haW4gPSBkb21haW4hCgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIGFjY291bnQubGluazwmPENvbGxlY3Rpb25QdWJsaWNUeXBlPj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPiwgdGFyZ2V0OiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPik/PyBwYW5pYygiQ2FuIG5vdCBib3Jyb3cgY29sbGVjdGlvbiIpCiAgICB9IGVsc2UgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmID0gY29sbGVjdGlvblJlZiEKICAgIH0KCn0KZXhlY3V0ZSB7CiAgICBzZWxmLmNvbGxlY3Rpb25SZWYuZGVwb3NpdCh0b2tlbjogPC0gc2VsZi5kb21haW4ud2l0aGRyYXdORlQoa2V5OiBrZXksIGl0ZW1JZDogaXRlbUlkKSkKfQp9",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZyk6IEFkZHJlc3M/IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0QWRkcmVzc09mRG9tYWluKG5hbWU6IG5hbWUsIHJvb3Q6IHJvb3QpCn0=",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogU3RyaW5nfSB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldERlZmF1bHREb21haW5zT2ZBZGRyZXNzKGFkZHJlc3MpCn0=",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBTdHJpbmcpOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1lSGFzaCkgPz8gcGFuaWMoIkRvbWFpbiBub3QgZXhpc3QiKQpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCnZhciBkZXRhaWw6IERvbWFpbnMuRG9tYWluRGV0YWlsPyA9IG5pbAoKbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQhKQogICAgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCn0KCnJldHVybiBkZXRhaWwKfQoKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZywgcm9vdDogU3RyaW5nKSA6IERvbWFpbnMuRG9tYWluRGV0YWlsPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1lSGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnJldHVybiBnZXREZXRhaWwobmFtZUhhc2g6IG5hbWVIYXNoKQp9",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgIGxldCBzZW5kZXJSZWYgPSBzaWduZXIKICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgaWYgcmVjaXBpZW50UmVmID09IG5pbCB7CiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgIGRlZmF1bHREb21haW4gPSBkb21haW4KICAgICAgICB9CiAgICB9CiAgICBsZXQgdHlwZUtleSA9IGNvbGxlY3Rpb25SZWYuZ2V0VHlwZSgpLmlkZW50aWZpZXIKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIGRlZmF1bHREb21haW4hLmFkZENvbGxlY3Rpb24oY29sbGVjdGlvbjogPC0gY29sbGVjdGlvbikKICAgIH0KICAgIGRlZmF1bHREb21haW4hLmRlcG9zaXRORlQoa2V5OiB0eXBlS2V5LCB0b2tlbjogPC0gbmZ0LCBzZW5kZXJSZWY6IHNlbmRlclJlZiApCiAgICB9IGVsc2UgewogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ=="
            },
            "ft": {
              "addToken": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\ntransaction {\n    prepare(signer: AuthAccount) {\n        if(signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>) != nil) {\n            return\n        }\n        signer.save(<-<Token>.createEmptyVault(), to: <TokenStoragePath>)\n        \n        signer.link<&<Token>.Vault{FungibleToken.Receiver}>(\n            <TokenReceiverPath>,\n                target: <TokenStoragePath>\n        )\n        \n        signer.link<&<Token>.Vault{FungibleToken.Balance}>(\n            <TokenBalancePath>,\n                target: <TokenStoragePath>\n        )\n    }\n}",
              "enableTokenStorage": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\nprepare(signer: AuthAccount) {\n    if(signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>) == nil) {\n    signer.save(<-<Token>.createEmptyVault(), to: <TokenStoragePath>)\n    }\n\n    signer.unlink(\n    <TokenReceiverPath>\n    )\n\n    signer.link<&<Token>.Vault{FungibleToken.Receiver}>(\n    <TokenReceiverPath>,\n    target: <TokenStoragePath>\n    )\n\n    signer.unlink(\n    <TokenBalancePath>\n    )\n\n    signer.link<&<Token>.Vault{FungibleToken.Balance}>(\n    <TokenBalancePath>,\n    target: <TokenStoragePath>\n    )\n}\n}",
              "transferTokens": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @FungibleToken.Vault\n\n    prepare(signer: AuthAccount) {\n    // Get a reference to the signer's stored vault\n    let vaultRef = signer.borrow<&<Token>.Vault>(from: <TokenStoragePath>)\n        ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n    // Withdraw tokens from the signer's stored vault\n    self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n    // Get the recipient's public account object\n    let recipientAccount = getAccount(recipient)\n\n    // Get a reference to the recipient's Receiver\n    let receiverRef = recipientAccount.getCapability(<TokenReceiverPath>)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n    // Deposit the withdrawn tokens in the recipient's receiver\n    receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "isTokenListEnabled": "",
              "isLinkedAccountTokenListEnabled": "",
              "getTokenListBalance": ""
            },
            "hybridCustody": {
              "batchSendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQogICAgfQp9",
              "batchSendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIC8vIGxldCBjb2xsUmVmID0gYWNjdC5ib3Jyb3c8JkZMT0FULkNvbGxlY3Rpb24+KGZyb206IEZMT0FULkZMT0FUQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSEKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgLmdldENhcGFiaWxpdHkoRkxPQVQuRkxPQVRDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KCiAgICB9Cn0=",
              "batchSendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikhCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgICAgICAKICAgICAgICAKICAgICAgICBsZXQgcmVjZWl2ZXJBY2MgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpIQogICAgICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQWNjLmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChyZWNlaXZlckNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IHJlY2VpdmVyQ2FwUmVmID0gcmVjZWl2ZXJDYXAhLmJvcnJvdygpIQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgICAgICB9CiAgICB9Cn0=",
              "batchSendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCiAgICAgICAgCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IHJlY2VpdmVyKSEKICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQocmVjZWl2ZXJDYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICByZWNlaXZlckNhcFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQogICAgfQp9",
              "batchTransferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBhY2N0CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KICAgIH0KfQ==",
              "batchTransferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGFjY3QKICAgICAgICAgICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpICAgICAgIAogICAgICAgIAogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICAgICAgfQoKICAgIH0KfQ==",
              "batchTransferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgY2FwUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgICAgICB9CiAgICB9Cn0=",
              "batchTransferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKICAgICAgICAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgICAgIH0KICAgIH0KfQ==",
              "checkChildLinkedCollections": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedVaults": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgcGF0aDogU3RyaW5nKTogQm9vbCB7CiAgbGV0IG1nciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBtYW5hZ2VyIGZyb20gcGFyZW50IikKICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgbGV0IGNhcCA9IGNoaWxkLmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KICAKICByZXR1cm4gY2FwICE9IG5pbAp9IAogICAg",
              "checkChildLinkedVaultsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgcGF0aDogU3RyaW5nKTogQm9vbCB7CiAgbGV0IG1nciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBtYW5hZ2VyIGZyb20gcGFyZW50IikKICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgbGV0IGNhcCA9IGNoaWxkLmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KICAKICByZXR1cm4gY2FwICE9IG5pbAp9IAogICAg",
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyZXNzOiBBZGRyZXNzLCBuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG0gPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICBsZXQgZCA9IE1ldGFkYXRhVmlld3MuRGlzcGxheSgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiB0aHVtYm5haWwpCiAgICAgICAgKQoKICAgICAgICBtLnNldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkKQogICAgfQp9",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgVG9rZW5JbmZvIHsKcHViIGxldCBpZDogU3RyaW5nCnB1YiBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKTogW1Rva2VuSW5mb10gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRva2VuSW5mbyhpZDogdHlwZS5pZGVudGlmaWVyLCBiYWxhbmNlOiB2YXVsdC5iYWxhbmNlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgIAogICAgcmV0dXJuIGNvaW5JbmZvTGlzdAp9Cg==",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogW1VJbnQ2NF19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gbmZ0cwp9",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCnB1YiBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY29sbGVjdGlvbkxpc3Q6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0eXBlLmlkZW50aWZpZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogY2hpbGRBY2NvdW50LCBwYXRoOiBwYXRoKSwKICAgICAgICAgICAgICAgICAgICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gY29sbGVjdGlvbkxpc3QKfQ==",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHNjcmlwdCB5b3UgY2FuIGV4ZWN1dGUgb24gRmxvdyBOZXR3b3JrCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKToge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwogICAgdmFyIGFjY2Vzc2libGVORlRzOiB7QWRkcmVzczoge1N0cmluZzogW1VJbnQ2NF19fSAgPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgYWNjZXNzaWJsZU5GVHNbYWRkcmVzc10gPSBuZnRzCiAgICB9CiAgICByZXR1cm4gYWNjZXNzaWJsZU5GVHMKfQ==",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogVUZpeDY0fSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1R5cGVdfSA9IHt9CgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IHZhdWx0VHlwZTogVHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICAgICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZXM6IHtTdHJpbmc6IFVGaXg2NH0gPSB7fQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byB2YXVsdEJhbGFuY2VzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9PSBuaWwgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgICAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IHZhdWx0ID0gYWNjdC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXVsdEJhbGFuY2VzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiB2YXVsdEJhbGFuY2VzCn0=",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKICAgIHB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0K",
              "getChildAccountAllowTypes": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBbU3RyaW5nXT8gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGQpCiAgICAvLyB2YXIgZmFjdG9yeVN1cHBvcnRlZFR5cGVzOiBbVHlwZV0/ID0gbmlsCiAgICB2YXIgZmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgLy8gdmFyIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/ID0gbmlsCiAgICBpZiBsZXQgYWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgewogICAgICAgIC8vIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgLy8gICBmYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5LmdldFN1cHBvcnRlZFR5cGVzKCkKICAgICAgICAvLyB9CiAgICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICAgIGZpbHRlckRldGFpbHMgPSBmaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgICAgfQogICAgICAgIC8vIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICAvLyAgIG1hbmFnZXJGaWx0ZXJEZXRhaWxzID0gbUZpbHRlci5nZXREZXRhaWxzKCkKICAgICAgICAvLyB9CiAgICAgICAgbGV0IGlkZW5BcnI6IFtTdHJpbmddID0gW10KICAgICAgICBsZXQgZGF0YSA9IGZpbHRlckRldGFpbHMgYXMhIHtTdHJpbmc6IEFueVN0cnVjdH0/CgogICAgICAgIGxldCB0eXBlQXJyID0gZGF0YSFbImFsbG93ZWRUeXBlcyJdISBhcyEgW1R5cGVdCgogICAgICAgIGZvciB0eXBlIGluIHR5cGVBcnIgewogICAgICAgICAgaWRlbkFyci5hcHBlbmQodHlwZS5pZGVudGlmaWVyKQogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gaWRlbkFycgogICAgICB9CgogICAgfQoKICAgIHJldHVybiBuaWwKfQo=",
              "getChildAccountAllowTypesTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAoKCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IFtTdHJpbmddPyB7CiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkKICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAKICAgIGlmIGxldCBtYW5hZ2VyID0gbSB7CiAgICAgICBsZXQgZGlzcGxheSA9IG1hbmFnZXIuZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBjaGlsZCkKICAgIC8vIHZhciBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8gPSBuaWwKICAgIHZhciBmaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/ID0gbmlsCiAgICAvLyB2YXIgbWFuYWdlckZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIGlmIGxldCBhY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSB7CiAgICAgICAgLy8gaWYgbGV0IGZhY3RvcnkgPSBhY2N0LmdldENhcGFiaWxpdHlGYWN0b3J5TWFuYWdlcigpIHsKICAgICAgICAvLyAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlcyA9IGZhY3RvcnkuZ2V0U3VwcG9ydGVkVHlwZXMoKQogICAgICAgIC8vIH0KICAgICAgICBpZiBsZXQgZmlsdGVyID0gYWNjdC5nZXRDYXBhYmlsaXR5RmlsdGVyKCkgewogICAgICAgICAgZmlsdGVyRGV0YWlscyA9IGZpbHRlci5nZXREZXRhaWxzKCkKICAgICAgICB9CiAgICAgICAgLy8gaWYgbGV0IG1GaWx0ZXIgPSBhY2N0LmdldE1hbmFnZXJDYXBhYmlsaXR5RmlsdGVyKCkgewogICAgICAgIC8vICAgbWFuYWdlckZpbHRlckRldGFpbHMgPSBtRmlsdGVyLmdldERldGFpbHMoKQogICAgICAgIC8vIH0KICAgICAgICBsZXQgaWRlbkFycjogW1N0cmluZ10gPSBbXQogICAgICAgIGxldCBkYXRhID0gZmlsdGVyRGV0YWlscyBhcyEge1N0cmluZzogQW55U3RydWN0fT8KCiAgICAgICAgbGV0IHR5cGVBcnIgPSBkYXRhIVsiYWxsb3dlZFR5cGVzIl0hIGFzISBbVHlwZV0KCiAgICAgICAgZm9yIHR5cGUgaW4gdHlwZUFyciB7CiAgICAgICAgICBpZGVuQXJyLmFwcGVuZCh0eXBlLmlkZW50aWZpZXIpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBpZGVuQXJyCiAgICAgIH0KCiAgICB9CgogICAgcmV0dXJuIG5pbAp9CgoK",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkKCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICB2YXIgZGF0YToge0FkZHJlc3M6IEFueVN0cnVjdH0gPSB7fQogICAgZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYyA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgbm90IGZvdW5kIikKICAgICAgICBsZXQgZCA9IGMucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpCiAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQogICAgfQogICAgcmV0dXJuIGRhdGEKfQ==",
              "getChildAccountNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwovLyBpbXBvcnQgTGlua2VkQWNjb3VudHMgZnJvbSAweENoaWxkQWNjb3VudAoKLy8vIEN1c3RvbSBzdHJ1Y3QgdG8gbWFrZSBpbnRlcnByZXRhdGlvbiBvZiBORlQgJiBDb2xsZWN0aW9uIGRhdGEgZWFzeSBjbGllbnQgc2lkZQpwdWIgc3RydWN0IE5GVERhdGEgewogICAgcHViIGxldCBuYW1lOiBTdHJpbmcKICAgIHB1YiBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogICAgcHViIGxldCB0aHVtYm5haWw6IFN0cmluZwogICAgcHViIGxldCByZXNvdXJjZUlEOiBVSW50NjQKICAgIHB1YiBsZXQgb3duZXJBZGRyZXNzOiBBZGRyZXNzPwogICAgcHViIGxldCBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblVSTDogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcKICAgIHB1YiBsZXQgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CgogICAgaW5pdCgKICAgICAgICBuYW1lOiBTdHJpbmcsCiAgICAgICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgICAgICB0aHVtYm5haWw6IFN0cmluZywKICAgICAgICByZXNvdXJjZUlEOiBVSW50NjQsCiAgICAgICAgb3duZXJBZGRyZXNzOiBBZGRyZXNzPywKICAgICAgICBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblVSTDogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcsCiAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CiAgICApIHsKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICAgICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgICAgICBzZWxmLnJlc291cmNlSUQgPSByZXNvdXJjZUlECiAgICAgICAgc2VsZi5vd25lckFkZHJlc3MgPSBvd25lckFkZHJlc3MKICAgICAgICBzZWxmLmNvbGxlY3Rpb25OYW1lID0gY29sbGVjdGlvbk5hbWUKICAgICAgICBzZWxmLmNvbGxlY3Rpb25EZXNjcmlwdGlvbiA9IGNvbGxlY3Rpb25EZXNjcmlwdGlvbgogICAgICAgIHNlbGYuY29sbGVjdGlvblVSTCA9IGNvbGxlY3Rpb25VUkwKICAgICAgICBzZWxmLmNvbGxlY3Rpb25TdG9yYWdlUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIKICAgIH0KfQoKLy8vIEhlbHBlciBmdW5jdGlvbiB0aGF0IHJldHJpZXZlcyBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudAovLy8KcHViIGZ1biBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKF8gYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBHZXQgdGhlIGFjY291bnQKICAgIGxldCBhY2NvdW50OiBBdXRoQWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAvLyBJbml0IGZvciByZXR1cm4gdmFsdWUKICAgIGxldCBkYXRhOiBbTkZURGF0YV0gPSBbXQogICAgLy8gQXNzaWduIHRoZSB0eXBlcyB3ZSdsbCBuZWVkCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIGxldCBkaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXlUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRhdGFUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCgogICAgLy8gSXRlcmF0ZSBvdmVyIGVhY2ggcHVibGljIHBhdGgKICAgIGFjY291bnQuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgaWYgaXQncyBhIENvbGxlY3Rpb24gd2UncmUgaW50ZXJlc3RlZCBpbiwgaWYgc28sIGdldCBhIHJlZmVyZW5jZQogICAgICAgIGlmIHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KGZyb206IHBhdGgpIHsKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciB0aGUgQ29sbGVjdGlvbidzIE5GVHMsIGNvbnRpbnVpbmcgaWYgdGhlIE5GVCByZXNvbHZlcyB0aGUgdmlld3Mgd2Ugd2FudAogICAgICAgICAgICAgICAgZm9yIGlkIGluIGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkgewogICAgICAgICAgICAgICAgICAgIGxldCByZXNvbHZlclJlZjogJntNZXRhZGF0YVZpZXdzLlJlc29sdmVyfSA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiBpZCkKICAgICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGRpc3BsYXlUeXBlKSBhcyEgTWV0YWRhdGFWaWV3cy5EaXNwbGF5PyB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EYXRhVHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEJ1aWxkIG91ciBORlREYXRhIHN0cnVjdCBmcm9tIHRoZSBtZXRhZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmZ0RGF0YSA9IE5GVERhdGEoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwudXJpKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZUlEOiByZXNvbHZlclJlZi51dWlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3duZXJBZGRyZXNzOiByZXNvbHZlclJlZi5vd25lcj8uYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25OYW1lOiBjb2xsZWN0aW9uRGlzcGxheT8ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25EZXNjcmlwdGlvbjogY29sbGVjdGlvbkRpc3BsYXk/LmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblVSTDogY29sbGVjdGlvbkRpc3BsYXk/LmV4dGVybmFsVVJMPy51cmwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXI6IGNvbGxlY3Rpb25EYXRhPy5wdWJsaWNQYXRoPy50b1N0cmluZygpCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGl0IHRvIG91ciBkYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKG5mdERhdGEpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgcmV0dXJuIGRhdGEKfQoKLy8vIFNjcmlwdCB0aGF0IHJldHJpZXZlIGRhdGEgYWJvdXQgYWxsIHB1YmxpY2x5IGFjY2Vzc2libGUgTkZUcyBpbiBhbiBhY2NvdW50IGFuZCBhbnkgb2YgaXRzCi8vLyBjaGlsZCBhY2NvdW50cwovLy8KLy8vIE5vdGUgdGhhdCB0aGlzIHNjcmlwdCBkb2VzIG5vdCBjb25zaWRlciBhY2NvdW50cyB3aXRoIGV4Y2VwdGlvbmFsbHkgbGFyZ2UgY29sbGVjdGlvbnMgCi8vLyB3aGljaCB3b3VsZCByZXN1bHQgaW4gbWVtb3J5IGVycm9ycy4gVG8gY29tcG9zZSBhIHNjcmlwdCB0aGF0IGRvZXMgY292ZXIgYWNjb3VudHMgd2l0aAovLy8gYSBsYXJnZSBudW1iZXIgb2Ygc3ViLWFjY291bnRzIGFuZC9vciBORlRzIHdpdGhpbiB0aG9zZSBhY2NvdW50cywgc2VlIGV4YW1wbGUgNSBpbgovLy8gdGhlIE5GVCBDYXRhbG9nJ3MgUkVBRE1FOiBodHRwczovL2dpdGh1Yi5jb20vZGFwcGVybGFicy9uZnQtY2F0YWxvZyBhbmQgYWRhcHQgZm9yIHVzZQovLy8gd2l0aCBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCi8vLwovLyBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtBZGRyZXNzOiBbTkZURGF0YV19IHsKLy8gICAgIGxldCBhbGxORlREYXRhOiB7QWRkcmVzczogW05GVERhdGFdfSA9IHt9CiAgICAKLy8gICAgIC8vIEFkZCBhbGwgcmV0cmlldmVkIHZpZXdzIHRvIHRoZSBydW5uaW5nIG1hcHBpbmcgaW5kZXhlZCBvbiBhZGRyZXNzCi8vICAgICBhbGxORlREYXRhLmluc2VydChrZXk6IGFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykpCiAgICAKLy8gICAgIC8qIEl0ZXJhdGUgb3ZlciBhbnkgY2hpbGQgYWNjb3VudHMgKi8gCi8vICAgICAvLwovLyAgICAgLy8gR2V0IHJlZmVyZW5jZSB0byBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uIGlmIGl0IGV4aXN0cwovLyAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBnZXRBY2NvdW50KGFkZHJlc3MpLmdldENhcGFiaWxpdHk8JkxpbmtlZEFjY291bnRzLkNvbGxlY3Rpb257TGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY30+KAovLyAgICAgICAgICAgICBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uUHVibGljUGF0aAovLyAgICAgICAgICkuYm9ycm93KCkgewovLyAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIGxpbmtlZCBhY2NvdW50IGluIExpbmtlZEFjY291bnRzLkNvbGxlY3Rpb24KLy8gICAgICAgICBmb3IgY2hpbGRBZGRyZXNzIGluIGNvbGxlY3Rpb25SZWYuZ2V0TGlua2VkQWNjb3VudEFkZHJlc3NlcygpIHsKLy8gICAgICAgICAgICAgaWYgIWFsbE5GVERhdGEuY29udGFpbnNLZXkoY2hpbGRBZGRyZXNzKSB7Ci8vICAgICAgICAgICAgICAgICAvLyBJbnNlcnQgdGhlIE5GVCBtZXRhZGF0YSBmb3IgdGhvc2UgTkZUcyBpbiBlYWNoIGNoaWxkIGFjY291bnQKLy8gICAgICAgICAgICAgICAgIC8vIGluZGV4aW5nIG9uIHRoZSBhY2NvdW50J3MgYWRkcmVzcwovLyAgICAgICAgICAgICAgICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBjaGlsZEFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoY2hpbGRBZGRyZXNzKSkKLy8gICAgICAgICAgICAgfQovLyAgICAgICAgIH0KLy8gICAgIH0KLy8gICAgIHJldHVybiBhbGxORlREYXRhIAovLyB9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgcmV0dXJuIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykgCn0KCg==",
              "getChildAccounts": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnB1YiBzdHJ1Y3QgQ2hpbGRBY2NvdW50SW5mbyB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBkaXNwbGF5OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/CiAgcHViIGxldCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8KICBwdWIgbGV0IGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8KICBwdWIgbGV0IG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgZGlzcGxheTogTWV0YWRhdGFWaWV3cy5EaXNwbGF5PywKICAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPywKICAgIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8sCiAgICBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5mYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5U3VwcG9ydGVkVHlwZXMKICAgIHNlbGYuZmlsdGVyRGV0YWlscyA9IGZpbHRlckRldGFpbHMKICAgIHNlbGYubWFuYWdlckZpbHRlckRldGFpbHMgPSBtYW5hZ2VyRmlsdGVyRGV0YWlscwogIH0KfQoKCgpwdWIgZnVuIG1haW4oY2hpbGQ6IEFkZHJlc3MpOiAgW0NoaWxkQWNjb3VudEluZm9dIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICByZXR1cm4gZ2V0Q2hpbGRBY2NvdW50cyhtYW5hZ2VyOiBtYW5hZ2VyKQogICAgfQoKICAgIHJldHVybiBbXQp9CgpwdWIgZnVuIGdldENoaWxkQWNjb3VudHMobWFuYWdlcjogJkh5YnJpZEN1c3RvZHkuTWFuYWdlcik6IFtDaGlsZEFjY291bnRJbmZvXSB7CiAgbGV0IGNoaWxkQWRkcmVzc2VzID0gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCiAgbGV0IGNoaWxkcmVuOiBbQ2hpbGRBY2NvdW50SW5mb10gPSBbXQogIGZvciBjaGlsZEFkZHJlc3MgaW4gY2hpbGRBZGRyZXNzZXMgewogICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzKQogICAgdmFyIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPyA9IG5pbAogICAgdmFyIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIHZhciBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgaWYgbGV0IGFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSB7CiAgICAgIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgZmFjdG9yeVN1cHBvcnRlZFR5cGVzID0gZmFjdG9yeS5nZXRTdXBwb3J0ZWRUeXBlcygpCiAgICAgIH0KICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBmaWx0ZXJEZXRhaWxzID0gZmlsdGVyLmdldERldGFpbHMoKQogICAgICB9CiAgICAgIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBtYW5hZ2VyRmlsdGVyRGV0YWlscyA9IG1GaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgIH0KICAgIH0KICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IGZhY3RvcnlTdXBwb3J0ZWRUeXBlcywgZmlsdGVyRGV0YWlsczogZmlsdGVyRGV0YWlscywgbWFuYWdlckZpbHRlckRldGFpbHM6IG1hbmFnZXJGaWx0ZXJEZXRhaWxzKQogICAgY2hpbGRyZW4uYXBwZW5kKGNoaWxkKQogIH0KCiAgcmV0dXJuIGNoaWxkcmVuCn0KCnB1YiBmdW4gZ2V0T3duZWRBY2NvdW50cyhtYW5hZ2VyOiAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyKTogW0NoaWxkQWNjb3VudEluZm9dIHsKICBsZXQgb3duZWRBZGRyZXNzZXMgPSBtYW5hZ2VyLmdldE93bmVkQWRkcmVzc2VzKCkKICBsZXQgY2hpbGRyZW46IFtDaGlsZEFjY291bnRJbmZvXSA9IFtdCiAgZm9yIG93bmVkQWRkcmVzcyBpbiBvd25lZEFkZHJlc3NlcyB7CiAgICBpZiBsZXQgbyA9IG1hbmFnZXIuYm9ycm93T3duZWRBY2NvdW50KGFkZHI6IG93bmVkQWRkcmVzcykgewogICAgICBsZXQgZCA9IG8ucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/IAogICAgICBpZiBsZXQgZGlzcGxheSA9IGQgewogICAgICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IG5pbCwgZmlsdGVyRGV0YWlsczogbmlsLCBtYW5hZ2VyRmlsdGVyRGV0YWlsczogbmlsKQogICAgICAgIGNoaWxkcmVuLmFwcGVuZChjaGlsZCkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY2hpbGRyZW4uYXBwZW5kKENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBuaWwsIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogbmlsLCBmaWx0ZXJEZXRhaWxzOiBuaWwsIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBuaWwpKQogICAgfQogIH0KICByZXR1cm4gY2hpbGRyZW4KfQ==",
              "getChildAccountsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCnB1YiBzdHJ1Y3QgQ2hpbGRBY2NvdW50SW5mbyB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBkaXNwbGF5OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/CiAgcHViIGxldCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IFtUeXBlXT8KICBwdWIgbGV0IGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8KICBwdWIgbGV0IG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBBbnlTdHJ1Y3Q/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgZGlzcGxheTogTWV0YWRhdGFWaWV3cy5EaXNwbGF5PywKICAgIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPywKICAgIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8sCiAgICBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5mYWN0b3J5U3VwcG9ydGVkVHlwZXMgPSBmYWN0b3J5U3VwcG9ydGVkVHlwZXMKICAgIHNlbGYuZmlsdGVyRGV0YWlscyA9IGZpbHRlckRldGFpbHMKICAgIHNlbGYubWFuYWdlckZpbHRlckRldGFpbHMgPSBtYW5hZ2VyRmlsdGVyRGV0YWlscwogIH0KfQoKCgpwdWIgZnVuIG1haW4oY2hpbGQ6IEFkZHJlc3MpOiAgW0NoaWxkQWNjb3VudEluZm9dIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICBsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgCiAgICBpZiBsZXQgbWFuYWdlciA9IG0gewogICAgICByZXR1cm4gZ2V0Q2hpbGRBY2NvdW50cyhtYW5hZ2VyOiBtYW5hZ2VyKQogICAgfQoKICAgIHJldHVybiBbXQp9CgpwdWIgZnVuIGdldENoaWxkQWNjb3VudHMobWFuYWdlcjogJkh5YnJpZEN1c3RvZHkuTWFuYWdlcik6IFtDaGlsZEFjY291bnRJbmZvXSB7CiAgbGV0IGNoaWxkQWRkcmVzc2VzID0gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCiAgbGV0IGNoaWxkcmVuOiBbQ2hpbGRBY2NvdW50SW5mb10gPSBbXQogIGZvciBjaGlsZEFkZHJlc3MgaW4gY2hpbGRBZGRyZXNzZXMgewogICAgbGV0IGRpc3BsYXkgPSBtYW5hZ2VyLmdldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzKQogICAgdmFyIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogW1R5cGVdPyA9IG5pbAogICAgdmFyIGZpbHRlckRldGFpbHM6IEFueVN0cnVjdD8gPSBuaWwKICAgIHZhciBtYW5hZ2VyRmlsdGVyRGV0YWlsczogQW55U3RydWN0PyA9IG5pbAogICAgaWYgbGV0IGFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSB7CiAgICAgIGlmIGxldCBmYWN0b3J5ID0gYWNjdC5nZXRDYXBhYmlsaXR5RmFjdG9yeU1hbmFnZXIoKSB7CiAgICAgICAgZmFjdG9yeVN1cHBvcnRlZFR5cGVzID0gZmFjdG9yeS5nZXRTdXBwb3J0ZWRUeXBlcygpCiAgICAgIH0KICAgICAgaWYgbGV0IGZpbHRlciA9IGFjY3QuZ2V0Q2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBmaWx0ZXJEZXRhaWxzID0gZmlsdGVyLmdldERldGFpbHMoKQogICAgICB9CiAgICAgIGlmIGxldCBtRmlsdGVyID0gYWNjdC5nZXRNYW5hZ2VyQ2FwYWJpbGl0eUZpbHRlcigpIHsKICAgICAgICBtYW5hZ2VyRmlsdGVyRGV0YWlscyA9IG1GaWx0ZXIuZ2V0RGV0YWlscygpCiAgICAgIH0KICAgIH0KICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IGZhY3RvcnlTdXBwb3J0ZWRUeXBlcywgZmlsdGVyRGV0YWlsczogZmlsdGVyRGV0YWlscywgbWFuYWdlckZpbHRlckRldGFpbHM6IG1hbmFnZXJGaWx0ZXJEZXRhaWxzKQogICAgY2hpbGRyZW4uYXBwZW5kKGNoaWxkKQogIH0KCiAgcmV0dXJuIGNoaWxkcmVuCn0KCnB1YiBmdW4gZ2V0T3duZWRBY2NvdW50cyhtYW5hZ2VyOiAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyKTogW0NoaWxkQWNjb3VudEluZm9dIHsKICBsZXQgb3duZWRBZGRyZXNzZXMgPSBtYW5hZ2VyLmdldE93bmVkQWRkcmVzc2VzKCkKICBsZXQgY2hpbGRyZW46IFtDaGlsZEFjY291bnRJbmZvXSA9IFtdCiAgZm9yIG93bmVkQWRkcmVzcyBpbiBvd25lZEFkZHJlc3NlcyB7CiAgICBpZiBsZXQgbyA9IG1hbmFnZXIuYm9ycm93T3duZWRBY2NvdW50KGFkZHI6IG93bmVkQWRkcmVzcykgewogICAgICBsZXQgZCA9IG8ucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXk/IAogICAgICBpZiBsZXQgZGlzcGxheSA9IGQgewogICAgICAgIGxldCBjaGlsZCA9IENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBkaXNwbGF5LCBmYWN0b3J5U3VwcG9ydGVkVHlwZXM6IG5pbCwgZmlsdGVyRGV0YWlsczogbmlsLCBtYW5hZ2VyRmlsdGVyRGV0YWlsczogbmlsKQogICAgICAgIGNoaWxkcmVuLmFwcGVuZChjaGlsZCkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY2hpbGRyZW4uYXBwZW5kKENoaWxkQWNjb3VudEluZm8oYWRkcmVzczogb3duZWRBZGRyZXNzLCBkaXNwbGF5OiBuaWwsIGZhY3RvcnlTdXBwb3J0ZWRUeXBlczogbmlsLCBmaWx0ZXJEZXRhaWxzOiBuaWwsIG1hbmFnZXJGaWx0ZXJEZXRhaWxzOiBuaWwpKQogICAgfQogIH0KICByZXR1cm4gY2hpbGRyZW4KfQ==",
              "getChildNFTInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogICAgCiAgICBwdWIgc3RydWN0IE5GVEluZm8gewogICAgICBwdWIgbGV0IGlkOiBTdHJpbmcKICAgICAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCiAgICAKICAgICAgaW5pdChpZDogU3RyaW5nLCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICAgICAgc2VsZi5pZCA9IGlkCiAgICAgICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICAgICAgfQogICAgfQogICAgCiAgICBwdWIgc3RydWN0IENoaWxkTkZUSW5mbyB7CiAgICAgIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogICAgICBwdWIgbGV0IGluZm86IFtORlRJbmZvXQogICAgCiAgICAgIGluaXQoYWRkcmVzczogQWRkcmVzcywgaW5mbzogW05GVEluZm9dKSB7CiAgICAgICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgICAgIHNlbGYuaW5mbyA9IGluZm8KICAgICAgfQogICAgfQogICAgCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IENoaWxkTkZUSW5mbyB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIAogICAgICAgIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1R5cGVdfSA9IHt9CiAgICAKICAgICAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgCiAgICAgICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGQpCiAgICAgICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgICAgICBsZXQgbmZ0czogW05GVEluZm9dID0gW10KICAgICAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCiAgICAKICAgICAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRdID0gZm91bmRUeXBlcwogICAgCiAgICAgICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgICAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIAogICAgICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZF0gPT0gbmlsIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgCiAgICAgICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKICAgIAogICAgICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5GVEluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9KQogICAgCiAgICAgICAgcmV0dXJuIENoaWxkTkZUSW5mbyhhZGRyZXNzOiBjaGlsZCwgaW5mbzogbmZ0cykKICAgIH0=",
              "sendChildFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSBjYXBSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCgogICAgbGV0IHJlY2VpdmVyUmVmID0gZ2V0QWNjb3VudChyZWNlaXZlcikuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKCiAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtIHZhdWx0KQogIH0KfQ==",
              "sendChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewpwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAKICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykhCgogICAgCiAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PwoKICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgIAogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSBnZXRBY2NvdW50KHJlY2VpdmVyKS5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpIQoKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSBjYXBSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAKICAgIGxldCByZWNlaXZlckFjYyA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikhCiAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkKICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgYXNzZXJ0KHJlY2VpdmVyQ2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBwYXRoKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj8KCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgIAogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAKICAgIGxldCByZWNlaXZlckFjYyA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikhCiAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkKICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgYXNzZXJ0KHJlY2VpdmVyQ2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKICAgIHJlY2VpdmVyQ2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "sendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KfQ==",
              "sendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgICAgIAogICAgICAgIGxldCBuZnQgPC0gY2FwUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICAvLyBsZXQgY29sbFJlZiA9IGFjY3QuYm9ycm93PCZGTE9BVC5Db2xsZWN0aW9uPihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkhCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQogICAgICAgIC5nZXRDYXBhYmlsaXR5KEZMT0FULkZMT0FUQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9Cn0=",
              "sendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikhCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKICAgICAgICAKICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAKICAgICAgICBsZXQgcmVjZWl2ZXJBY2MgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpIQogICAgICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQWNjLmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChyZWNlaXZlckNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IHJlY2VpdmVyQ2FwUmVmID0gcmVjZWl2ZXJDYXAhLmJvcnJvdygpIQoKICAgICAgICByZWNlaXZlckNhcFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9Cn0=",
              "sendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgIAogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpIQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAgICAgYXNzZXJ0KGNhcCAhPSBuaWwsIG1lc3NhZ2U6ICJDYW4gbm90IGdldCBjYXBhYmlsaXR5IGZyb20gY2hpbGQgYWNjb3VudCIpCiAgICAgICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCiAgICAgICAgCiAgICAgICAgbGV0IG5mdCA8LSBjYXBSZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IHJlY2VpdmVyKSEKICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSByZWNlaXZlckFjYy5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQocmVjZWl2ZXJDYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCByZWNlaXZlckNhcFJlZiA9IHJlY2VpdmVyQ2FwIS5ib3Jyb3coKSEKCiAgICAgICAgcmVjZWl2ZXJDYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "transferChildFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewpwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAKICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykhCgogICAgCiAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PwoKICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgIGlmKGFjY3QuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pID09IG5pbCkgewoKICAgICAgICBhY2N0LnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICBhY2N0LnVubGluaygKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICAgICAgKQoKICAgICAgICBhY2N0Lmxpbms8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICAgICApCgogICAgICAgIGFjY3QudW5saW5rKAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPgogICAgICAgICkKCiAgICAgICAgYWNjdC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgIH0KCgogICAgbGV0IHZhdWx0IDwtIGNhcFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSBhY2N0LmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkhCgogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LSB2YXVsdCkKICB9Cn0=",
              "transferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoCiAgICAgICAgICAgICAgICBwYXRoOiBQcml2YXRlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEgYXMgQ2FwYWJpbGl0eVBhdGgsCiAgICAgICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICAgICApIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4/CgogICAgICAgIGFzc2VydChjYXAgIT0gbmlsLCBtZXNzYWdlOiAiQ2FuIG5vdCBnZXQgY2FwYWJpbGl0eSBmcm9tIGNoaWxkIGFjY291bnQiKQogICAgICAgIGxldCBjYXBSZWYgPSBjYXAhLmJvcnJvdygpIQoKICAgICAgICBpZiBhY2N0LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBhY2N0LnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChhY2N0LmdldENhcGFiaWxpdHk8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pLmJvcnJvdygpID09IG5pbCkgewogICAgICAgICAgICBhY2N0LnVubGluayg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBhY2N0Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBsZXQgbmZ0IDwtIGNhcFJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSBhY2N0CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KfQ==",
              "transferFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vIGZvdW5kIikKCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpIQoKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgdHlwZTogVHlwZTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIEZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAgICkgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4/CgogICAgbGV0IGNhcFJlZiA9IGNhcCEuYm9ycm93KCkhCgogICAgbGV0IHZhdWx0UmVmID0gYWNjdC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KSEKCiAgICAKICAgIGxldCB2YXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICBjYXBSZWYuZGVwb3NpdChmcm9tOiA8LSB2YXVsdCkKICB9Cn0=",
              "transferFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgYW1vdW50OiBVRml4NjQgKSB7CnByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKIAogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSEKCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgIHBhdGg6IFByaXZhdGVQYXRoKGlkZW50aWZpZXI6IHBhdGgpISBhcyBDYXBhYmlsaXR5UGF0aCwKICAgICAgICAgIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKQogICAgICApIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlciwgRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+PwoKCiAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5Qcm92aWRlcikhCgogICAgCiAgICBsZXQgdmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCgogICAgY2FwUmVmLmRlcG9zaXQoZnJvbTogPC0gdmF1bHQpCiAgfQp9",
              "transferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "transferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4ZDhhN2UwNWE3YWM2NzBjMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4MWQ3ZTU3YWE1NTgxNzQ0OAppbXBvcnQgRkxPQVQgZnJvbSAweDJkNGMzY2FmZmJlYWI4NDUKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAKICAgICAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSEKCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KAogICAgICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICAgICAgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgICAgICAgICAgKSBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PwoKICAgICAgICBhc3NlcnQoY2FwICE9IG5pbCwgbWVzc2FnZTogIkNhbiBub3QgZ2V0IGNhcGFiaWxpdHkgZnJvbSBjaGlsZCBhY2NvdW50IikKICAgICAgICBsZXQgY2FwUmVmID0gY2FwIS5ib3Jyb3coKSEKCiAgICAgICAgCiAgICAgICAgbGV0IGNvbGxSZWYgPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBGTE9BVC5GTE9BVENvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgICAgICBjYXBSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQp9",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKdHJhbnNhY3Rpb24oY2hpbGQ6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUgKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICBtYW5hZ2VyLnJlbW92ZUNoaWxkKGFkZHI6IGNoaWxkKQogICAgfQp9"
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gRGV0ZXJtaW5lcyBpZiBhbiBhY2NvdW50IGlzIHNldCB1cCB3aXRoIGEgU3Rha2luZyBDb2xsZWN0aW9uCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVnaXN0ZXJEZWxlZ2F0b3Iobm9kZUlEOiBpZCwgYW1vdW50OiBhbW91bnQpICAgICAgCiAgICB9Cn0=",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlTmV3VG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgLyA3LjAgKiAzNjUuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
              "getApyWeekly": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgKiA1NC4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getDelegatesIndo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIHB1YiBsZXQgZGVsZWdhdG9ySUQ6IFVJbnQzMgogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCgogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgcHViIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgaW5pdChkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbykgewogICAgICAgIHNlbGYuZGVsZWdhdG9ySUQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICAgICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JJbmZvLm5vZGVJRCkKICAgICAgICBzZWxmLmRlbGVnYXRlZE5vZGVJbmZvID0gbm9kZUluZm8KICAgICAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYucmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zID0gc2VsZi50b2tlbnNVbnN0YWtlZCArIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZGVsZWdhdG9ySURzOiBbRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkRlbGVnYXRvcklEc10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0RGVsZWdhdG9ySURzKGFkZHJlc3M6IGFjY291bnQpCgogICAgbGV0IGZvcm1hdHRlZERlbGVnYXRvckluZm86IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319ID0ge30KCiAgICBmb3IgZGVsZWdhdG9ySUQgaW4gZGVsZWdhdG9ySURzIHsKICAgICAgICBpZiBsZXQgX2Zvcm1hdHRlZERlbGVnYXRvckluZm8gPSBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRF0gPSBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gPSB7IGRlbGVnYXRvcklELmRlbGVnYXRvcklEOiBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyl9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvCn0=",
              "getDelegatesInfoArray": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweEZsb3dUYWJsZVN0YWtpbmcKLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4U3Rha2luZ0NvbGxlY3Rpb24KICAgICAgICAKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dIHsKCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBnZXRBY2NvdW50KGFjY291bnQpCiAgICAgICAgLmdldENhcGFiaWxpdHk8JntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PihGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIC5ib3Jyb3coKQogICAgICAgID8/IHBhbmljKCJjYW5ub3QgYm9ycm93IHJlZmVyZW5jZSB0byBhY2N0LlN0YWtpbmdDb2xsZWN0aW9uIikKCiAgICByZXR1cm4gc3Rha2luZ0NvbGxlY3Rpb25SZWYuZ2V0QWxsRGVsZWdhdG9ySW5mbygpCn0=",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YT8gewogIHJldHVybiBGbG93RXBvY2guZ2V0RXBvY2hNZXRhZGF0YShlcG9jaENvdW50ZXIpCn0=",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcpOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpCn0=",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvIHsKCiAgICBwdWIgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlQ291bnQ6IFVJbnQ2NAoKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBzdGFrZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGluaXQoYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dLCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10pIHsKCiAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBVSW50NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBVSW50NjQoMCkKCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBzZWxmLm5vZGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICAgICAgZm9yIGRlbGVnYXRlSW5mbyBpbiBhbGxEZWxlZ2F0ZUluZm8gewogICAgICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBzZWxmLmRlbGVnYXRlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbz8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsRGVsZWdhdG9ySW5mbyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIHJldHVybiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8oYWxsTm9kZUluZm86IGFsbE5vZGVJbmZvLCBhbGxEZWxlZ2F0ZUluZm86IGFsbERlbGVnYXRlSW5mbykKfQ==",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKcHViIHN0cnVjdCBTdGFrZUluZm8gewogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIHB1YiBsZXQgbmV0d29ya2luZ0tleTogU3RyaW5nCiAgICBwdWIgbGV0IHN0YWtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAoKICAgIHB1YiBsZXQgZGVsZWdhdG9yczogW1VJbnQzMl0KICAgIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICAgIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zRGVsZWdhdGVkOiBVRml4NjQKICAgIHB1YiBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgbWFjaGluZUFjY291bnRCYWxhbmNlOiBVRml4NjQ/CgogICAgaW5pdChub2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm8/KSB7CiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgICAgIHNlbGYubmV0d29ya2luZ0tleSA9IG5vZGVJbmZvLm5ldHdvcmtpbmdLZXkKICAgICAgICBzZWxmLnN0YWtpbmdLZXkgPSBub2RlSW5mby5zdGFraW5nS2V5CiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAoKICAgICAgICBzZWxmLmRlbGVnYXRvcnMgPSBub2RlSW5mby5kZWxlZ2F0b3JzCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdGFrZUluZm99PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGZvcm1hdHRlZE5vZGVJbmZvOiB7U3RyaW5nOiBTdGFrZUluZm99ID0ge30KICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBtYWNoaW5lQWNjb3VudHM6IHtTdHJpbmc6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm99ID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldE1hY2hpbmVBY2NvdW50cyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgZm9ybWF0dGVkTm9kZUluZm9bbm9kZUluZm8uaWRdID0gU3Rha2VJbmZvKG5vZGVJbmZvOiBub2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBtYWNoaW5lQWNjb3VudHNbbm9kZUluZm8uaWRdKQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWROb2RlSW5mbwp9",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgcmV3YXJkZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlUmV3YXJkZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyB1bnN0YWtlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBzZXRzIHVwIGFuIGFjY291bnQgdG8gdXNlIGEgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBJdCB3aWxsIHdvcmsgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgaGF2ZSBhIHJlZ3VsYXIgYWNjb3VudCwgYSB0d28tYWNjb3VudCBsb2NrZWQgdG9rZW5zIHNldHVwLAovLy8gb3Igc3Rha2luZyBvYmplY3RzIHN0b3JlZCBpbiB0aGUgdW5sb2NrZWQgYWNjb3VudAoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmxpbms8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oL3ByaXZhdGUvZmxvd1Rva2VuSG9sZGVyLCB0YXJnZXQ6IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgbGV0IGZsb3dUb2tlbiA9IHNpZ25lci5saW5rPCZGbG93VG9rZW4uVmF1bHQ+KC9wcml2YXRlL2Zsb3dUb2tlblZhdWx0LCB0YXJnZXQ6IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KSEKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBTdGFraW5nIENvbGxlY3Rpb24gYW5kIHB1dCBpdCBpbiBzdG9yYWdlCiAgICAgICAgICAgIGlmIGxvY2tlZEhvbGRlci5jaGVjaygpIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IG5pbCksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGxpbmsgdG8gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgICAgICBzaWduZXIubGluazwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9ue0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KAogICAgICAgICAgICAgICAgRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCwKICAgICAgICAgICAgICAgIHRhcmdldDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IG5vZGUgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIubG9hZDxARmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkRGVsZWdhdG9yT2JqZWN0KDwtZGVsZWdhdG9yKQogICAgICAgIH0KICAgIH0KfQ==",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3RzIHVuc3Rha2luZyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5yZXF1ZXN0VW5zdGFraW5nKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RlVOR0lCTEVUT0tFTkFERFJFU1MKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4RkxPV1RPS0VOQUREUkVTUwppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMT0NLRURUT0tFTkFERFJFU1MKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IGhvbGRlclJlZjogJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyByZXdhcmRlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Jld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgdW5zdGFrZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdCBpZiBpdCBpcyB0aGVyZQoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ=="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgovLyB0b2RvIHdpdGggdmFyCnRyYW5zYWN0aW9uIHsKCnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgaWYoc2lnbmVyLmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KSA9PSBuaWwpIHsKICAgICAgICBzaWduZXIuc2F2ZSg8LTxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgIH0KCiAgICAgICAgc2lnbmVyLnVubGluaygKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICAgICAgKQoKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKCiAgICAgICAgc2lnbmVyLnVubGluaygKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4KICAgICAgICApCgogICAgICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgIH0KfQ==",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0YXJnZXRQYXRoOiBTdHJpbmc/KSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoLnRvU3RyaW5nKCksIHRhcmdldFBhdGg6IHRhcmdldFBhdGgpCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICB9CgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQcml2YXRlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQcml2YXRlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHJpdmF0ZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBBIHdvcmthcm91bmQgbWV0aG9kCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiBmYWxzZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBwdWIgbGV0IGlzQ29sbGVjdGlvbkNhcDogQm9vbAogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCgogIHB1YiBsZXQgaXNCYWxhbmNlQ2FwOiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8sIAogICAgaXNDb2xsZWN0aW9uQ2FwOiBCb29sLCAKICAgIHRva2VuSURzOiBbVUludDY0XSwKICAgIGlzQmFsYW5jZUNhcDogQm9vbCwKICAgIGJhbGFuY2U6IFVGaXg2ND8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICAgIHNlbGYuaXNDb2xsZWN0aW9uQ2FwID0gaXNDb2xsZWN0aW9uQ2FwCiAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgIHNlbGYuaXNCYWxhbmNlQ2FwID0gaXNCYWxhbmNlQ2FwCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGxldCBiYWxhbmNlQ2FwVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwmQW55UmVzb3VyY2V7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PigpCgogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCiAgICB2YXIgaXNDb2xsZWN0aW9uQ2FwID0gZmFsc2UKICAgIHZhciBpc0JhbGFuY2VDYXAgPSBmYWxzZQogICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAoKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGJhbGFuY2VDYXBUeXBlKSkgewogICAgICBpc0JhbGFuY2VDYXAgPSB0cnVlCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQoKICAgICAgaWYgbGV0IHZhdWx0ID0gdmF1bHRSZWYgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0LmJhbGFuY2UKICAgICAgfQogICAgfSBlbHNlIGlmICh0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpKSB7CiAgICAgIGlzQ29sbGVjdGlvbkNhcCA9IHRydWUKICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHkocGF0aCkKICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uUmVmIHsKICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgfQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoLAogICAgICBpc0NvbGxlY3Rpb25DYXA6IGlzQ29sbGVjdGlvbkNhcCwKICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICBpc0JhbGFuY2VDYXA6IGlzQmFsYW5jZUNhcCwKICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQdWJsaWNQYXRoXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBjbGVhbmRQYXRoczogW1B1YmxpY1BhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnB1YmxpY1BhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdG9yYWdlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQuc3RvcmFnZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCBpc1Jlc291cmNlOiBCb29sCiAgcHViIGxldCBpc05GVENvbGxlY3Rpb246IEJvb2wKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCiAgcHViIGxldCBpc1ZhdWx0OiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0eXBlOiBUeXBlLCBpc1Jlc291cmNlOiBCb29sLCAKICAgIGlzTkZUQ29sbGVjdGlvbjogQm9vbCwgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LAogICAgdG9rZW5JRHM6IFtVSW50NjRdLCBpc1ZhdWx0OiBCb29sLCBiYWxhbmNlOiBVRml4NjQ/KSB7CiAgICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgICAgc2VsZi5wYXRoID0gcGF0aAogICAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICAgIHNlbGYuaXNSZXNvdXJjZSA9IGlzUmVzb3VyY2UKICAgICAgc2VsZi5pc05GVENvbGxlY3Rpb24gPSBpc05GVENvbGxlY3Rpb24KICAgICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgICAgc2VsZi5pc1ZhdWx0ID0gaXNWYXVsdAogICAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkZW50aWZpZXJzOiBbU3RyaW5nXSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBpZGVudGlmaWVyIGluIHBhdGhJZGVudGlmaWVycyB7CiAgICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgaXNORlRDb2xsZWN0aW9uIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGlzVmF1bHQgPSB0eXBlLmlzU3VidHlwZShvZjogdmF1bHRUeXBlKSAKICAgICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKICAgICAgaWYgaXNWYXVsdCB7CiAgICAgICAgaWYgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdFJlZi5iYWxhbmNlCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICBpc1Jlc291cmNlOiBpc1Jlc291cmNlLAogICAgICAgIGlzTkZUQ29sbGVjdGlvbjogaXNORlRDb2xsZWN0aW9uLAogICAgICAgIGRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5LAogICAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgICBpc1ZhdWx0OiBpc1ZhdWx0LAogICAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICAgKQoKICAgICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICB9CiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVJlc291cmNlPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aFN0cikhCiAgcmV0dXJuIGFjY291bnQuYm9ycm93PCZBbnlSZXNvdXJjZT4oZnJvbTogcGF0aCkKfQ==",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVN0cnVjdD8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55U3RydWN0Pihmcm9tOiBwYXRoKQp9"
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkIGZyb20gMHhGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgU3dpdGNoYm9hcmRJbmZvIHsKICBwdWIgbGV0IHZhdWx0VHlwZXM6IFtUeXBlXQoKICBpbml0KHZhdWx0VHlwZXM6IFtUeXBlXSkgewogICAgc2VsZi52YXVsdFR5cGVzID0gdmF1bHRUeXBlcwogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTd2l0Y2hib2FyZEluZm8/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgaWYgbGV0IGJvYXJkID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5Td2l0Y2hib2FyZD4oZnJvbTogRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkLlN0b3JhZ2VQYXRoKSB7CiAgICBsZXQgdHlwZXMgPSBib2FyZC5nZXRWYXVsdFR5cGVzKCkKICAgIHJldHVybiBTd2l0Y2hib2FyZEluZm8odmF1bHRUeXBlczogdHlwZXMpCiAgfQogIHJldHVybiBuaWwKfQ=="
            },
            "nft": {
              "checkNFTListEnabledNew": "",
              "checkNFTListEnabled": ""
            },
            "swap": {
              "DeployPairTemplate": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCnRyYW5zYWN0aW9uKHBhaXJUZW1wbGF0ZUNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShkZXBsb3lBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCB0b2tlbjBWYXVsdCA8LSBGbG93VG9rZW4uY3JlYXRlRW1wdHlWYXVsdCgpCiAgICAgICAgbGV0IHRva2VuMVZhdWx0IDwtIEZsb3dUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBkZXBsb3lBY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogIlN3YXBQYWlyIiwgY29kZTogcGFpclRlbXBsYXRlQ29kZS51dGY4LCB0b2tlbjBWYXVsdDogPC10b2tlbjBWYXVsdCwgdG9rZW4xVmF1bHQ6IDwtdG9rZW4xVmF1bHQpCiAgICB9Cn0=",
              "CreatePairTemplate": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgVG9rZW4wTmFtZSBmcm9tIFRva2VuMEFkZHIKaW1wb3J0IFRva2VuMU5hbWUgZnJvbSBUb2tlbjFBZGRyCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnRyYW5zYWN0aW9uKCkgewogICAgcHJlcGFyZSh1c2VyQWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBsZXQgZmxvd1ZhdWx0UmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KSEKICAgICAgICBhc3NlcnQoZmxvd1ZhdWx0UmVmLmJhbGFuY2UgPj0gMC4wMDIsIG1lc3NhZ2U6ICJJbnN1ZmZpY2llbnQgYmFsYW5jZSB0byBjcmVhdGUgcGFpciwgbWluaW11bSBiYWxhbmNlIHJlcXVpcmVtZW50OiAwLjAwMiBmbG93IikKICAgICAgICBsZXQgYWNjb3VudENyZWF0aW9uRmVlVmF1bHQgPC0gZmxvd1ZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wMDEpCiAgICAgICAgbGV0IHRva2VuMFZhdWx0IDwtIFRva2VuME5hbWUuY3JlYXRlRW1wdHlWYXVsdCgpCiAgICAgICAgbGV0IHRva2VuMVZhdWx0IDwtIFRva2VuMU5hbWUuY3JlYXRlRW1wdHlWYXVsdCgpCiAgICAgICAgU3dhcEZhY3RvcnkuY3JlYXRlUGFpcih0b2tlbjBWYXVsdDogPC10b2tlbjBWYXVsdCwgdG9rZW4xVmF1bHQ6IDwtdG9rZW4xVmF1bHQsIGFjY291bnRDcmVhdGlvbkZlZTogPC1hY2NvdW50Q3JlYXRpb25GZWVWYXVsdCkKICAgIH0KfQ==",
              "AddLiquidity": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgU3dhcEZhY3RvcnkgZnJvbSAweGIwNjNjMTZjYWM4NWRiZDEKaW1wb3J0IFN3YXBJbnRlcmZhY2VzIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwRXJyb3IgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKdHJhbnNhY3Rpb24oCiAgICB0b2tlbjBLZXk6IFN0cmluZywKICAgIHRva2VuMUtleTogU3RyaW5nLAogICAgdG9rZW4wSW5EZXNpcmVkOiBVRml4NjQsCiAgICB0b2tlbjFJbkRlc2lyZWQ6IFVGaXg2NCwKICAgIHRva2VuMEluTWluOiBVRml4NjQsCiAgICB0b2tlbjFJbk1pbjogVUZpeDY0LAogICAgZGVhZGxpbmU6IFVGaXg2NCwKICAgIHRva2VuMFZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbjFWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAopIHsKICAgIHByZXBhcmUodXNlckFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgYXNzZXJ0KGRlYWRsaW5lID49IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiQWRkTGlxdWlkaXR5OiBleHBpcmVkICIuY29uY2F0KGRlYWRsaW5lLnRvU3RyaW5nKCkpLmNvbmNhdCgiIDwgIikuY29uY2F0KGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcC50b1N0cmluZygpKSwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5FWFBJUkVECiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgICAgbGV0IHBhaXJBZGRyID0gU3dhcEZhY3RvcnkuZ2V0UGFpckFkZHJlc3ModG9rZW4wS2V5OiB0b2tlbjBLZXksIHRva2VuMUtleTogdG9rZW4xS2V5KQogICAgICAgICAgICA/PyBwYW5pYygiQWRkTGlxdWlkaXR5OiBub25leGlzdGVudCBwYWlyICIuY29uY2F0KHRva2VuMEtleSkuY29uY2F0KCIgPC0+ICIpLmNvbmNhdCh0b2tlbjFLZXkpLmNvbmNhdCgiLCBjcmVhdGUgcGFpciBmaXJzdCIpKQogICAgICAgIGxldCBwYWlyUHVibGljUmVmID0gZ2V0QWNjb3VudChwYWlyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme1N3YXBJbnRlcmZhY2VzLlBhaXJQdWJsaWN9PihTd2FwQ29uZmlnLlBhaXJQdWJsaWNQYXRoKS5ib3Jyb3coKSEKICAgICAgICBsZXQgcGFpckluZm8gPSBwYWlyUHVibGljUmVmLmdldFBhaXJJbmZvKCkKICAgICAgICB2YXIgdG9rZW4wSW4gPSAwLjAKICAgICAgICB2YXIgdG9rZW4xSW4gPSAwLjAKICAgICAgICB2YXIgdG9rZW4wUmVzZXJ2ZSA9IDAuMAogICAgICAgIHZhciB0b2tlbjFSZXNlcnZlID0gMC4wCiAgICAgICAgaWYgdG9rZW4wS2V5ID09IChwYWlySW5mb1swXSBhcyEgU3RyaW5nKSB7CiAgICAgICAgICAgIHRva2VuMFJlc2VydmUgPSAocGFpckluZm9bMl0gYXMhIFVGaXg2NCkKICAgICAgICAgICAgdG9rZW4xUmVzZXJ2ZSA9IChwYWlySW5mb1szXSBhcyEgVUZpeDY0KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRva2VuMFJlc2VydmUgPSAocGFpckluZm9bM10gYXMhIFVGaXg2NCkKICAgICAgICAgICAgdG9rZW4xUmVzZXJ2ZSA9IChwYWlySW5mb1syXSBhcyEgVUZpeDY0KQogICAgICAgIH0KICAgICAgICBpZiB0b2tlbjBSZXNlcnZlID09IDAuMCAmJiB0b2tlbjFSZXNlcnZlID09IDAuMCB7CiAgICAgICAgICAgIHRva2VuMEluID0gdG9rZW4wSW5EZXNpcmVkCiAgICAgICAgICAgIHRva2VuMUluID0gdG9rZW4xSW5EZXNpcmVkCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIGFtb3VudDFPcHRpbWFsID0gU3dhcENvbmZpZy5xdW90ZShhbW91bnRBOiB0b2tlbjBJbkRlc2lyZWQsIHJlc2VydmVBOiB0b2tlbjBSZXNlcnZlLCByZXNlcnZlQjogdG9rZW4xUmVzZXJ2ZSkKICAgICAgICAgICAgaWYgKGFtb3VudDFPcHRpbWFsIDw9IHRva2VuMUluRGVzaXJlZCkgewogICAgICAgICAgICAgICAgYXNzZXJ0KGFtb3VudDFPcHRpbWFsID49IHRva2VuMUluTWluLCBtZXNzYWdlOgogICAgICAgICAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgICAgICAgICAgbXNnOiAiU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRSBleHBlY3QgbWluIi5jb25jYXQodG9rZW4xSW5NaW4udG9TdHJpbmcoKSkuY29uY2F0KCIgZ290ICIpLmNvbmNhdChhbW91bnQxT3B0aW1hbC50b1N0cmluZygpKSwKICAgICAgICAgICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICB0b2tlbjBJbiA9IHRva2VuMEluRGVzaXJlZAogICAgICAgICAgICAgICAgdG9rZW4xSW4gPSBhbW91bnQxT3B0aW1hbAogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdmFyIGFtb3VudDBPcHRpbWFsID0gU3dhcENvbmZpZy5xdW90ZShhbW91bnRBOiB0b2tlbjFJbkRlc2lyZWQsIHJlc2VydmVBOiB0b2tlbjFSZXNlcnZlLCByZXNlcnZlQjogdG9rZW4wUmVzZXJ2ZSkKICAgICAgICAgICAgICAgIGFzc2VydChhbW91bnQwT3B0aW1hbCA8PSB0b2tlbjBJbkRlc2lyZWQpCiAgICAgICAgICAgICAgICBhc3NlcnQoYW1vdW50ME9wdGltYWwgPj0gdG9rZW4wSW5NaW4sIG1lc3NhZ2U6CiAgICAgICAgICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgICAgICAgICBtc2c6ICJTTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFIGV4cGVjdCBtaW4iLmNvbmNhdCh0b2tlbjBJbk1pbi50b1N0cmluZygpKS5jb25jYXQoIiBnb3QgIikuY29uY2F0KGFtb3VudDBPcHRpbWFsLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHRva2VuMEluID0gYW1vdW50ME9wdGltYWwKICAgICAgICAgICAgICAgIHRva2VuMUluID0gdG9rZW4xSW5EZXNpcmVkCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgbGV0IHRva2VuMFZhdWx0IDwtIHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW4wVmF1bHRQYXRoKSEud2l0aGRyYXcoYW1vdW50OiB0b2tlbjBJbikKICAgICAgICBsZXQgdG9rZW4xVmF1bHQgPC0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbjFWYXVsdFBhdGgpIS53aXRoZHJhdyhhbW91bnQ6IHRva2VuMUluKQogICAgICAgIGxldCBscFRva2VuVmF1bHQgPC0gcGFpclB1YmxpY1JlZi5hZGRMaXF1aWRpdHkoCiAgICAgICAgICAgIHRva2VuQVZhdWx0OiA8LSB0b2tlbjBWYXVsdCwKICAgICAgICAgICAgdG9rZW5CVmF1bHQ6IDwtIHRva2VuMVZhdWx0CiAgICAgICAgKQogICAgICAgIGxldCBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoID0gU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aCA9IFN3YXBDb25maWcuTHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoCiAgICAgICAgdmFyIGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZTd2FwRmFjdG9yeS5McFRva2VuQ29sbGVjdGlvbj4oZnJvbTogbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICBpZiBscFRva2VuQ29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgICAgICAgICBkZXN0cm95IDwtIHVzZXJBY2NvdW50LmxvYWQ8QEFueVJlc291cmNlPihmcm9tOiBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5zYXZlKDwtU3dhcEZhY3RvcnkuY3JlYXRlRW1wdHlMcFRva2VuQ29sbGVjdGlvbigpLCB0bzogbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQubGluazwme1N3YXBJbnRlcmZhY2VzLkxwVG9rZW5Db2xsZWN0aW9uUHVibGljfT4obHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoLCB0YXJnZXQ6IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZTd2FwRmFjdG9yeS5McFRva2VuQ29sbGVjdGlvbj4oZnJvbTogbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgbHBUb2tlbkNvbGxlY3Rpb25SZWYhLmRlcG9zaXQocGFpckFkZHI6IHBhaXJBZGRyLCBscFRva2VuVmF1bHQ6IDwtIGxwVG9rZW5WYXVsdCkKICAgIH0KfQ==",
              "RemoveLiquidity": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgU3dhcEZhY3RvcnkgZnJvbSAweGIwNjNjMTZjYWM4NWRiZDEKaW1wb3J0IFN3YXBJbnRlcmZhY2VzIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwRXJyb3IgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKdHJhbnNhY3Rpb24oCiAgICB0b2tlbjBLZXk6IFN0cmluZywKICAgIHRva2VuMUtleTogU3RyaW5nLAogICAgbHBUb2tlbkFtb3VudDogVUZpeDY0LAogICAgdG9rZW4wT3V0TWluOiBVRml4NjQsCiAgICB0b2tlbjFPdXRNaW46IFVGaXg2NCwKICAgIGRlYWRsaW5lOiBVRml4NjQsCiAgICB0b2tlbjBWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW4xVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKKSB7CiAgICBwcmVwYXJlKHVzZXJBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGFzc2VydChkZWFkbGluZSA+PSBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAsIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIlJlbW92ZUxpcXVpZGl0eTogZXhwaXJlZCAiLmNvbmNhdChkZWFkbGluZS50b1N0cmluZygpKS5jb25jYXQoIiA8ICIpLmNvbmNhdChnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAudG9TdHJpbmcoKSksCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuRVhQSVJFRAogICAgICAgICAgICApCiAgICAgICAgKQogICAgICAgIGxldCBwYWlyQWRkciA9IFN3YXBGYWN0b3J5LmdldFBhaXJBZGRyZXNzKHRva2VuMEtleTogdG9rZW4wS2V5LCB0b2tlbjFLZXk6IHRva2VuMUtleSkKICAgICAgICAgICAgPz8gcGFuaWMoIlJlbW92ZUxpcXVpZGl0eTogbm9uZXhpc3RlbnQgcGFpciAiLmNvbmNhdCh0b2tlbjBLZXkpLmNvbmNhdCgiIDwtPiAiKS5jb25jYXQodG9rZW4xS2V5KS5jb25jYXQoIiwgY3JlYXRlIHBhaXIgZmlyc3QiKSkKICAgICAgICBsZXQgbHBUb2tlbkNvbGxlY3Rpb25SZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JlN3YXBGYWN0b3J5LkxwVG9rZW5Db2xsZWN0aW9uPihmcm9tOiBTd2FwQ29uZmlnLkxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJSZW1vdmVMaXF1aWRpdHk6IGNhbm5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIExwVG9rZW5Db2xsZWN0aW9uIikKICAgICAgICBsZXQgbHBUb2tlblJlbW92ZSA8LSBscFRva2VuQ29sbGVjdGlvblJlZi53aXRoZHJhdyhwYWlyQWRkcjogcGFpckFkZHIsIGFtb3VudDogbHBUb2tlbkFtb3VudCkKICAgICAgICBsZXQgdG9rZW5zIDwtIGdldEFjY291bnQocGFpckFkZHIpLmdldENhcGFiaWxpdHk8JntTd2FwSW50ZXJmYWNlcy5QYWlyUHVibGljfT4oU3dhcENvbmZpZy5QYWlyUHVibGljUGF0aCkuYm9ycm93KCkhLnJlbW92ZUxpcXVpZGl0eShscFRva2VuVmF1bHQ6IDwtbHBUb2tlblJlbW92ZSkKICAgICAgICBsZXQgdG9rZW4wVmF1bHQgPC0gdG9rZW5zWzBdLndpdGhkcmF3KGFtb3VudDogdG9rZW5zWzBdLmJhbGFuY2UpCiAgICAgICAgbGV0IHRva2VuMVZhdWx0IDwtIHRva2Vuc1sxXS53aXRoZHJhdyhhbW91bnQ6IHRva2Vuc1sxXS5iYWxhbmNlKQogICAgICAgIGRlc3Ryb3kgdG9rZW5zCiAgICAgICAgYXNzZXJ0KHRva2VuMFZhdWx0LmJhbGFuY2UgPj0gdG9rZW4wT3V0TWluICYmIHRva2VuMVZhdWx0LmJhbGFuY2UgPj0gdG9rZW4xT3V0TWluLCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJSZW1vdmVMaXF1aWRpdHk6IElOU1VGRklDSUVOVF9SRU1PVkVfTElRVUlESVRZX09VVF9BTU9VTlQiLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UKICAgICAgICAgICAgKQogICAgICAgICkKICAgICAgICBsZXQgbG9jYWxWYXVsdDBSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuMFZhdWx0UGF0aCkhCiAgICAgICAgbGV0IGxvY2FsVmF1bHQxUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbjFWYXVsdFBhdGgpIQogICAgICAgIGlmIHRva2VuMFZhdWx0LmlzSW5zdGFuY2UobG9jYWxWYXVsdDBSZWYuZ2V0VHlwZSgpKSB7CiAgICAgICAgICAgIGxvY2FsVmF1bHQwUmVmLmRlcG9zaXQoZnJvbTogPC10b2tlbjBWYXVsdCkKICAgICAgICAgICAgbG9jYWxWYXVsdDFSZWYuZGVwb3NpdChmcm9tOiA8LXRva2VuMVZhdWx0KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxvY2FsVmF1bHQwUmVmLmRlcG9zaXQoZnJvbTogPC10b2tlbjFWYXVsdCkKICAgICAgICAgICAgbG9jYWxWYXVsdDFSZWYuZGVwb3NpdChmcm9tOiA8LXRva2VuMFZhdWx0KQogICAgICAgIH0KICAgIH0KfQ==",
              "SwapExactTokensForTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgVG9rZW4xTmFtZSBmcm9tIFRva2VuMUFkZHIKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IFN3YXBSb3V0ZXIgZnJvbSAweGE2ODUwNzc2YTk0ZTY1NTEKaW1wb3J0IFN3YXBFcnJvciBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgp0cmFuc2FjdGlvbigKICAgIHRva2VuS2V5RmxhdFNwbGl0UGF0aDogW1N0cmluZ10sCiAgICBhbW91bnRJblNwbGl0OiBbVUZpeDY0XSwKICAgIGFtb3VudE91dE1pbjogVUZpeDY0LAogICAgZGVhZGxpbmU6IFVGaXg2NCwKICAgIHRva2VuSW5WYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW5PdXRWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW5PdXRSZWNlaXZlclBhdGg6IFB1YmxpY1BhdGgsCiAgICB0b2tlbk91dEJhbGFuY2VQYXRoOiBQdWJsaWNQYXRoLAopIHsKICAgIHByZXBhcmUodXNlckFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgYXNzZXJ0KGRlYWRsaW5lID49IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiRVhQSVJFRCIsCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuRVhQSVJFRAogICAgICAgICAgICApCiAgICAgICAgKQogICAgICAgIGxldCBsZW4gPSB0b2tlbktleUZsYXRTcGxpdFBhdGgubGVuZ3RoCiAgICAgICAgbGV0IHRva2VuSW5LZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbMF0KICAgICAgICBsZXQgdG9rZW5PdXRLZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbbGVuLTFdCiAgICAgICAgdmFyIHRva2VuT3V0QW1vdW50VG90YWwgPSAwLjAKICAgICAgICB2YXIgdG9rZW5PdXRSZWNlaXZlclJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgaWYgdG9rZW5PdXRSZWNlaXZlclJlZiA9PSBuaWwgewogICAgICAgICAgICB1c2VyQWNjb3VudC5zYXZlKDwtIFRva2VuMU5hbWUuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50Lmxpbms8JlRva2VuMU5hbWUuVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHRva2VuT3V0UmVjZWl2ZXJQYXRoLCB0YXJnZXQ6IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5saW5rPCZUb2tlbjFOYW1lLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KHRva2VuT3V0QmFsYW5jZVBhdGgsIHRhcmdldDogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgIH0KICAgICAgICB2YXIgcGF0aEluZGV4ID0gMAogICAgICAgIHZhciBpID0gMAogICAgICAgIHZhciBwYXRoOiBbU3RyaW5nXSA9IFtdCiAgICAgICAgd2hpbGUoaSA8IGxlbikgewogICAgICAgICAgICB2YXIgY3VyVG9rZW5LZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbaV0KICAgICAgICAgICAgcGF0aC5hcHBlbmQoY3VyVG9rZW5LZXkpCiAgICAgICAgICAgIGlmIChjdXJUb2tlbktleSA9PSB0b2tlbk91dEtleSkgewogICAgICAgICAgICAgICAgbGV0IHRva2VuSW5BbW91bnQgPSBhbW91bnRJblNwbGl0W3BhdGhJbmRleF0KICAgICAgICAgICAgICAgIGxldCB0b2tlbkluVmF1bHQgPC0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbkluVmF1bHRQYXRoKSEud2l0aGRyYXcoYW1vdW50OiB0b2tlbkluQW1vdW50KQogICAgICAgICAgICAgICAgbGV0IHRva2VuT3V0VmF1bHQgPC0gU3dhcFJvdXRlci5zd2FwV2l0aFBhdGgodmF1bHRJbjogPC0gdG9rZW5JblZhdWx0LCB0b2tlbktleVBhdGg6IHBhdGgsIGV4YWN0QW1vdW50czogbmlsKQogICAgICAgICAgICAgICAgdG9rZW5PdXRBbW91bnRUb3RhbCA9IHRva2VuT3V0QW1vdW50VG90YWwgKyB0b2tlbk91dFZhdWx0LmJhbGFuY2UKICAgICAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYhLmRlcG9zaXQoZnJvbTogPC0gdG9rZW5PdXRWYXVsdCkKICAgICAgICAgICAgICAgIHBhdGggPSBbXQogICAgICAgICAgICAgICAgcGF0aEluZGV4ID0gcGF0aEluZGV4ICsgMQogICAgICAgICAgICB9CiAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgIH0KICAgICAgICBhc3NlcnQodG9rZW5PdXRBbW91bnRUb3RhbCA+PSBhbW91bnRPdXRNaW4sIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UgZXhwZWN0IG1pbiAiLmNvbmNhdChhbW91bnRPdXRNaW4udG9TdHJpbmcoKSkuY29uY2F0KCIgZ290ICIpLmNvbmNhdCh0b2tlbk91dEFtb3VudFRvdGFsLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UKICAgICAgICAgICAgKQogICAgICAgICkKICAgIH0KfQ==",
              "SwapTokensForExactTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgVG9rZW4xTmFtZSBmcm9tIFRva2VuMUFkZHIKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IFN3YXBSb3V0ZXIgZnJvbSAweGE2ODUwNzc2YTk0ZTY1NTEKaW1wb3J0IFN3YXBFcnJvciBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgp0cmFuc2FjdGlvbigKICAgIHRva2VuS2V5RmxhdFNwbGl0UGF0aDogW1N0cmluZ10sCiAgICBhbW91bnRPdXRTcGxpdDogW1VGaXg2NF0sCiAgICBhbW91bnRJbk1heDogVUZpeDY0LAogICAgZGVhZGxpbmU6IFVGaXg2NCwKICAgIHRva2VuSW5WYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW5PdXRWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW5PdXRSZWNlaXZlclBhdGg6IFB1YmxpY1BhdGgsCiAgICB0b2tlbk91dEJhbGFuY2VQYXRoOiBQdWJsaWNQYXRoLAopIHsKICAgIHByZXBhcmUodXNlckFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgYXNzZXJ0KCBkZWFkbGluZSA+PSBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAsIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIkVYUElSRUQiLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLkVYUElSRUQKICAgICAgICAgICAgKQogICAgICAgICkKICAgICAgICBsZXQgbGVuID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoLmxlbmd0aAogICAgICAgIGxldCB0b2tlbkluS2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoWzBdCiAgICAgICAgbGV0IHRva2VuT3V0S2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoW2xlbi0xXQogICAgICAgIHZhciB0b2tlbk91dEFtb3VudFRvdGFsID0gMC4wCiAgICAgICAgdmFyIHRva2VuT3V0UmVjZWl2ZXJSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgIGlmIHRva2VuT3V0UmVjZWl2ZXJSZWYgPT0gbmlsIHsKICAgICAgICAgICAgdXNlckFjY291bnQuc2F2ZSg8LSBUb2tlbjFOYW1lLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5saW5rPCZUb2tlbjFOYW1lLlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pih0b2tlbk91dFJlY2VpdmVyUGF0aCwgdGFyZ2V0OiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQubGluazwmVG9rZW4xTmFtZS5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9Pih0b2tlbk91dEJhbGFuY2VQYXRoLCB0YXJnZXQ6IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB0b2tlbk91dFJlY2VpdmVyUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICB9CiAgICAgICAgdmFyIHBhdGhJbmRleCA9IDAKICAgICAgICB2YXIgaSA9IDAKICAgICAgICB2YXIgcGF0aDogW1N0cmluZ10gPSBbXQogICAgICAgIHZhciBhbW91bnRJblRvdGFsID0gMC4wCiAgICAgICAgd2hpbGUoaSA8IGxlbikgewogICAgICAgICAgICB2YXIgY3VyVG9rZW5LZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbaV0KICAgICAgICAgICAgcGF0aC5hcHBlbmQoY3VyVG9rZW5LZXkpCiAgICAgICAgICAgIGlmIChjdXJUb2tlbktleSA9PSB0b2tlbk91dEtleSkgewogICAgICAgICAgICAgICAgbGV0IHRva2VuT3V0RXhwZWN0QW1vdW50ID0gYW1vdW50T3V0U3BsaXRbcGF0aEluZGV4XQogICAgICAgICAgICAgICAgbGV0IGFtb3VudHMgPSBTd2FwUm91dGVyLmdldEFtb3VudHNJbihhbW91bnRPdXQ6IHRva2VuT3V0RXhwZWN0QW1vdW50LCB0b2tlbktleVBhdGg6IHBhdGgpCiAgICAgICAgICAgICAgICBsZXQgdG9rZW5JbkFtb3VudCA9IGFtb3VudHNbMF0KICAgICAgICAgICAgICAgIGFtb3VudEluVG90YWwgPSBhbW91bnRJblRvdGFsICsgdG9rZW5JbkFtb3VudAogICAgICAgICAgICAgICAgbGV0IHRva2VuSW5WYXVsdCA8LSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuSW5WYXVsdFBhdGgpIS53aXRoZHJhdyhhbW91bnQ6IHRva2VuSW5BbW91bnQpCiAgICAgICAgICAgICAgICBsZXQgdG9rZW5PdXRWYXVsdCA8LSBTd2FwUm91dGVyLnN3YXBXaXRoUGF0aCh2YXVsdEluOiA8LSB0b2tlbkluVmF1bHQsIHRva2VuS2V5UGF0aDogcGF0aCwgZXhhY3RBbW91bnRzOiBhbW91bnRzKQogICAgICAgICAgICAgICAgdG9rZW5PdXRBbW91bnRUb3RhbCA9IHRva2VuT3V0QW1vdW50VG90YWwgKyB0b2tlbk91dFZhdWx0LmJhbGFuY2UKICAgICAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYhLmRlcG9zaXQoZnJvbTogPC0gdG9rZW5PdXRWYXVsdCkKICAgICAgICAgICAgICAgIHBhdGggPSBbXQogICAgICAgICAgICAgICAgcGF0aEluZGV4ID0gcGF0aEluZGV4ICsgMQogICAgICAgICAgICB9CiAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgIH0KICAgICAgICBhc3NlcnQoYW1vdW50SW5Ub3RhbCA8PSBhbW91bnRJbk1heCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRSIsCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICApCiAgICAgICAgKQogICAgfQp9",
              "MintAllTokens": "",
              "QueryTokenNames": "cHViIGZ1biBtYWluKHF1ZXJ5QWRkcjogQWRkcmVzcyk6IFtTdHJpbmddIHsKICAgIGxldCBuYW1lcyA9IGdldEFjY291bnQocXVlcnlBZGRyKS5jb250cmFjdHMubmFtZXMKICAgIGxldCB0b2tlbk5hbWVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgY29sb246IFVJbnQ4ID0gNTgKICAgIGxldCBzcGFjZTogVUludDggPSAzMgogICAgbGV0IGJyYWNlOiBVSW50OCA9IDEyMwogICAgbGV0IHRva2VuSW5kZW50aWZpZXI6IFtVSW50OF0gPSBbNzAsIDExNywgMTEwLCAxMDMsIDEwNSwgOTgsIDEwOCwgMTAxLCA4NCwgMTExLCAxMDcsIDEwMSwgMTEwXSAKICAgIGxldCBpbmRlbnRpZmllckxlbmd0aCA9IHRva2VuSW5kZW50aWZpZXIubGVuZ3RoCiAgICBmb3IgbmFtZSBpbiBuYW1lcyB7CiAgICAgICAgbGV0IGNvZGUgPSBnZXRBY2NvdW50KHF1ZXJ5QWRkcikuY29udHJhY3RzLmdldChuYW1lOiBuYW1lKSEuY29kZQogICAgICAgIGxldCBjb2RlTGVuZ3RoID0gY29kZS5sZW5ndGgKICAgICAgICB2YXIgaXNUb2tlbiA9IGZhbHNlCiAgICAgICAgdmFyIGkgPSAxMwogICAgICAgIHdoaWxlKGkgPCBjb2RlTGVuZ3RoLTEpIHsKICAgICAgICAgICAgaWYgY29kZVtpXSA9PSBicmFjZSB7CiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGNvZGVbaV0gPT0gY29sb24gJiYgY29kZVtpKzFdID09IHNwYWNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgd2hpbGUoY29kZVtpXSA9PSBzcGFjZSAmJiBpIDwgY29kZUxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIGogPSAwCiAgICAgICAgICAgICAgICB3aGlsZShqIDwgaW5kZW50aWZpZXJMZW5ndGggJiYgaSA8IGNvZGVMZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBpZiBjb2RlW2ldID09IHRva2VuSW5kZW50aWZpZXJbal0gewogICAgICAgICAgICAgICAgICAgICAgICBpID0gaSArIDEKICAgICAgICAgICAgICAgICAgICAgICAgaiA9IGogKyAxCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBqID09IGluZGVudGlmaWVyTGVuZ3RoICYmIChjb2RlW2ldPT1zcGFjZSB8fCBjb2RlW2ldPT1icmFjZSkgewogICAgICAgICAgICAgICAgICAgIGlzVG9rZW4gPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIGlzVG9rZW4gewogICAgICAgICAgICB0b2tlbk5hbWVzLmFwcGVuZChuYW1lKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiB0b2tlbk5hbWVzCn0=",
              "QueryPairArrayAddr": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbihmcm9tOiBVSW50NjQsIHRvOiBVSW50NjQpOiBbQWRkcmVzc10gewogICAgcmV0dXJuIFN3YXBGYWN0b3J5LmdldFNsaWNlZFBhaXJzKGZyb206IGZyb20sIHRvOiB0bykKfQo=",
              "QueryPairArrayInfo": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbihmcm9tOiBVSW50NjQsIHRvOiBVSW50NjQpOiBbQW55U3RydWN0XSB7CiAgICByZXR1cm4gU3dhcEZhY3RvcnkuZ2V0U2xpY2VkUGFpckluZm9zKGZyb206IGZyb20sIHRvOiB0bykKfQo=",
              "QueryPairInfoByAddrs": "aW1wb3J0IFN3YXBJbnRlcmZhY2VzIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CnB1YiBmdW4gbWFpbihwYWlyQWRkcnM6IFtBZGRyZXNzXSk6IFtBbnlTdHJ1Y3RdIHsKICAgIHZhciByZXM6IFtBbnlTdHJ1Y3RdID0gW10KICAgIHZhciBpID0gMAogICAgdmFyIGxlbiA9IHBhaXJBZGRycy5sZW5ndGgKICAgIHdoaWxlKGkgPCBsZW4pIHsKICAgICAgICByZXMuYXBwZW5kKAogICAgICAgICAgICBnZXRBY2NvdW50KHBhaXJBZGRyc1tpXSkuZ2V0Q2FwYWJpbGl0eTwme1N3YXBJbnRlcmZhY2VzLlBhaXJQdWJsaWN9PihTd2FwQ29uZmlnLlBhaXJQdWJsaWNQYXRoKS5ib3Jyb3coKSEuZ2V0UGFpckluZm8oKQogICAgICAgICkKICAgICAgICBpID0gaSArIDEKICAgIH0KICAgIHJldHVybiByZXMKfQo=",
              "QueryPairInfoByTokenKey": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbih0b2tlbjBLZXk6U3RyaW5nICx0b2tlbjFLZXk6U3RyaW5nKTogQW55U3RydWN0PyB7CiAgICByZXR1cm4gU3dhcEZhY3RvcnkuZ2V0UGFpckluZm8odG9rZW4wS2V5OiB0b2tlbjBLZXksIHRva2VuMUtleTogdG9rZW4xS2V5KQp9",
              "QueryUserAllLiquidities": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwSW50ZXJmYWNlcyBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgpwdWIgZnVuIG1haW4odXNlckFkZHI6IEFkZHJlc3MpOiB7QWRkcmVzczogVUZpeDY0fSB7CiAgICB2YXIgbHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoID0gU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgIGxldCBscFRva2VuQ29sbGVjdGlvbkNhcCA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntTd2FwSW50ZXJmYWNlcy5McFRva2VuQ29sbGVjdGlvblB1YmxpY30+KGxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGlmIGxwVG9rZW5Db2xsZWN0aW9uQ2FwLmNoZWNrKCkgPT0gZmFsc2UgewogICAgICAgIHJldHVybiB7fQogICAgfQogICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gbHBUb2tlbkNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICBsZXQgbGlxdWlkaXR5UGFpckFkZHJzID0gbHBUb2tlbkNvbGxlY3Rpb25SZWYuZ2V0QWxsTFBUb2tlbnMoKQogICAgdmFyIHJlczoge0FkZHJlc3M6IFVGaXg2NH0gPSB7fQogICAgZm9yIHBhaXJBZGRyIGluIGxpcXVpZGl0eVBhaXJBZGRycyB7CiAgICAgICAgdmFyIGxwVG9rZW5BbW91bnQgPSBscFRva2VuQ29sbGVjdGlvblJlZi5nZXRMcFRva2VuQmFsYW5jZShwYWlyQWRkcjogcGFpckFkZHIpCiAgICAgICAgcmVzW3BhaXJBZGRyXSA9IGxwVG9rZW5BbW91bnQKICAgIH0KICAgIHJldHVybiByZXMKfQ==",
              "QueryTimestamp": "cHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICByZXR1cm4gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wCn0=",
              "QueryVaultBalanceBatched": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKcHViIGZ1biBtYWluKHVzZXJBZGRyOiBBZGRyZXNzLCB2YXVsdFBhdGhzOiBbUHVibGljUGF0aF0pOiBbVUZpeDY0XSB7CiAgICB2YXIgYmFsYW5jZXM6IFtVRml4NjRdID0gW10KICAgIGZvciB2YXVsdFBhdGggaW4gdmF1bHRQYXRocyB7CiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZSA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9Pih2YXVsdFBhdGgpCiAgICAgICAgaWYgdmF1bHRCYWxhbmNlLmNoZWNrKCkgPT0gZmFsc2UgfHwgdmF1bHRCYWxhbmNlLmJvcnJvdygpID09IG5pbCB7CiAgICAgICAgICAgIGJhbGFuY2VzLmFwcGVuZCgwLjApCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmFsYW5jZXMuYXBwZW5kKHZhdWx0QmFsYW5jZS5ib3Jyb3coKSEuYmFsYW5jZSkKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYmFsYW5jZXMKfQ==",
              "QueryTokenPathPrefix": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKcHViIGZ1biBtYWluKHRva2VuTmFtZTogU3RyaW5nLCB0b2tlbkFkZHI6IEFkZHJlc3MsIHVzZXJBZGRyOiBBZGRyZXNzKToge1N0cmluZzogQW55U3RydWN0fSB7CiAgICBsZXQgY29kZSA9IGdldEFjY291bnQodG9rZW5BZGRyKS5jb250cmFjdHMuZ2V0KG5hbWU6IHRva2VuTmFtZSkhLmNvZGUKICAgIHZhciBsb2NhbFByZWZpeCA9ICIiCiAgICB2YXIgYmFsYW5jZVBhdGggPSAvcHVibGljL1BhdGhQcmVmaXgxQmFsYW5jZQogICAgdmFyIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDFSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MSIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4MkJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDJSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MiIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4M0JhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDNSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MyIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4NEJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDRSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4NCIKICAgIH0KICAgIHJldHVybiB7CiAgICAgICAgIkxvY2FsUHJlZml4IjogbG9jYWxQcmVmaXgsCiAgICAgICAgIlRva2VuQ29kZSI6IGNvZGUKICAgIH0KfQ==",
              "CenterTokens": [
                "A.1654653399040a61.FlowToken",
                "A.3c5959b568896393.FUSD",
                "A.b19436aae4d94622.FiatToken",
                "A.cfdd90d4a00f7b5b.TeleportedTetherToken",
                "A.231cc0dbbcffc4b7.ceWETH",
                "A.231cc0dbbcffc4b7.ceWBTC"
              ]
            }
          },
          "previewnet": {
            "version": "1.0",
            "basic": {
              "accountStorage": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbCkgc3RydWN0IFN0b3JhZ2VJbmZvIHsKICAgIGFjY2VzcyhhbGwpICBsZXQgY2FwYWNpdHk6IFVJbnQ2NAogICAgYWNjZXNzKGFsbCkgIGxldCB1c2VkOiBVSW50NjQKICAgIGFjY2VzcyhhbGwpICBsZXQgYXZhaWxhYmxlOiBVSW50NjQKCiAgICBpbml0KGNhcGFjaXR5OiBVSW50NjQsIHVzZWQ6IFVJbnQ2NCwgYXZhaWxhYmxlOiBVSW50NjQpIHsKICAgICAgICBzZWxmLmNhcGFjaXR5ID0gY2FwYWNpdHkKICAgICAgICBzZWxmLnVzZWQgPSB1c2VkCiAgICAgICAgc2VsZi5hdmFpbGFibGUgPSBhdmFpbGFibGUKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6IFN0b3JhZ2VJbmZvIHsKICAgIGxldCBhY2N0ID0gZ2V0QWNjb3VudChhZGRyKQogICAgcmV0dXJuIFN0b3JhZ2VJbmZvKGNhcGFjaXR5OiBhY2N0LnN0b3JhZ2UuY2FwYWNpdHksCiAgICAgICAgICAgIHVzZWQ6IGFjY3Quc3RvcmFnZS51c2VkLAogICAgICAgICAgICBhdmFpbGFibGU6IGFjY3Quc3RvcmFnZS5jYXBhY2l0eSAtIGFjY3Quc3RvcmFnZS51c2VkKQp9",
              "addContractToAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIGNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29udHJhY3RzLCBBZGRDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLmFkZChuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "addContractToAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIGNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29udHJhY3RzLCBBZGRDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLmFkZChuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSB8IFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCiAgICAgICAgYWNjb3VudC5rZXlzLmFkZCgKICAgICAgICAgICAgcHVibGljS2V5OiBrZXksCiAgICAgICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwKICAgICAgICAgICAgd2VpZ2h0OiB3ZWlnaHQKICAgICAgICApCiAgICB9Cn0=",
              "addKeyTemp": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewoJcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewoKCQlsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCgkJLy8gYWRkIGFsbCB0aGUga2V5cyB0byB0aGUgYWNjb3VudAoJCWZvciBrZXkgaW4gcHVibGljS2V5cyB7CgkJCWFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQoJCX0KCQkKCQkvLyBhZGQgY29udHJhY3RzIGlmIHByb3ZpZGVkCgkJZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKCQkJYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKCQl9Cgl9Cn0=",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKCiB0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSwgZnVuZEFtb3VudDogVUZpeDY0KSB7CiAgICBsZXQgdG9rZW5SZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlJlY2VpdmVyfQogICAgbGV0IHNlbnRWYXVsdDogQEZ1bmdpYmxlVG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSB8IFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCiAgICAgICAgZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCiAgICAgICAgfQogICAgICAgIGZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CiAgICAgICAgICAgIGFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCiAgICAgICAgfQogICAgICAgIHNlbGYudG9rZW5SZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSA/PyBwYW5pYygiVW5hYmxlIHRvIGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UiKQogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIFZhdWx0ISIpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBmdW5kQW1vdW50KQogICAgfQogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi50b2tlblJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KIH0=",
              "createAccountEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewoKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCiAgICAgICAgfQoKICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KCiAgICAgICAgc2VsZi5hdXRoID0gYWNjb3VudAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50IDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsb2coYWNjb3VudC5hZGRyZXNzKCkpCgogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9CiA=",
              "createAccountSdk": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0LCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlIHwgU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKCiAgICAgICAgYWNjb3VudC5rZXlzLmFkZCgKICAgICAgICAgICAgcHVibGljS2V5OiBrZXksCiAgICAgICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwKICAgICAgICAgICAgd2VpZ2h0OiB3ZWlnaHQKICAgICAgICApCgogICAgICAgIGZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CiAgICAgICAgICAgIGFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCiAgICAgICAgfQogICAgfQp9",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKHB1YmxpY0tleXM6IFtDcnlwdG8uS2V5TGlzdEVudHJ5XSwgY29udHJhY3RzOiB7U3RyaW5nOiBTdHJpbmd9KSB7CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBmb3Iga2V5IGluIHB1YmxpY0tleXMgewogICAgICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LnB1YmxpY0tleSwgaGFzaEFsZ29yaXRobToga2V5Lmhhc2hBbGdvcml0aG0sIHdlaWdodDoga2V5LndlaWdodCkKICAgICAgICB9CgogICAgICAgIGZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CiAgICAgICAgICAgIGFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCiAgICAgICAgfQoKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgbGV0IGZlZVZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wMDAxKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAoKICAgICAgICBsZXQgcmVjZWl2ZXJSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LSBmZWVWYXVsdCkKCiAgICAgICAgc2VsZi5hdXRoID0gYWNjb3VudAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50IDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsb2coYWNjb3VudC5hZGRyZXNzKCkpCgogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9CiA=",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgUmVzdWx0IHsKICBhY2Nlc3MoYWxsKSBsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpIGxldCBiYWxhbmNlOiBVRml4NjQKICBhY2Nlc3MoYWxsKSBsZXQgYXZhaWxhYmxlQmFsYW5jZTogVUZpeDY0CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VVc2VkOiBVSW50NjQKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsCiAgICBiYWxhbmNlOiBVRml4NjQsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQsCiAgICBzdG9yYWdlVXNlZDogVUludDY0LAogICAgc3RvcmFnZUNhcGFjaXR5OiBVSW50NjQKICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICAgIHNlbGYuYXZhaWxhYmxlQmFsYW5jZSA9IGF2YWlsYWJsZUJhbGFuY2UKICAgIHNlbGYuc3RvcmFnZVVzZWQgPSBzdG9yYWdlVXNlZAogICAgc2VsZi5zdG9yYWdlQ2FwYWNpdHkgPSBzdG9yYWdlQ2FwYWNpdHkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBSZXN1bHQgewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIHJldHVybiBSZXN1bHQoCiAgICBhZGRyZXNzOiBhY2NvdW50LmFkZHJlc3MsCiAgICBiYWxhbmNlOiBhY2NvdW50LmJhbGFuY2UsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBhY2NvdW50LmF2YWlsYWJsZUJhbGFuY2UsCiAgICBzdG9yYWdlVXNlZDogYWNjb3VudC5zdG9yYWdlLnVzZWQsCiAgICBzdG9yYWdlQ2FwYWNpdHk6IGFjY291bnQuc3RvcmFnZS5jYXBhY2l0eQogICkKfQ==",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgdXNkQ2FwOiBVSW50NjQgPSBhY2NvdW50LnN0b3JhZ2UudXNlZAoKICByZXR1cm4gVUZpeDY0KHVzZENhcCkgKiAwLjAwMDAwMDAyCn0=",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCi8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2Ci8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3coKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgcmVmZXJlbmNlIHRvIHRoZSBWYXVsdCIpCiAgICBsZXQgdW5sb2NrZWRCYWxhbmNlID0gdW5sb2NrZWRWYXVsdC5iYWxhbmNlCiAgICAgICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPgogICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQogICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIAogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2UgKyB1bmxvY2tlZEJhbGFuY2UKfQ==",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgovLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5Ci8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldAogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiBVRml4NjQoMCkKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAKICAgIHJldHVybiBsb2NrZWRCYWxhbmNlCn0=",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5CmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0PCZGbG93VG9rZW4uVmF1bHQ+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3coKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgcmVmZXJlbmNlIHRvIHRoZSBWYXVsdCIpCiAgICBsZXQgdW5sb2NrZWRCYWxhbmNlID0gdW5sb2NrZWRWYXVsdC5iYWxhbmNlCgogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldAogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgIGlmIGxvY2tlZEJhbGFuY2UgPT0gVUZpeDY0KDApIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CgogICAgaWYgbG9ja2VkQmFsYW5jZVVubG9ja2VkID4gbG9ja2VkQmFsYW5jZSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZSArIGxvY2tlZEJhbGFuY2UKICAgIH0KCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZVVubG9ja2VkICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAovL0NoZWNrIHRoZSBzdGF0dXMgb2YgYSBmaW4gdXNlcgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nKSA6IEFkZHJlc3M/IHsKICAgIGxldCBzdGF0dXM9RklORC5zdGF0dXMobmFtZSkKICAgIHJldHVybiBzdGF0dXMub3duZXIKfQ==",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRklORCBmcm9tIDB4RmluZAoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogU3RyaW5nP3sKcmV0dXJuIEZJTkQucmV2ZXJzZUxvb2t1cChhZGRyZXNzKQp9",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBBZGRyZXNzPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1laGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnZhciBhZGRyZXNzID0gRG9tYWlucy5nZXRSZWNvcmRzKG5hbWVoYXNoKQpyZXR1cm4gYWRkcmVzcwp9",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwovLyBhZGRyZXNzOiBGbG93IGFkZHJlc3MKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW0RvbWFpbnMuRG9tYWluRGV0YWlsXSB7CmxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQpsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCmxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKbGV0IGRvbWFpbnM6W0RvbWFpbnMuRG9tYWluRGV0YWlsXSA9IFtdCmxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgpmb3IgaWQgaW4gaWRzIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpCiAgICBsZXQgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCiAgICBkb21haW5zLmFwcGVuZChkZXRhaWwpCn0KCnJldHVybiBkb21haW5zCn0=",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6IHtTdHJpbmc6IFVJbnQ2NH0gewogICAgbGV0IGFjY3QgPSBnZXRBY2NvdW50KGFkZHIpCiAgICBsZXQgcmV0OiB7U3RyaW5nOiBVSW50NjR9ID0ge30KICAgIHJldFsiY2FwYWNpdHkiXSA9IGFjY3Quc3RvcmFnZS5jYXBhY2l0eQogICAgcmV0WyJ1c2VkIl0gPSBhY2N0LnN0b3JhZ2UudXNlZAogICAgcmV0WyJhdmFpbGFibGUiXSA9IGFjY3Quc3RvcmFnZS5jYXBhY2l0eSAtICBhY2N0LnN0b3JhZ2UudXNlZAogICAgcmV0dXJuIHJldAp9",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KDxUb2tlbkJhbGFuY2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgY2FwYWJpbGl0eSIpCgogICAgcmV0dXJuIHZhdWx0UmVmLmJhbGFuY2UKfQ==",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcHVibGljS2V5OiBTdHJpbmcpOiBCb29sIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICB2YXIgZmxhZyA9IGZhbHNlCiAgZnVuIGFjY291bnRGbihhY2NvdW50S2V5OiBBY2NvdW50S2V5KTogQm9vbCB7CiAgICBsZXQga2V5ID0gU3RyaW5nLmVuY29kZUhleChhY2NvdW50S2V5LnB1YmxpY0tleS5wdWJsaWNLZXkpCiAgICBpZiBwdWJsaWNLZXkgPT0ga2V5IHsKICAgICAgZmxhZyA9IGFjY291bnRLZXkud2VpZ2h0ID49IFVGaXg2NCgxMDAwKSAmJiAhYWNjb3VudEtleS5pc1Jldm9rZWQKICAgIH0KICAgIHJldHVybiBmYWxzZQogIH0KICBhY2NvdW50LmtleXMuZm9yRWFjaChhY2NvdW50Rm4pCgogIHJldHVybiBmbGFnCn0K",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcHVibGljS2V5czogW1N0cmluZ10pOiBCb29sIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICB2YXIgd2VpZ2h0OiBVRml4NjQgPSAwLjAKICBmdW4gYWNjb3VudEZuKGFjY291bnRLZXk6IEFjY291bnRLZXkpOiBCb29sIHsKICAgIGxldCBrZXkgPSBTdHJpbmcuZW5jb2RlSGV4KGFjY291bnRLZXkucHVibGljS2V5LnB1YmxpY0tleSkKICAgIGlmIHB1YmxpY0tleXMuY29udGFpbnMoa2V5KSAmJiAhYWNjb3VudEtleS5pc1Jldm9rZWQgewogICAgICB3ZWlnaHQgPSB3ZWlnaHQgKyBhY2NvdW50S2V5LndlaWdodCAKICAgIH0KICAgIHJldHVybiBmYWxzZQogIH0KICBhY2NvdW50LmtleXMuZm9yRWFjaChhY2NvdW50Rm4pCgogIHJldHVybiB3ZWlnaHQgPj0gVUZpeDY0KDEwMDApCn0K",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgcmV0dXJuIGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyhMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQp9",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgIAogICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICBsZXQgYmFsYW5jZSA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5CYWxhbmNlUGF0aD4pCgogICAgcmV0dXJuIHJlY2VpdmVyICYmIGJhbGFuY2UKfQ==",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICA/PyBuaWwKCiAgICAKICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICB9CiAgICAKICAgIHJldHVybiAwLjAKfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcnM6IFtBZGRyZXNzXSk6IFtVRml4NjRdIHsKICAgIGxldCBiYWxzOiBbVUZpeDY0XSA9IFtdCgogICAgZm9yIGFkZHIgaW4gYWRkcnMgewogICAgICAgIGxldCBiYWwgPSBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcikKICAgICAgICBiYWxzLmFwcGVuZChiYWwpCiAgICB9CiAgICAKICAgIHJldHVybiBiYWxzCn0=",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgoKYWNjZXNzKGFsbCkgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgID8/IG5pbAoKICAgIAogICAgaWYgdmF1bHRSZWYgIT0gbmlsIHsKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgIH0KICAgIAogICAgcmV0dXJuIDAuMAp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyczogW0FkZHJlc3NdKTogW1VGaXg2NF0gewogICAgbGV0IGJhbHM6IFtVRml4NjRdID0gW10KCiAgICBmb3IgYWRkciBpbiBhZGRycyB7CiAgICAgICAgbGV0IGJhbCA9IGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyKQogICAgICAgIGJhbHMuYXBwZW5kKGJhbCkKICAgIH0KICAgIAogICAgcmV0dXJuIGJhbHMKfQ==",
              "removeAccountKeyByIndex": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihrZXlJbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChLZXlzKSAmQWNjb3VudCkgewogICAgICAgIHNpZ25lci5rZXlzLnJldm9rZShrZXlJbmRleDoga2V5SW5kZXgpCiAgICB9Cn0=",
              "removeContractFromAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFJlbW92ZUNvbnRyYWN0KSAmQWNjb3VudCkgewogICAgICAgIHNpZ25lci5jb250cmFjdHMucmVtb3ZlKG5hbWU6IG5hbWUpCiAgICB9Cn0=",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihpbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICAvLyBHZXQgYSBrZXkgZnJvbSBhbiBhdXRoIGFjY291bnQuCiAgICAgICAgbGV0IGtleUEgPSBzaWduZXIua2V5cy5yZXZva2Uoa2V5SW5kZXg6IGluZGV4KQogICAgfQp9",
              "test": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgcmVjaXBpZW50OiBBZGRyZXNzKSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcmVkCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
              "updateContractOfAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIGNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoVXBkYXRlQ29udHJhY3QpICZBY2NvdW50KSB7CiAgICAgICAgc2lnbmVyLmNvbnRyYWN0cy51cGRhdGUobmFtZTogbmFtZSwgY29kZTogY29kZS51dGY4KQogICAgfQp9",
              "verifyUserSignature": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigKICAgIG1lc3NhZ2U6IFN0cmluZywKICAgIHJhd1B1YmxpY0tleXM6IFtTdHJpbmddLAogICAgd2VpZ2h0czogW1VGaXg2NF0sCiAgICBzaWduQWxnb3M6IFtVSW50OF0sCiAgICBoYXNoQWxnb3M6IFtVSW50OF0sCiAgICBzaWduYXR1cmVzOiBbU3RyaW5nXSwKKTogQm9vbCB7CgogICAgbGV0IGtleUxpc3QgPSBDcnlwdG8uS2V5TGlzdCgpCgogICAgdmFyIGkgPSAwCiAgICBmb3IgcmF3UHVibGljS2V5IGluIHJhd1B1YmxpY0tleXMgewogICAga2V5TGlzdC5hZGQoCiAgICAgICAgUHVibGljS2V5KAogICAgICAgIHB1YmxpY0tleTogcmF3UHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduQWxnb3NbaV0pIQogICAgICAgICksCiAgICAgICAgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29zW2ldKSEsCiAgICAgICAgd2VpZ2h0OiB3ZWlnaHRzW2ldLAogICAgKQogICAgaSA9IGkgKyAxCiAgICB9CgogICAgbGV0IHNpZ25hdHVyZVNldDogW0NyeXB0by5LZXlMaXN0U2lnbmF0dXJlXSA9IFtdCgogICAgdmFyIGogPSAwCiAgICBmb3Igc2lnbmF0dXJlIGluIHNpZ25hdHVyZXMgewogICAgc2lnbmF0dXJlU2V0LmFwcGVuZCgKICAgICAgICBDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZSgKICAgICAgICAgICAga2V5SW5kZXg6IGosCiAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlLmRlY29kZUhleCgpCiAgICAgICAgKQogICAgKQogICAgICAgIGogPSBqICsgMQogICAgfQoKICAgIGxldCBzaWduZWREYXRhID0gbWVzc2FnZS5kZWNvZGVIZXgoKQoKICAgIHJldHVybiBrZXlMaXN0LnZlcmlmeSgKICAgICAgICBzaWduYXR1cmVTZXQ6IHNpZ25hdHVyZVNldCwKICAgICAgICBzaWduZWREYXRhOiBzaWduZWREYXRhLAogICAgICAgIGRvbWFpblNlcGFyYXRpb25UYWc6ICJGTE9XLVYwLjAtdXNlciIKICAgICkKfQ==",
              "verifyUserSignatureTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigKICAgIG1lc3NhZ2U6IFN0cmluZywKICAgIHJhd1B1YmxpY0tleTogU3RyaW5nLAogICAgd2VpZ2h0OiBVRml4NjQsCiAgICBzaWduQWxnbzogVUludDgsCiAgICBoYXNoQWxnbzogVUludDgsCiAgICBzaWduYXR1cmU6IFN0cmluZywKKTogQm9vbCB7CgogICAgbGV0IGtleUxpc3Q6IENyeXB0by5LZXlMaXN0ID0gQ3J5cHRvLktleUxpc3QoKQoKICAgIGtleUxpc3QuYWRkKAogICAgICAgIFB1YmxpY0tleSgKICAgICAgICBwdWJsaWNLZXk6IHJhd1B1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbkFsZ28pIQogICAgICAgICksCiAgICAgICAgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ28pISwKICAgICAgICB3ZWlnaHQ6IHdlaWdodCwKICAgICkKCiAgICBsZXQgc2lnbmF0dXJlU2V0OiBbQ3J5cHRvLktleUxpc3RTaWduYXR1cmVdID0gW10KCiAgICBzaWduYXR1cmVTZXQuYXBwZW5kKAogICAgICAgIENyeXB0by5LZXlMaXN0U2lnbmF0dXJlKAogICAgICAgICAgICBrZXlJbmRleDogMCwKICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUuZGVjb2RlSGV4KCkKICAgICAgICApCiAgICApCgogICAgbGV0IHNpZ25lZERhdGEgPSBtZXNzYWdlLmRlY29kZUhleCgpCgogICAgcmV0dXJuIGtleUxpc3QudmVyaWZ5KAogICAgICAgIHNpZ25hdHVyZVNldDogc2lnbmF0dXJlU2V0LAogICAgICAgIHNpZ25lZERhdGE6IHNpZ25lZERhdGEsCiAgICAgICAgZG9tYWluU2VwYXJhdGlvblRhZzogIkZMT1ctVjAuMC11c2VyIgogICAgKQp9",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCi8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2Ci8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKdHJhbnNhY3Rpb24oKSB7CgogICAgbGV0IGhvbGRlclJlZjogYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhbW91bnQ6IFVGaXg2NAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICBzZWxmLmhvbGRlclJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgoJCQkJc2VsZi52YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBzaWduZXIKICAgICAgICAuY2FwYWJpbGl0aWVzLmdldDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPgogICAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQoKICAgICAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgICAgICBwYW5pYygiQ291bGQgbm90IGdldCBmbG93IGxvY2tlZCB0b2tlbiB2YXVsdCIpCiAgICAgICAgfQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICAgICAgLy8gaWYgbG9ja2VkQmFsYW5jZSA9PSBVRml4NjQoMCkgewogICAgICAgIC8vICAgICBwYW5pYygiTm90IGVub3VnaCBhbW91bnQgdG8gd2l0aGRyYXciKQogICAgICAgIC8vIH0KCiAgICAgICAgc2VsZi5hbW91bnQgPSBsb2NrZWRCYWxhbmNlVW5sb2NrZWQKICAgIAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogc2VsZi5hbW91bnQpKQogICAgfQp9",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5CmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IGhvbGRlclJlZjogYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5ob2xkZXJSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gVG9rZW5Ib2xkZXIiKQoKICAgICAgICBzZWxmLnZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9"
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MsIHRhcmdldDogQWRkcmVzcyk6ICZGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSB7CiAgICByZXR1cm4gY29sbGVjdGlvbi5ib3Jyb3dQdWJsaWNBY2NvdW50Qm9va21hcmsoYWRkcmVzczogdGFyZ2V0KQogIH0gCgogIHJldHVybiBuaWwKfQ==",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MpOiAme0FkZHJlc3M6IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9fT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYWNjb3VudCBib29rbWFyayBjb2xsZWN0aW9uIikKCiAgcmV0dXJuIGNvbGxlY3Rpb24uZ2V0QWNjb3VudEJvb2ttYXJrcygpCn0="
            },
            "bridge": {
              "batchBridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZHM6IFtVSW50MjU2XSkgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKSAqIFVGaXg2NChpZHMubGVuZ3RoKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfSA8LSBzZWxmLmNvYS53aXRoZHJhd05GVCgKICAgICAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchBridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGFuIE5GVCBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBFUkM3MjEgaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gQ2FkZW5jZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWRzOiBbVUludDI1Nl0pIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgY29sbGVjdGlvbiBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkgKiBVRml4NjQoaWRzLmxlbmd0aCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "batchBridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogICAgCiAgICBsZXQgbmZ0czogQHtVSW50NjQgOiB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIHNlbGYubmZ0cyA8LSB7fQogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICBzZWxmLm5mdHNbaWRdIDwtISBuZnQKICAgICAgICB9CiAgICAgICAgLy8gc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAgKiBVRml4NjQoaWRzLmxlbmd0aCkKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICB2YXIgaWR4ID0gMAogICAgICAgIHdoaWxlIGlkeCA8IGlkcy5sZW5ndGggewogICAgICAgICAgICBsZXQgbmZ0SWQgPSBpZHNbaWR4XSEKICAgICAgICAgICAgbGV0IG5mdCA8LSBzZWxmLm5mdHMucmVtb3ZlKGtleTogbmZ0SWQpISBhcyBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKCAKICAgICAgICAgICAgICAgIG5mdDogPC0gbmZ0ISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgICAgICBpZHggPSBpZHggKyAxCiAgICAgICAgfQogICAgICAgCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5uZnRzCiAgICB9Cn0K",
              "batchBridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZHM6IFtVSW50NjRdKSB7CiAgICAKICAgIGxldCBuZnRzOiBAe1VJbnQ2NCA6IHtOb25GdW5naWJsZVRva2VuLk5GVH19CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgoKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCiAgICAgICAgCiAgICAgICAgc2VsZi5uZnRzIDwtIHt9CiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgICAgIHNlbGYubmZ0c1tpZF0gPC0hIG5mdAogICAgICAgIH0KICAgICAgICAvLyBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMCAqIFVGaXg2NChpZHMubGVuZ3RoKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHZhciBpZHggPSAwCiAgICAgICAgd2hpbGUgaWR4IDwgaWRzLmxlbmd0aCB7CiAgICAgICAgICAgIGxldCBuZnRJZCA9IGlkc1tpZHhdIQogICAgICAgICAgICBsZXQgbmZ0IDwtIHNlbGYubmZ0cy5yZW1vdmUoa2V5OiBuZnRJZCkhIGFzIEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICAgICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoIAogICAgICAgICAgICAgICAgbmZ0OiA8LSBuZnQhLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgICAgIGlkeCA9IGlkeCArIDEKICAgICAgICB9CiAgICAgICAKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLm5mdHMKICAgIH0KfQo=",
              "batchEvmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NlczogQXJyYXkgb2YgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4IHRvIGNoZWNrIGZvcgovLy8gICAgIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vICAgICBpbmRleGVkIG9uIHRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3Qgd2l0aG91dCAweCBwcmVmaXgKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NlczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchEvmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NlczogQXJyYXkgb2YgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4IHRvIGNoZWNrIGZvcgovLy8gICAgIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vICAgICBpbmRleGVkIG9uIHRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3Qgd2l0aG91dCAweCBwcmVmaXgKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NlczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgLy8gbGV0IGV2bUFkZHJlc3NlcyA9IFsiNkE5ZEE1ZDYzZkYzMzUzNjY3RDM0QzAyMDJDNjI4QzdEQTNjMkMxZiJdCiAgICBsZXQgcmVzdWx0czoge1N0cmluZzogQm9vbD99ID0ge30KICAgIGZvciBhZGRyZXNzSGV4IGluIGV2bUFkZHJlc3NlcyB7CiAgICAgICAgaWYgcmVzdWx0c1thZGRyZXNzSGV4XSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgYWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3NIZXgpIHsKICAgICAgICAgICAgbGV0IHJlcXVpcmVzT25ib2FyZGluZyA9IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzKQogICAgICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IGFkZHJlc3NIZXgsIHJlcXVpcmVzT25ib2FyZGluZykKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "batchIdentifierRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXJzOiBbU3RyaW5nXSk6IHtTdHJpbmc6IEJvb2w/fSB7CiAgICBsZXQgcmVzdWx0czoge1N0cmluZzogQm9vbD99ID0ge30KCiAgICBmb3IgaWRlbnRpZmllciBpbiBpZGVudGlmaWVycyB7CiAgICAgICAgaWYgcmVzdWx0c1tpZGVudGlmaWVyXSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICBsZXQgdHlwZTogVHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IGlkZW50aWZpZXIsIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSkKICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchIdentifierRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXJzOiBbU3RyaW5nXSk6IHtTdHJpbmc6IEJvb2w/fSB7CiAgICBsZXQgcmVzdWx0czoge1N0cmluZzogQm9vbD99ID0ge30KCiAgICBmb3IgaWRlbnRpZmllciBpbiBpZGVudGlmaWVycyB7CiAgICAgICAgaWYgcmVzdWx0c1tpZGVudGlmaWVyXSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICBsZXQgdHlwZTogVHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IGlkZW50aWZpZXIsIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSkKICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchOnboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIE5GVCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBORlRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBORlQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIGFkZHJlc3Nlc0FzSGV4OiBBcnJheSBvZiBFVk0gY29udHJhY3QgYWRkcmVzc2VzIChhcyBoZXggc3RyaW5nIHdpdGhvdXQgMHggcHJlZml4KSBkZWZpbmluZyB0aGUgCi8vLyAgICAgYnJpZGdlYWJsZSBhc3NldCB0byBiZSBvbmJvYXJkZWQKLy8vCnRyYW5zYWN0aW9uKGFkZHJlc3Nlc0FzSGV4OiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KGFkZHJlc3Nlc0FzSGV4Lmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gSXRlcmF0ZSBvdmVyIHByb3ZpZGVkIGFycmF5CiAgICAgICAgZm9yIGFkZHJlc3NIZXggaW4gYWRkcmVzc2VzQXNIZXggewogICAgICAgICAgICAvLyBDb252ZXJ0IGhleCBzdHJpbmcgdG8gRVZNQWRkcmVzcwogICAgICAgICAgICBsZXQgYWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3NIZXgpCiAgICAgICAgICAgIC8vIENvbnRpbnVlIGlmIHRoZSBoZXggaXMgbm90IGEgdmFsaWQgRVZNIGFkZHJlc3Mgb3IgaWYgdGhlIGFkZHJlc3MgaXMgYWxyZWFkeSBvbmJvYXJkZWQKICAgICAgICAgICAgaWYgYWRkcmVzcyA9PSBuaWwgfHwgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3MhKSAhPSB0cnVlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5RVZNQWRkcmVzcygKICAgICAgICAgICAgICAgIGFkZHJlc3MhLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgfQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "batchOnboardByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gdHlwZXM6IFRoZSBDYWRlbmNlIHR5cGVzIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24oaWRlbnRpZmllcnM6IFtTdHJpbmddKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgLy8gU2V0IGEgd2l0aGRyYXdhbCBsaW1pdCBmb3IgdGhlIHByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyTGltaXQgPSBGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUgKiBVRml4NjQodHlwZXMubGVuZ3RoKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihwcm92aWRlckxpbWl0KQogICAgICAgIC8vIENyZWF0ZSBTY29wZWRGVFByb3ZpZGVyIHRvIGV4cGlyZSBqdXN0IGFmdGVyIHRoaXMgdHJhbnNhY3Rpb24KICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBmb3IgaWRlbnRpZmllcnMgaW4gaWRlbnRpZmllcnMgeyAKICAgICAgICAgICAgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gdHlwZXM6IFRoZSBDYWRlbmNlIHR5cGVzIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24oaWRlbnRpZmllcnM6IFtTdHJpbmddKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgLy8gU2V0IGEgd2l0aGRyYXdhbCBsaW1pdCBmb3IgdGhlIHByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyTGltaXQgPSBGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUgKiBVRml4NjQoaWRlbnRpZmllcnMubGVuZ3RoKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihwcm92aWRlckxpbWl0KQogICAgICAgIC8vIENyZWF0ZSBTY29wZWRGVFByb3ZpZGVyIHRvIGV4cGlyZSBqdXN0IGFmdGVyIHRoaXMgdHJhbnNhY3Rpb24KICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBmb3IgaWRlbnRpZmllciBpbiBpZGVudGlmaWVycyB7IAogICAgICAgICAgICBsZXQgdHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKICAgICAgICAgICAgLy8gQ29udGludWUgb24gaWYgdGhlIHR5cGUgZG9lcyBub3QgcmVxdWlyZSBvbmJvYXJkaW5nCiAgICAgICAgICAgIGlmIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSAhPSB0cnVlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgICAgICB0eXBlLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgfQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "batchOnboardByType": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gdHlwZXM6IFRoZSBDYWRlbmNlIHR5cGVzIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZXM6IFtUeXBlXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KHR5cGVzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIHR5cGUgaW4gdHlwZXMgeyAKICAgICAgICAgICAgLy8gQ29udGludWUgb24gaWYgdGhlIHR5cGUgZG9lcyBub3QgcmVxdWlyZSBvbmJvYXJkaW5nCiAgICAgICAgICAgIGlmIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSAhPSB0cnVlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgICAgICB0eXBlLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgfQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "batchTypeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKHR5cGVzOiBbVHlwZV0pOiB7VHlwZTogQm9vbD99IHsKICAgIGxldCByZXN1bHRzOiB7VHlwZTogQm9vbD99ID0ge30KICAgIGZvciB0eXBlIGluIHR5cGVzIHsKICAgICAgICBpZiByZXN1bHRzW3R5cGVdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogdHlwZSwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchTypeRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXJzOiBbU3RyaW5nXSk6IHtTdHJpbmc6IEJvb2w/fSB7CiAgICAvLyBsZXQgaWRlbnRpZmllcnMgPSBbIkEuNDllN2E1YTRlZGVmZTQyZS5FeGFtcGxlVG9rZW4uVmF1bHQiLCJBLjQ5ZTdhNWE0ZWRlZmU0MmUuRXhhbXBsZU5GVC5ORlQiXQogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CgogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgewogICAgICAgIGlmIHJlc3VsdHNbaWRlbnRpZmllcl0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgbGV0IHR5cGU6IFR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBpZGVudGlmaWVyLCBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "bridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50MjU2KSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGFuIE5GVCBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBFUkM3MjEgaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gQ2FkZW5jZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQyNTYpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgY29sbGVjdGlvbiBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfSA8LSBzZWxmLmNvYS53aXRoZHJhd05GVCgKICAgICAgICAgICAgdHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCBORlQgaW50byB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbgogICAgICAgIHNlbGYuY29sbGVjdGlvbi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQoKICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLmNvbGxlY3Rpb24gPSByZWNlaXZlckFjY3QuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGFuIE5GVCBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBFUkM3MjEgaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gQ2FkZW5jZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQyNTYsIHJlY2VpdmVyOiBBZGRyZXNzKSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CgogICAgICAgIGxldCByZWNlaXZlckFjY3QgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHJlY2VpdmVyQWNjdC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgY29sbGVjdGlvbiBjYXBhYmlsaXRpZXMgZnJvbSBwdWJsaWMgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfSA8LSBzZWxmLmNvYS53aXRoZHJhd05GVCgKICAgICAgICAgICAgdHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCBORlQgaW50byB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbgogICAgICAgIHNlbGYuY29sbGVjdGlvbi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICAvLyBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YVN0cjogU3RyaW5nLCBnYXNMaW1pdDogVUludDY0KSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UsIEVWTS5DYWxsLCBFVk0uT3duZXIpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UsIEVWTS5DYWxsLCBFVk0uT3duZXIpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gY29udHJhY3RFVk1BZGRyZXNzLmRlY29kZUhleCgpCiAgICAgICAgbGV0IGV2bVRva2VuQWRkciA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIGxldCBkYXRhID0gZGF0YVN0ci5kZWNvZGVIZXgoKQoKICAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBmdW5naWJsZSB0b2tlbnMgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUKLy8vIEZsb3dFVk1CcmlkZ2UuCi8vLwovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVJbnQyNTYpIHsKCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlCiAgICBsZXQgcmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkMyMCBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gRnVuZ2libGVUb2tlbiBWYXVsdCB0eXBlCiAgICAgICAgc2VsZi52YXVsdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IHRva2VuQ29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiVmF1bHQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgVmF1bHQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQsIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIC8vIElmIHRoZSB2YXVsdCBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGl0IGFuZCBwdWJsaXNoIGFjY29yZGluZyB0byB0aGUgY29udHJhY3QncyBkZWZpbmVkIGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtdmF1bHREYXRhLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCgogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBsZXQgbWV0YWRhdGFDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwLCBhdDogdmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKG1ldGFkYXRhQ2FwLCBhdDogdmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5yZWNlaXZlciA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZhdWx0IGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZSByZXF1ZXN0CiAgICAgICAgbGV0IHZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9IDwtIHNlbGYuY29hLndpdGhkcmF3VG9rZW5zKAogICAgICAgICAgICB0eXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgYW1vdW50OiBhbW91bnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCB0b2tlbiBpbnRvIHRoZSBzaWduZXIncyB2YXVsdAogICAgICAgIHNlbGYucmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXZhdWx0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGZ1bmdpYmxlIHRva2VucyBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZQovLy8gRmxvd0VWTUJyaWRnZS4KLy8vCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUludDI1NikgewoKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUKICAgIGxldCByZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzIwIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBGdW5naWJsZVRva2VuIFZhdWx0IHR5cGUKICAgICAgICBzZWxmLnZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbkNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBWYXVsdCB0eXBlIG9mOiAiIC5jb25jYXQodG9rZW5Db250cmFjdEFkZHJlc3MudG9TdHJpbmcoKSkuY29uY2F0KCIuIikuY29uY2F0KHRva2VuQ29udHJhY3ROYW1lKS5jb25jYXQoIi5WYXVsdCIpKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBWYXVsdCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdCwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgLy8gSWYgdGhlIHZhdWx0IGRvZXMgbm90IGV4aXN0LCBjcmVhdGUgaXQgYW5kIHB1Ymxpc2ggYWNjb3JkaW5nIHRvIHRoZSBjb250cmFjdCdzIGRlZmluZWQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC12YXVsdERhdGEuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKCiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxldCBtZXRhZGF0YUNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXAsIGF0OiB2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gobWV0YWRhdGFDYXAsIGF0OiB2YXVsdERhdGEubWV0YWRhdGFQYXRoKQogICAgICAgIH0KICAgICAgICBzZWxmLnJlY2VpdmVyID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmF1bHQgZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlIHJlcXVlc3QKICAgICAgICBsZXQgdmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdUb2tlbnMoCiAgICAgICAgICAgIHR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIHRva2VuIGludG8gdGhlIHNpZ25lcidzIHZhdWx0CiAgICAgICAgc2VsZi5yZWNlaXZlci5kZXBvc2l0KGZyb206IDwtdmF1bHQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBmdW5naWJsZSB0b2tlbnMgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUKLy8vIEZsb3dFVk1CcmlkZ2UuCi8vLwovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVJbnQyNTYsIHJlY2VpdmVyOiBBZGRyZXNzKSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIGxldCByZWNlaXZlckFjY3QgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSByZWNlaXZlckFjY3QuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pih2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCByZWNlaXZlciBjYXBhYmlsaXRpZXMgZnJvbSBwdWJsaWMgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBmdW5naWJsZSB0b2tlbnMgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUKLy8vIEZsb3dFVk1CcmlkZ2UuCi8vLwovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVJbnQyNTYsIHJlY2VpdmVyOiBBZGRyZXNzKSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIGxldCByZWNlaXZlckFjY3QgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSByZWNlaXZlckFjY3QuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pih2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCByZWNlaXZlciBjYXBhYmlsaXRpZXMgZnJvbSBwdWJsaWMgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIGZ1bmRzIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIGxldCB2YXVsdCA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KAogICAgICAgICAgICAgICAgZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgRnVuZ2libGVUb2tlbiBWYXVsdCIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgYmFsYW5jZSAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHQud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICAvLyBBcHByb3hpbWF0ZSB0aGUgYnJpZGdlIGZlZSBiYXNlZCBvbiB0aGUgZGlmZmVyZW5jZSBpbiBzdG9yYWdlIHVzYWdlIHdpdGggc29tZSBidWZmZXIKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBsZXQgdmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCgogICAgICAgIHZhciBhZGRyZXNzQnl0ZXM6IFtVSW50OF0gPSBjb250cmFjdEVWTUFkZHJlc3MuZGVjb2RlSGV4KCkKICAgICAgICBsZXQgZXZtVG9rZW5BZGRyID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgLy8gbGV0IGRhdGEgPSBkYXRhU3RyLmRlY29kZUhleCgpCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YVN0cjogU3RyaW5nLCBnYXNMaW1pdDogVUludDY0KSB7CgogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UsIEVWTS5DYWxsLCBFVk0uT3duZXIpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIGZ1bmRzIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIGxldCB2YXVsdCA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KAogICAgICAgICAgICAgICAgZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgRnVuZ2libGVUb2tlbiBWYXVsdCIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgYmFsYW5jZSAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHQud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICAvLyBBcHByb3hpbWF0ZSB0aGUgYnJpZGdlIGZlZSBiYXNlZCBvbiB0aGUgZGlmZmVyZW5jZSBpbiBzdG9yYWdlIHVzYWdlIHdpdGggc29tZSBidWZmZXIKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYuc2VudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQoKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gY29udHJhY3RFVk1BZGRyZXNzLmRlY29kZUhleCgpCiAgICAgICAgbGV0IGV2bVRva2VuQWRkciA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIGxldCBkYXRhID0gZGF0YVN0ci5kZWNvZGVIZXgoKQoKICAgICAgICBsZXQgcmVzID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IGV2bVRva2VuQWRkciwKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQoKICAgICAgICBhc3NlcnQocmVzLnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJFVk0gY2FsbCBmYWlsZWQiKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIGZ1bmRzIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIGxldCB2YXVsdCA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KAogICAgICAgICAgICAgICAgZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgRnVuZ2libGVUb2tlbiBWYXVsdCIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgYmFsYW5jZSAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHQud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICAvLyBBcHByb3hpbWF0ZSB0aGUgYnJpZGdlIGZlZSBiYXNlZCBvbiB0aGUgZGlmZmVyZW5jZSBpbiBzdG9yYWdlIHVzYWdlIHdpdGggc29tZSBidWZmZXIKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "calculateBridgeFee": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB0aGUgY2FsY3VsYXRlZCBmZWUgYmFzZWQgb24gdGhlIG51bWJlciBvZiBieXRlcyB1c2VkIHRvIGVzY3JvdyBhbiBhc3NldCBwbHVzIHRoZSBiYXNlIGZlZS4KLy8vCi8vLyBAcGFyYW0gYnl0ZXM6IFRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQuCi8vLwovLy8gQHJldHVybiBUaGUgY2FsY3VsYXRlZCBmZWUgdG8gYmUgcGFpZCBpbiBGbG93VG9rZW4KLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGJ5dGVzIHVzZWQ6IFVJbnQ2NCk6IFVGaXg2NCB7CiAgICByZXR1cm4gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogdXNlZCkKfQo=",
              "calculateBridgeFeeTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gUmV0dXJucyB0aGUgY2FsY3VsYXRlZCBmZWUgYmFzZWQgb24gdGhlIG51bWJlciBvZiBieXRlcyB1c2VkIHRvIGVzY3JvdyBhbiBhc3NldCBwbHVzIHRoZSBiYXNlIGZlZS4KLy8vCi8vLyBAcGFyYW0gYnl0ZXM6IFRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQuCi8vLwovLy8gQHJldHVybiBUaGUgY2FsY3VsYXRlZCBmZWUgdG8gYmUgcGFpZCBpbiBGbG93VG9rZW4KLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGJ5dGVzIHVzZWQ6IFVJbnQ2NCk6IFVGaXg2NCB7CiAgICByZXR1cm4gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogdXNlZCkKfQo=",
              "evmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NIZXg6IFRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3QgYXMgYSBTdHJpbmcgd2l0aG91dCAweCBwcmVmaXgKLy8vCi8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGNvbnRyYWN0IHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oZXZtQWRkcmVzc0hleDogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBldm1BZGRyZXNzSGV4KSB7CiAgICAgICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzKQogICAgfQogICAgcmV0dXJuIG5pbAp9Cg==",
              "evmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NIZXg6IFRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3QgYXMgYSBTdHJpbmcgd2l0aG91dCAweCBwcmVmaXgKLy8vCi8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIGNvbnRyYWN0IHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oZXZtQWRkcmVzc0hleDogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBldm1BZGRyZXNzSGV4KSB7CiAgICAgICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzKQogICAgfQogICAgcmV0dXJuIG5pbAp9Cg==",
              "getAssociatedEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgdGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZ2l2ZW4gQ2FkZW5jZSB0eXBlIChhcyBpdHMgaWRlbnRpZmllciBTdHJpbmcpCi8vLwovLy8gQHBhcmFtIHR5cGVJZGVudGlmaWVyIFRoZSBDYWRlbmNlIHR5cGUgaWRlbnRpZmllciBTdHJpbmcKLy8vCi8vLyBAcmV0dXJuIFRoZSBFVk0gYWRkcmVzcyBhcyBhIGhleCBzdHJpbmcgaWYgdGhlIHR5cGUgaGFzIGFuIGFzc29jaWF0ZWQgRVZNQWRkcmVzcywgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkKZnVuIG1haW4oaWRlbnRpZmllcjogU3RyaW5nKTogU3RyaW5nPyB7CiAgICBpZiBsZXQgdHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgewogICAgICAgIGlmIGxldCBhZGRyZXNzID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5nZXRFVk1BZGRyZXNzQXNzb2NpYXRlZCh3aXRoOiB0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiBFVk1VdGlscy5nZXRFVk1BZGRyZXNzQXNIZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzcykKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gbmlsCn0=",
              "getAssociatedEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuIENhZGVuY2UgdHlwZSAoYXMgaXRzIGlkZW50aWZpZXIgU3RyaW5nKQovLy8KLy8vIEBwYXJhbSB0eXBlSWRlbnRpZmllciBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgU3RyaW5nCi8vLwovLy8gQHJldHVybiBUaGUgRVZNIGFkZHJlc3MgYXMgYSBoZXggc3RyaW5nIGlmIHRoZSB0eXBlIGhhcyBhbiBhc3NvY2lhdGVkIEVWTUFkZHJlc3MsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IFN0cmluZz8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICBpZiBsZXQgYWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VDb25maWcuZ2V0RVZNQWRkcmVzc0Fzc29jaWF0ZWQod2l0aDogdHlwZSkgewogICAgICAgICAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIG5pbAp9",
              "getBridgeCoaAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgdGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZSdzIGNvb3JkaW5hdGluZyBDYWRlbmNlT3duZWRBY2NvdW50Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZS5nZXRCcmlkZ2VDT0FFVk1BZGRyZXNzKCkKICAgIHJldHVybiBFVk1VdGlscy5nZXRFVk1BZGRyZXNzQXNIZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzcykKfQ==",
              "getBridgeCoaAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcmV0dXJuIFRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UncyBjb29yZGluYXRpbmcgQ2FkZW5jZU93bmVkQWNjb3VudAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2UuZ2V0QnJpZGdlQ09BRVZNQWRkcmVzcygpCiAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "onboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBjb250cmFjdEFkZHJlc3NIZXg6IFRoZSBFVk0gYWRkcmVzcyBvZiB0aGUgY29udHJhY3QgKGFzIGhleCBzdHJpbmcgd2l0aG91dCAweCBwcmVmaXgpIGRlZmluaW5nIHRoZSAKLy8vICAgICBicmlkZ2VhYmxlIGFzc2V0IHRvIGJlIG9uYm9hcmRlZAovLy8KdHJhbnNhY3Rpb24oY29udHJhY3RBZGRyZXNzSGV4OiBTdHJpbmcpIHsKCiAgICBsZXQgY29udHJhY3RBZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gQ29uc3RydWN0IEVWTUFkZHJlc3MgZnJvbSBoZXggc3RyaW5nIChubyBsZWFkaW5nIGAiMHgiYCkgLS0tICovCiAgICAgICAgLy8KICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc0hleCkKICAgICAgICAgICAgPz8gcGFuaWMoIkludmFsaWQgRVZNIGFkZHJlc3Mgc3RyaW5nIHByb3ZpZGVkIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBFVk0gY29udHJhY3QKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgIHNlbGYuY29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "onboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgTkZUIHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIE5GVHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIE5GVCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gY29udHJhY3RBZGRyZXNzSGV4OiBUaGUgRVZNIGFkZHJlc3Mgb2YgdGhlIGNvbnRyYWN0IChhcyBoZXggc3RyaW5nIHdpdGhvdXQgMHggcHJlZml4KSBkZWZpbmluZyB0aGUgCi8vLyAgICAgYnJpZGdlYWJsZSBhc3NldCB0byBiZSBvbmJvYXJkZWQKLy8vCnRyYW5zYWN0aW9uKGNvbnRyYWN0QWRkcmVzc0hleDogU3RyaW5nKSB7CgogICAgbGV0IGNvbnRyYWN0QWRkcmVzczogRVZNLkVWTUFkZHJlc3MKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIENvbnN0cnVjdCBFVk1BZGRyZXNzIGZyb20gaGV4IHN0cmluZyAobm8gbGVhZGluZyBgIjB4ImApIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi5jb250cmFjdEFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBjb250cmFjdEFkZHJlc3NIZXgpCiAgICAgICAgICAgID8/IHBhbmljKCJJbnZhbGlkIEVWTSBhZGRyZXNzIHN0cmluZyBwcm92aWRlZCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgRVZNIGNvbnRyYWN0CiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlFVk1BZGRyZXNzKAogICAgICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByType": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGU6IFRoZSBDYWRlbmNlIHR5cGUgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZCB0byB0aGUgYnJpZGdlCi8vLwp0cmFuc2FjdGlvbih0eXBlOiBUeXBlKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICB0eXBlLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "onboardByTypeIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIGlkZW50aWZlcjogVGhlIENhZGVuY2UgdHlwZSBpZGVudGlmaWVyIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlCi8vLwp0cmFuc2FjdGlvbihpZGVudGlmaWVyOiBTdHJpbmcpIHsKCiAgICBsZXQgdHlwZTogVHlwZQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gQ29uc3RydWN0IHRoZSB0eXBlIGZyb20gaWRlbnRpZmllciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIHNlbGYudHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICBzZWxmLnR5cGUsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "onboardByTypeIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmVyOiBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXI6IFN0cmluZykgewoKICAgIGxldCB0eXBlOiBUeXBlCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgdGhlIHR5cGUgZnJvbSBpZGVudGlmaWVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi50eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHNlbGYudHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gdHlwZTogVGhlIENhZGVuY2UgdHlwZSBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGU6IFR5cGUpIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "typeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIHR5cGU6IFRoZSBDYWRlbmNlIFR5cGUgaW4gcXVlc3Rpb24KLy8vCi8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHR5cGUgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbih0eXBlOiBUeXBlKTogQm9vbD8gewogICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKQp9Cg==",
              "typeRequiresOnboardingByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGlkZW50aWZpZXI6IFRoZSBpZGVudGlmaWVyIG9mIHRoZSBDYWRlbmNlIFR5cGUgaW4gcXVlc3Rpb24KLy8vCi8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHR5cGUgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyOiBTdHJpbmcpOiBCb29sPyB7CiAgICBpZiBsZXQgdHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkKICAgIH0KICAgIHJldHVybiBuaWwKfQo=",
              "typeRequiresOnboardingByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGlkZW50aWZpZXI6IFRoZSBpZGVudGlmaWVyIG9mIHRoZSBDYWRlbmNlIFR5cGUgaW4gcXVlc3Rpb24KLy8vCi8vLyBAcmV0dXJuIFdoZXRoZXIgdGhlIHR5cGUgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyOiBTdHJpbmcpOiBCb29sPyB7CiAgICBpZiBsZXQgdHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkKICAgIH0KICAgIHJldHVybiBuaWwKfQo="
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKICAgIC8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KICAgIC8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdCg8VG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICByZXR1cm4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgIH0=",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDYXBhYmlsaXRpZXMsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPikgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKG5mdFR5cGU6IFR5cGU8QDxORlQ+Lk5GVD4oKSkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb24sIHRvOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICB9CiAgICAgICAgaWYgKHNpZ25lci5jYXBhYmlsaXRpZXMuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPig8Q29sbGVjdGlvblB1YmxpY1BhdGg+KSA9PSBuaWwpIHsKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgbGV0IGNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPE5GVD4uQ29sbGVjdGlvbj4oPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pICAgICAgICAgICAgCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjYXAsIGF0OiA8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQoKICAgICAgICB9CiAgICB9Cn0=",
              "enableNFTStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwppbXBvcnQgTWVsb2R5VGlja2V0IGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDYXBhYmlsaXRpZXMsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmTWVsb2R5VGlja2V0LkNvbGxlY3Rpb24+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gTWVsb2R5VGlja2V0LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgaWYgKHNpZ25lci5jYXBhYmlsaXRpZXMuYm9ycm93PCZNZWxvZHlUaWNrZXQuQ29sbGVjdGlvbj4oTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKSA9PSBuaWwpIHsKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZNZWxvZHlUaWNrZXQuQ29sbGVjdGlvbj4oTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgICAgICAgICAgICAKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNhcCwgYXQ6IE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICB9CiAgICB9Cn0=",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oKToge1N0cmluZyA6IHtTdHJpbmcgOiBCb29sfX0gewogIGxldCBjYXRhbG9nID0gTkZUQ2F0YWxvZy5nZXRDYXRhbG9nVHlwZURhdGEoKQogIHJldHVybiBjYXRhbG9nCn0=",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCgoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICAgICkKICAgICAgfSAKICAgIH0KICAgZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJZCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKcHViIGZ1biBtYWluKGNvbGxlY3Rpb25JZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gewogIGxldCByZXM6IHtTdHJpbmc6IE5GVENhdGFsb2cuTkZUQ2F0YWxvZ01ldGFkYXRhfSA9IHt9CiAgZm9yIGNvbGxlY3Rpb25JRCBpbiBjb2xsZWN0aW9uSWRlbnRpZmllcnMgewogICAgICBpZiBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ0VudHJ5KGNvbGxlY3Rpb25JZGVudGlmaWVyOiBjb2xsZWN0aW9uSUQpIHsKICAgICAgICByZXNbY29sbGVjdGlvbklEXSA9IGNhdGFsb2cKICAgICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcpOiBORlRDb2xsZWN0aW9uIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBjb2xsZWN0aW9uID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpIQogIHJldHVybiBORlRDb2xsZWN0aW9uKAogICAgaWQ6IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkhLmlkZW50aWZpZXIsCiAgICBwYXRoOiBzdG9yYWdlUGF0aC50b1N0cmluZygpLAogICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogc3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IHB1YmxpY1BhdGgpLAogICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgKQp9",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIGFjY2VzcyhhbGwpIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcpOiBORlRDb2xsZWN0aW9uIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBjb2xsZWN0aW9uID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpIQogIHJldHVybiBORlRDb2xsZWN0aW9uKAogICAgaWQ6IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkhLmlkZW50aWZpZXIsCiAgICBwYXRoOiBzdG9yYWdlUGF0aC50b1N0cmluZygpLAogICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogc3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IHB1YmxpY1BhdGgpLAogICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgKQp9",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewphY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCmFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCmFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CmFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KYWNjZXNzKGFsbCkgbGV0IGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwoKaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTDisplaysTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCgoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHJvdmlkZXJQYXRoOiBQcml2YXRlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKICBhY2Nlc3MoYWxsKSBsZXQgcHJvdmlkZXJMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHJvdmlkZXJQYXRoOiBQcml2YXRlUGF0aCwKICAgIHB1YmxpY0NvbGxlY3Rpb246IFR5cGUsCiAgICBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlLAogICAgcHJvdmlkZXJMaW5rZWRUeXBlOiBUeXBlCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHJvdmlkZXJQYXRoID0gcHJvdmlkZXJQYXRoCiAgICBzZWxmLnB1YmxpY0NvbGxlY3Rpb24gPSBwdWJsaWNDb2xsZWN0aW9uCiAgICBzZWxmLnB1YmxpY0xpbmtlZFR5cGUgPSBwdWJsaWNMaW5rZWRUeXBlCiAgICBzZWxmLnByb3ZpZGVyTGlua2VkVHlwZSA9IHByb3ZpZGVyTGlua2VkVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkOiBTdHJpbmcsIHRva2VuSUQ6IFVJbnQ2NCk6IHtTdHJpbmc6IEFueVN0cnVjdH0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cykgewogICAgcmV0dXJuIHJlcwogIH0KCiAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkhCiAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICByZXNbInJhcml0eSJdID0gcmFyaXR5CiAgICB9CgogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJkaXNwbGF5Il0gPSBkaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICByZXNbImVkaXRpb25zIl0gPSBlZGl0aW9ucwogICAgfQoKICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICByZXNbInNlcmlhbCJdID0gc2VyaWFsCiAgICB9CgogICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sicm95YWx0aWVzIl0gPSByb3lhbHRpZXMKICAgIH0KCiAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICByZXNbImxpY2Vuc2UiXSA9IGxpY2Vuc2UKICAgIH0KCiAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJtZWRpYXMiXSA9IG1lZGlhcwogICAgfQoKICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJleHRlcm5hbFVSTCJdID0gZXh0ZXJuYWxVUkwKICAgIH0KCiAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJ0cmFpdHMiXSA9IHRyYWl0cwogICAgfQoKICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJjb2xsZWN0aW9uRGlzcGxheSJdID0gY29sbGVjdGlvbkRpc3BsYXkKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgIGxldCBkYXRhID0gQ29sbGVjdGlvbkRhdGEoCiAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgcHJvdmlkZXJQYXRoOiBjb2xsZWN0aW9uRGF0YS5wcm92aWRlclBhdGgsCiAgICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICAgIHByb3ZpZGVyTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJMaW5rZWRUeXBlCiAgICAgICkKICAgICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogICAgfQogIH0KICByZXNbInRva2VuSWQiXSA9IHRva2VuSUQKCiAgcmV0dXJuIHJlcwp9",
              "getNFTMetadataViewsTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgKQogICAgICByZXNbImNvbGxlY3Rpb25EYXRhIl0gPSBkYXRhCiAgICB9CiAgfQogIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICByZXR1cm4gcmVzCn0=",
              "getNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICAgICkKICAgICAgfSAKICAgIH0KICAgZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJZCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTsDisplayPageTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZywgc3RhcnQ6IEludCwgZW5kOiBJbnQpOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEgIAogIGxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHVibGljUGF0aCkhCiAgdmFyIHRva2VuSURzID0gY29sbGVjdGlvbkNhcC5nZXRJRHMoKQogIGxldCBsZW4gPSB0b2tlbklEcy5sZW5ndGgKICB2YXIgZW5kTnVtID0gZW5kCiAgIGlmIGxlbiA8IHN0YXJ0IHsKICAgICAgcmV0dXJuIHJlcwogICAgfSBlbHNlIHsKICAgICAgaWYgbGVuIDwgZW5kIHsKICAgICAgICBlbmROdW0gPSBsZW4KICAgICAgfQogICAgfQogIHRva2VuSURzID0gdG9rZW5JRHMuc2xpY2UoZnJvbTogc3RhcnQsIHVwVG86IGVuZE51bSApCiAgCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZyk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpISAgCiAgbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJsaWNQYXRoKSEKICBsZXQgdG9rZW5JRHMgPSBjb2xsZWN0aW9uQ2FwLmdldElEcygpCiAgCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTsMetadataViewPageTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCBzdGFydDogSW50LCBlbmQ6IEludCk6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IG5mdHM6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSA9IFtdCgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24sIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIG5mdHMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogCiAgbGV0IHRva2VuSURzID0gY29sbGVjdGlvblJlZiEuZ2V0SURzKCkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHx8IHRva2VuSURzLmxlbmd0aCA9PSAwKSB7CiAgICAgIHJldHVybiBuZnRzCiAgICB9CgogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKCiAgICBsZXQgcmVzOntTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQogICAgCiAgICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQodG9rZW5JRCkKCiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IHJhcml0eSA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgICB9CgogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgZWRpdGlvbnMgPSBNZXRhZGF0YVZpZXdzLmdldEVkaXRpb25zKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgICAgfQoKICAgICAgaWYgbGV0IHNlcmlhbCA9IE1ldGFkYXRhVmlld3MuZ2V0U2VyaWFsKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgICB9CgogICAgICBpZiBsZXQgcm95YWx0aWVzID0gTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHRpZXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICAgIH0KCiAgICAgIGlmIGxldCBsaWNlbnNlID0gTWV0YWRhdGFWaWV3cy5nZXRMaWNlbnNlKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICAgIH0KCiAgICAgIGlmIGxldCBtZWRpYXMgPSBNZXRhZGF0YVZpZXdzLmdldE1lZGlhcyhyZXNvbHZlcikgewogICAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgICAgfQoKICAgICAgaWYgbGV0IGV4dGVybmFsVVJMID0gTWV0YWRhdGFWaWV3cy5nZXRFeHRlcm5hbFVSTChyZXNvbHZlcikgewogICAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICAgIH0KCiAgICAgIGlmIGxldCB0cmFpdHMgPSBNZXRhZGF0YVZpZXdzLmdldFRyYWl0cyhyZXNvbHZlcikgewogICAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgICAgfQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb25EaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGF0YSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRhdGEocmVzb2x2ZXIpIHsKICAgICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgICAgcHVibGljUGF0aDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCwKICAgICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICAgICkKICAgICAgICByZXNbImNvbGxlY3Rpb25EYXRhIl0gPSBkYXRhCiAgICAgIH0KICAgIH0KICAgIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICAgIG5mdHMuYXBwZW5kKHJlcykKICB9CiAgbGV0IGxlbiA9IG5mdHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiBbXQogICAgfSBlbHNlIHsKICAgICAgaWYgbGVuIDwgZW5kIHsKICAgICAgICBlbmROdW0gPSBsZW4KICAgICAgfQogICAgfQoKICByZXR1cm4gbmZ0cy5zbGljZShmcm9tOiBzdGFydCwgdXBUbzogZW5kTnVtICkKfQ==",
              "getNFTsMetadataViewTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nKTogW3tTdHJpbmc6IEFueVN0cnVjdH1dIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgbmZ0czogW3tTdHJpbmc6IEFueVN0cnVjdH1dID0gW10KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gbmZ0cwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAKICBsZXQgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmIS5nZXRJRHMoKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgfHwgdG9rZW5JRHMubGVuZ3RoID09IDApIHsKICAgICAgcmV0dXJuIG5mdHMKICAgIH0KCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewoKICAgIGxldCByZXM6e1N0cmluZzogQW55U3RydWN0fSA9IHt9CiAgICAKICAgIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkhCiAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInJhcml0eSJdID0gcmFyaXR5CiAgICAgIH0KCiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJkaXNwbGF5Il0gPSBkaXNwbGF5CiAgICAgIH0KCiAgICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImVkaXRpb25zIl0gPSBlZGl0aW9ucwogICAgICB9CgogICAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInNlcmlhbCJdID0gc2VyaWFsCiAgICAgIH0KCiAgICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICAgIHJlc1sicm95YWx0aWVzIl0gPSByb3lhbHRpZXMKICAgICAgfQoKICAgICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImxpY2Vuc2UiXSA9IGxpY2Vuc2UKICAgICAgfQoKICAgICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJtZWRpYXMiXSA9IG1lZGlhcwogICAgICB9CgogICAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJleHRlcm5hbFVSTCJdID0gZXh0ZXJuYWxVUkwKICAgICAgfQoKICAgICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJ0cmFpdHMiXSA9IHRyYWl0cwogICAgICB9CgogICAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJjb2xsZWN0aW9uRGlzcGxheSJdID0gY29sbGVjdGlvbkRpc3BsYXkKICAgICAgfQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICAgIGxldCBkYXRhID0gQ29sbGVjdGlvbkRhdGEoCiAgICAgICAgICBzdG9yYWdlUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgsCiAgICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgICAgIHB1YmxpY0xpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0xpbmtlZFR5cGUsCiAgICAgICAgKQogICAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgICAgfQogICAgfQogICAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogICAgbmZ0cy5hcHBlbmQocmVzKQogIH0KCgogIAoKICByZXR1cm4gbmZ0cwp9",
              "getUserCollections": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgY29sbGVjdGlvblBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCgogIGZ1biBlYWNoUGF0aChwYXRoOiBTdG9yYWdlUGF0aCwgVHlwZTogVHlwZSk6IEJvb2wgewogICAKICAgIGlmIFR5cGUgIT0gbmlsIHsKICAgICAgaWYgVHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICB9CiAgICAgIAogICAgfQogICAKICAgIHJldHVybiB0cnVlCiAgfQoKICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChlYWNoUGF0aCkKCiAgZm9yIHBhdGggaW4gY29sbGVjdGlvblBhdGhzIHsKICAgIGxldCBwYXRoU3RyID0gcGF0aC50b1N0cmluZygpCiAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgbGV0IGlkZW50aWZpZXIgPSBzcGxpdEFyclsyXQogICAgbGV0IHB1YlBhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQogICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCgogICAgY29sbGVjdGlvbnMuYXBwZW5kKAogICAgICBORlRDb2xsZWN0aW9uKAogICAgICBpZDogaWRlbnRpZmllciwKICAgICAgcGF0aDogcHViUGF0aC50b1N0cmluZygpLAogICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICkKICAgICkKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "getUserCollectionsPage": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKICBpbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIAogIGFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCiAgCiAgICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgICAgc2VsZi5uYW1lID0gbmFtZQogICAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICAgIH0KICB9CiAgCiAgYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogICAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICAgIGFjY2VzcyhhbGwpIGxldCBpZExpc3Q6IFtVSW50NjRdCiAgCiAgICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgICAgc2VsZi5pZCA9IGlkCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogICAgfQogIH0KICAKICBhY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogICAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKICAKICAgICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIAogICAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpIHsKICAgICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCiAgCiAgICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogIAogICAgcmV0dXJuIGl0ZW0KICB9CiAgCiAgYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdGFydDogSW50LCBlbmQ6IEludCk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgICBsZXQgY29sbGVjdGlvblBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICAgIGxldCBjb2xsZWN0aW9uczogW05GVENvbGxlY3Rpb25dID0gW10KICAKICAgIGZ1biBlYWNoUGF0aChwYXRoOiBTdG9yYWdlUGF0aCwgVHlwZTogVHlwZSk6IEJvb2wgewogICAgIAogICAgICBpZiBUeXBlICE9IG5pbCB7CiAgICAgICAgaWYgVHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICBjb2xsZWN0aW9uUGF0aHMuYXBwZW5kKHBhdGgpCiAgICAgICAgfQogICAgICAgIAogICAgICB9CiAgICAgCiAgICAgIHJldHVybiB0cnVlCiAgICB9CiAgCiAgICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChlYWNoUGF0aCkKICAKICAgIGZvciBwYXRoIGluIGNvbGxlY3Rpb25QYXRocyB7CiAgICAgIGxldCBwYXRoU3RyID0gcGF0aC50b1N0cmluZygpCiAgICAgIGxldCBzcGxpdEFyciA9IHBhdGhTdHIuc3BsaXQoc2VwYXJhdG9yOiAiLyIpCiAgICAgIGxldCBpZGVudGlmaWVyID0gc3BsaXRBcnJbMl0KICAgICAgbGV0IHB1YlBhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQogICAgICBsZXQgY29sbGVjdGlvbiA9ICBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJQYXRoKSEKICAKICAgICAgY29sbGVjdGlvbnMuYXBwZW5kKAogICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgaWQ6IGlkZW50aWZpZXIsCiAgICAgICAgcGF0aDogcHViUGF0aC50b1N0cmluZygpLAogICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHBhdGgsIHB1YmxpY1BhdGg6IHB1YlBhdGgpLAogICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICkKICAgICAgKQogICAgICAKICAgIH0KCiAgICBsZXQgbGVuID0gY29sbGVjdGlvbnMubGVuZ3RoCiAgICB2YXIgZW5kTnVuID0gZW5kCiAgICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiBbXQogICAgfSBlbHNlIHsKICAgICAgaWYgbGVuIDwgZW5kIHsKICAgICAgICBlbmROdW4gPSBsZW4KICAgICAgfQogICAgfQogICAgCiAgICByZXR1cm4gY29sbGVjdGlvbnMuc2xpY2UoZnJvbTogc3RhcnQsIHVwVG86IGVuZE51biApCiAgfQ==",
              "getUserCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKWZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbTkZUQ29sbGVjdGlvbl0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IGNvbGxlY3Rpb25QYXRoczogW1N0b3JhZ2VQYXRoXSA9IFtdCiAgbGV0IGNvbGxlY3Rpb25zOiBbTkZUQ29sbGVjdGlvbl0gPSBbXQoKICBmdW4gZWFjaFBhdGgocGF0aDogU3RvcmFnZVBhdGgsIFR5cGU6IFR5cGUpOiBCb29sIHsKICAgCiAgICBpZiBUeXBlICE9IG5pbCB7CiAgICAgIGlmIFR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgIGNvbGxlY3Rpb25QYXRocy5hcHBlbmQocGF0aCkKICAgICAgfQogICAgICAKICAgIH0KICAgCiAgICByZXR1cm4gdHJ1ZQogIH0KCiAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZWFjaFBhdGgpCgogIGZvciBwYXRoIGluIGNvbGxlY3Rpb25QYXRocyB7CiAgICBsZXQgcGF0aFN0ciA9IHBhdGgudG9TdHJpbmcoKQogICAgbGV0IHNwbGl0QXJyID0gcGF0aFN0ci5zcGxpdChzZXBhcmF0b3I6ICIvIikKICAgIGxldCBpZGVudGlmaWVyID0gc3BsaXRBcnJbMl0KICAgIGxldCBwdWJQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKICAgIGxldCBjb2xsZWN0aW9uID0gIGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KHB1YlBhdGgpIQoKICAgIGNvbGxlY3Rpb25zLmFwcGVuZCgKICAgICAgTkZUQ29sbGVjdGlvbigKICAgICAgaWQ6IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBwYXRoKSEuaWRlbnRpZmllciwKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICkKICAgICkKICAgIAogIH0KCgogIHJldHVybiBjb2xsZWN0aW9ucwp9",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXInJ3MgTkZUIGNvbGxlY3Rpb24KICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyCiAgICAuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IC9zdG9yYWdlL01vbWVudENvbGxlY3Rpb24pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXInJ3MgY29sbGVjdGlvbiIpCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRSZWYgPSByZWNpcGllbnQKICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvTW9tZW50Q29sbGVjdGlvbikKICAgIC5ib3Jyb3c8JntUb3BTaG90Lk1vbWVudENvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgIGlmIHJlY2lwaWVudFJlZiA9PSBuaWwgewogICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4KICAgIGRlZmF1bHREb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWRzWzBdKSEKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgfQogICAgbGV0IHR5cGVLZXkgPSBjb2xsZWN0aW9uUmVmLmdldFR5cGUoKS5pZGVudGlmaWVyCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgaWYgZGVmYXVsdERvbWFpbiEuY2hlY2tDb2xsZWN0aW9uKGtleTogdHlwZUtleSkgPT0gZmFsc2UgewogICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIFRvcFNob3QuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBkZWZhdWx0RG9tYWluIS5hZGRDb2xsZWN0aW9uKGNvbGxlY3Rpb246IDwtIGNvbGxlY3Rpb24pCiAgICB9CiAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0TkZUKGtleTogdHlwZUtleSwgdG9rZW46IDwtIG5mdCwgc2VuZGVyUmVmOiBzZW5kZXJSZWYgKQogICAgfSBlbHNlIHsKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXInJ3MgY29sbGVjdGlvbgogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCiAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCcncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCi8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgoKdHJhbnNhY3Rpb24ocmVjaXBpZW50OiBBZGRyZXNzLCB3aXRoZHJhd0lEOiBVSW50NjQpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSByZWNpcGllbnQKICAgICAgICAgICAgLmNhcGFiaWxpdGllcwogICAgICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICB9Cn0=",
              "sendNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwppbXBvcnQgTWVsb2R5VGlja2V0IGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGRlcG9zaXRSZWYgPSByZWNpcGllbnQKICAgICAgICAgICAgLmNhcGFiaWxpdGllcwogICAgICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQ=="
            },
            "contract": {
              "getContractByName": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBjb250cmFjdE5hbWU6IFN0cmluZyk6IFN0cmluZz8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBkZXBsb3llZENvbnRyYWN0ID0gYWNjb3VudC5jb250cmFjdHMuZ2V0KG5hbWU6IGNvbnRyYWN0TmFtZSkKCiAgcmV0dXJuIFN0cmluZy5mcm9tVVRGOChkZXBsb3llZENvbnRyYWN0Py5jb2RlISkKfQ==",
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogJltTdHJpbmddIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICByZXR1cm4gYWNjb3VudC5jb250cmFjdHMubmFtZXMKfQ=="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OlN0cmluZywga2V5OlN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9CnZhciB2YXVsdFJlZjogJjxUb2tlbj4uVmF1bHQKcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQoKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkgCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0/ID0gbmlsCiAgICBsZXQgY29sbGVjdGlvblByaXZhdGUgPSBhY2NvdW50LmJvcnJvdzwme0RvbWFpbnMuQ29sbGVjdGlvblByaXZhdGV9Pihmcm9tOiBEb21haW5zLkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBmaW5kIHlvdXIgZG9tYWluIGNvbGxlY3Rpb24gY2FwIikKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQogICAgaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQoKICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgIGlmIHZhdWx0UmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigKICAgICAgICA8VG9rZW5SZWNlaXZlclBhdGg+LAogICAgICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCgogICAgYWNjb3VudC5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQogICAgc2VsZi52YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICB9IGVsc2UgewogICAgc2VsZi52YXVsdFJlZiA9IHZhdWx0UmVmIQogICAgfQp9CmV4ZWN1dGUgewogICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3VmF1bHQoa2V5OiBrZXksIGFtb3VudDogYW1vdW50KSkKfQp9",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBrZXkgd2lsbCBiZSAnQS5mOGQ2ZTA1ODZiMGEyMGM3LkRvbWFpbnMuQ29sbGVjdGlvbicgb2YgYSBORlQgY29sbGVjdGlvbgp0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZywga2V5OiBTdHJpbmcsIGl0ZW1JZDogVUludDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgY29sbGVjdGlvblJlZjogJjxORlQ+LkNvbGxlY3Rpb24KcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgbGV0IHByZWZpeCA9ICIweCIKICAgIGxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCiAgICBsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9bmlsIHsKICAgIGRvbWFpbiA9IGNvbGxlY3Rpb25Qcml2YXRlLmJvcnJvd0RvbWFpblByaXZhdGUoaWQhKQogICAgfQogICAgc2VsZi5kb21haW4gPSBkb21haW4hCgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBhY2NvdW50LnNhdmUoPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIGFjY291bnQubGluazwmPENvbGxlY3Rpb25QdWJsaWNUeXBlPj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPiwgdGFyZ2V0OiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPik/PyBwYW5pYygiQ2FuIG5vdCBib3Jyb3cgY29sbGVjdGlvbiIpCiAgICB9IGVsc2UgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmID0gY29sbGVjdGlvblJlZiEKICAgIH0KCn0KZXhlY3V0ZSB7CiAgICBzZWxmLmNvbGxlY3Rpb25SZWYuZGVwb3NpdCh0b2tlbjogPC0gc2VsZi5kb21haW4ud2l0aGRyYXdORlQoa2V5OiBrZXksIGl0ZW1JZDogaXRlbUlkKSkKfQp9",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZyk6IEFkZHJlc3M/IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0QWRkcmVzc09mRG9tYWluKG5hbWU6IG5hbWUsIHJvb3Q6IHJvb3QpCn0=",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogU3RyaW5nfSB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldERlZmF1bHREb21haW5zT2ZBZGRyZXNzKGFkZHJlc3MpCn0=",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd25zIGZyb20gMHhGbG93bnMKaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKCnB1YiBmdW4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBTdHJpbmcpOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1lSGFzaCkgPz8gcGFuaWMoIkRvbWFpbiBub3QgZXhpc3QiKQpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCnZhciBkZXRhaWw6IERvbWFpbnMuRG9tYWluRGV0YWlsPyA9IG5pbAoKbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKaWYgaWQgIT0gbmlsICYmICFEb21haW5zLmlzRGVwcmVjYXRlZChuYW1lSGFzaDogbmFtZUhhc2gsIGRvbWFpbklkOiBpZCEpIHsKICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQhKQogICAgZGV0YWlsID0gZG9tYWluLmdldERldGFpbCgpCn0KCnJldHVybiBkZXRhaWwKfQoKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZywgcm9vdDogU3RyaW5nKSA6IERvbWFpbnMuRG9tYWluRGV0YWlsPyB7CmxldCBwcmVmaXggPSAiMHgiCmxldCByb290SGFoc2ggPSBGbG93bnMuaGFzaChub2RlOiAiIiwgbGFibGU6IHJvb3QpCmxldCBuYW1lSGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCnJldHVybiBnZXREZXRhaWwobmFtZUhhc2g6IG5hbWVIYXNoKQp9",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgIGxldCBzZW5kZXJSZWYgPSBzaWduZXIKICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgaWYgcmVjaXBpZW50UmVmID09IG5pbCB7CiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgIGRlZmF1bHREb21haW4gPSBkb21haW4KICAgICAgICB9CiAgICB9CiAgICBsZXQgdHlwZUtleSA9IGNvbGxlY3Rpb25SZWYuZ2V0VHlwZSgpLmlkZW50aWZpZXIKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIGRlZmF1bHREb21haW4hLmFkZENvbGxlY3Rpb24oY29sbGVjdGlvbjogPC0gY29sbGVjdGlvbikKICAgIH0KICAgIGRlZmF1bHREb21haW4hLmRlcG9zaXRORlQoa2V5OiB0eXBlS2V5LCB0b2tlbjogPC0gbmZ0LCBzZW5kZXJSZWY6IHNlbmRlclJlZiApCiAgICB9IGVsc2UgewogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweEZsb3ducwppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgcmVjaXBpZW50OiBBZGRyZXNzKSB7CmxldCBzZW5kZXJSZWY6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcmVkCmxldCBzZW50VmF1bHQ6IEBGdW5naWJsZVRva2VuLlZhdWx0CmxldCBzZW5kZXI6IEFkZHJlc3MKCnByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgc2VsZi5zZW5kZXJSZWYgPSBzaWduZXIuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpIQogICAgc2VsZi5zZW5kZXIgPSB2YXVsdFJlZi5vd25lciEuYWRkcmVzcwogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCn0KCmV4ZWN1dGUgewogICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnRBY2NvdW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5nZXRDYXBhYmlsaXR5KDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KCkKICAgIAogICAgaWYgcmVjZWl2ZXJSZWYgPT0gbmlsIHsKICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKCiAgICAgICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICAgICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICAgICAgcGFuaWMoIlJlY2lwaWVudCBoYXZlIG5vIGRvbWFpbiAiKQogICAgICAgIH0KICAgICAgICAKICAgICAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAgICAgICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluIAogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyBkb21haW4gaW5ib3gKICAgICAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0VmF1bHQoZnJvbTogPC0gc2VsZi5zZW50VmF1bHQsIHNlbmRlclJlZjogc2VsZi5zZW5kZXJSZWYpCgogICAgfSBlbHNlIHsKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmIS5kZXBvc2l0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0KQogICAgfQp9Cn0="
            },
            "evm": {
              "call": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWREYXRhOiBTdHJpbmcsIGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihBZGRyZXNzKDB4Q09BKSkKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKCiAgICBsZXQgY2FsbFJlc3VsdCA9IGNvYS5jYWxsKAogICAgICAgIHRvOiBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKSwKICAgICAgICBkYXRhOiBoZXhFbmNvZGVkRGF0YS5kZWNvZGVIZXgoKSwKICAgICAgICBnYXNMaW1pdDogMTUwMDAwMDAsIC8vIHRvZG8gbWFrZSBpdCBjb25maWd1cmFibGUsIG1heCBmb3Igbm93CiAgICAgICAgdmFsdWU6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGNhbGxSZXN1bHQuZGF0YSkKfQo=",
              "callContract": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHRvRVZNQWRkcmVzc0hleDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBjb2E6IGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgcmVjaXBpZW50RVZNQWRkcmVzczogRVZNLkVWTUFkZHJlc3MKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IC9zdG9yYWdlL2V2bSkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCksIHRvOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgfQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgYnJpZGdlZCBhY2NvdW50IikKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHRvRVZNQWRkcmVzc0hleCkKICAgICAgICAvLyAgICAgPz8gcGFuaWMoIkludmFsaWQgcmVjaXBpZW50IEVWTSBhZGRyZXNzIikKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gdG9FVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgaWYgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLmJ5dGVzID09IHNlbGYuY29hLmFkZHJlc3MoKS5ieXRlcyB7CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgdmFsdWVCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIGxldCBjYWxsUmVzdWx0ID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcywKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQogICAgICAgIGFzc2VydChjYWxsUmVzdWx0LnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJUcmFuc2ZlciB0byByZWNpcGllbnQgZmFpbGVkIikKICAgIH0KfQ==",
              "callTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkRGF0YTogU3RyaW5nLCBoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nLCBhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKCiAgICBsZXQgY2FsbFJlc3VsdCA9IGNvYS5jYWxsKAogICAgICAgIHRvOiBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKSwKICAgICAgICBkYXRhOiBoZXhFbmNvZGVkRGF0YS5kZWNvZGVIZXgoKSwKICAgICAgICBnYXNMaW1pdDogMTUwMDAwMDAsIC8vIHRvZG8gbWFrZSBpdCBjb25maWd1cmFibGUsIG1heCBmb3Igbm93CiAgICB2YWx1ZTogRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICApCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoY2FsbFJlc3VsdC5kYXRhKQp9Cg==",
              "createAccountCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICA=",
              "createCoa": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaEmpty": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbigpIHsKICAgIGxldCBhdXRoOiBhdXRoKElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbigpIHsKICAgIGxldCBhdXRoOiBhdXRoKElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gQ3JlYXRlcyBhIENPQSBhbmQgc2F2ZXMgaXQgaW4gdGhlIHNpZ25lcidzIEZsb3cgYWNjb3VudCAmIHBhc3NpbmcgdGhlIGdpdmVuIHZhbHVlIG9mIEZsb3cgaW50byBGbG93RVZNCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGNvYSA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgY29hLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGNvYS5iYWxhbmNlKCkuaW5GTE9XKCkpCiAgICAgICAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtY29hLCB0bzogc3RvcmFnZVBhdGgpCiAgICAgICAgbGV0IGFkZHJlc3NhYmxlQ2FwID0gc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oc3RvcmFnZVBhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy51bnB1Ymxpc2gocHVibGljUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnB1Ymxpc2goYWRkcmVzc2FibGVDYXAsIGF0OiBwdWJsaWNQYXRoKQogICAgfQp9",
              "deployContract": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgoKdHJhbnNhY3Rpb24oY29kZTogU3RyaW5nKSB7CiAgICBsZXQgY29hOiBhdXRoKEVWTS5EZXBsb3kpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uRGVwbG95KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bSkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgIHNlbGYuY29hLmRlcGxveShjb2RlOiBjb2RlLmRlY29kZUhleCgpLCAgZ2FzTGltaXQ6IDE1MDAwMDAwLCB2YWx1ZTogRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApKQogICAgfQp9Cg==",
              "estimateGas": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRUeDogU3RyaW5nLCBhZGRyZXNzOiBBZGRyZXNzKTogW1VJbnQ2NDsgMl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBjb2EuYWRkcmVzcygpKQoKICAgIHJldHVybiBbdHhSZXN1bHQuZXJyb3JDb2RlLCB0eFJlc3VsdC5nYXNVc2VkXQp9Cg==",
              "estimateGasTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRUeDogU3RyaW5nLCBhZGRyZXNzOiBBZGRyZXNzKTogW1VJbnQ2NDsgMl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBjb2EuYWRkcmVzcygpKQoKICAgIHJldHVybiBbdHhSZXN1bHQuZXJyb3JDb2RlLCB0eFJlc3VsdC5nYXNVc2VkXQp9Cg==",
              "fundCoa": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKICAgIGxldCBjb2E6ICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCgogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgICAgICBzZWxmLmNvYSA9IGNvYQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuY29hLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "fundCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAogICAgbGV0IGNvYTogJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKCiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgICAgIHNlbGYuY29hID0gY29hCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "fundEvmAddr": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihldm1BZGRyOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcmVkCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnRBY2NvdW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnRBY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oPFRva2VuUmVjZWl2ZXJQYXRoPikhCiAgICAgICAgICAgIAogICAgICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9",
              "fundEvmAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgLy8gbGV0IGFkZHJlc3NCeXRlczogW1VJbnQ4OyAyMF0KICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgCiAgICAgICAgbGV0IGFkZHJlc3NCeXRlcyA9ICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMiwgMjM5LCAxNTUsIDcsIDUwLCAyMzgsIDE3MCwgMTAxLCAyMjBdCiAgICAgICAgLy8gc2VsZi5hZGRyZXNzQnl0ZXMgPSAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDIsIDIzOSwgMTU1LCA3LCA1MCwgMjM4LCAxNzAsIDEwMSwgMjIwXQoKICAgICAgICBzZWxmLmFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIEludGVybmFsRVZNLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCwgdG86IHNlbGYuYWRkcmVzcy5ieXRlcykKCiAgICB9Cn0=",
              "getAddr": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihmbG93QWRkcmVzczogQWRkcmVzcyk6IFN0cmluZz8gewogICAgaWYgbGV0IGFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzID0gZ2V0QXV0aEFjY291bnQ8YXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQ+KGZsb3dBZGRyZXNzKQogICAgICAgIC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSk/LmFkZHJlc3MoKSB7CiAgICAgICAgbGV0IGJ5dGVzOiBbVUludDhdID0gW10KICAgICAgICBmb3IgYnl0ZSBpbiBhZGRyZXNzLmJ5dGVzIHsKICAgICAgICAgICAgYnl0ZXMuYXBwZW5kKGJ5dGUpCiAgICAgICAgfQogICAgICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGJ5dGVzKQogICAgfQogICAgcmV0dXJuIG5pbAp9",
              "getBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBVSW50IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3MuYmFsYW5jZSgpLmluQXR0b0ZMT1coKQp9Cg==",
              "getBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLmJhbGFuY2UoKS5pbkF0dG9GTE9XKCkKfQo=",
              "getCoaAddr": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAKICAgIGxldCBjb2FBZGRyID0gY29hLmFkZHJlc3MoKSAKCiAgICBsZXQgYWRkckJ5dGU6IFtVSW50OF0gPSBbXQoKICAgIGZvciBieXRlIGluIGNvYUFkZHIuYnl0ZXMgewogICAgICAgIGFkZHJCeXRlLmFwcGVuZChieXRlKQogICAgfQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJCeXRlKQp9Cg==",
              "getCoaAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICBsZXQgY29hQWRkciA9IGNvYS5hZGRyZXNzKCkgCgogICAgbGV0IGFkZHJCeXRlOiBbVUludDhdID0gW10KCiAgICBmb3IgYnl0ZSBpbiBjb2FBZGRyLmJ5dGVzIHsKICAgICAgICBhZGRyQnl0ZS5hcHBlbmQoYnl0ZSkKICAgIH0KCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyQnl0ZSkKfQo=",
              "getCoaBalance": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICByZXR1cm4gY29hLmJhbGFuY2UoKS5pbkZMT1coKQp9Cg==",
              "getCoaBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgcmV0dXJuIGNvYS5iYWxhbmNlKCkuaW5GTE9XKCkKfQo=",
              "getCode": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyZXNzLmNvZGUoKSkKfQo=",
              "getCodeTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkcmVzcy5jb2RlKCkpCn0K",
              "getNonce": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBVSW50NjQgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gYWRkcmVzcy5ub25jZSgpCn0K",
              "getNonceTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludDY0IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3Mubm9uY2UoKQp9Cg==",
              "newAccountAndCoa": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKHB1YmxpY0tleTogU3RyaW5nLCBzaWduYXR1cmVBbGdvcml0aG06IFVJbnQ4LCBoYXNoQWxnb3JpdGhtOiBVSW50OCwgd2VpZ2h0OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXksIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwgd2VpZ2h0OiB3ZWlnaHQpCgkJCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQogICAgICAgIGFjY291bnQuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coYWNjb3VudC5iYWxhbmNlKCkpCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0K",
              "newAccountAndCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewoKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKCiAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleSwgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29yaXRobSkhLCB3ZWlnaHQ6IHdlaWdodCkKCQkKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjAwMDUpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gYWNjb3VudAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50IDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsb2coYWNjb3VudC5hZGRyZXNzKCkpCiAgICAgICAgYWNjb3VudC5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhhY2NvdW50LmJhbGFuY2UoKSkKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQo=",
              "newAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKCnRyYW5zYWN0aW9uKHB1YmxpY0tleTogU3RyaW5nLCBzaWduYXR1cmVBbGdvcml0aG06IFVJbnQ4LCBoYXNoQWxnb3JpdGhtOiBVSW50OCwgd2VpZ2h0OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXksIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwgd2VpZ2h0OiB3ZWlnaHQpCgkJCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQogICAgICAgIGFjY291bnQuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coYWNjb3VudC5iYWxhbmNlKCkpCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0K",
              "run": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGhleEVuY29kZWRUeDogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBzZWxmLmNvYS5hZGRyZXNzKCkpCiAgICAgICAgLy8gdG9kbyBvbmx5IHRlbXBvcmFyeSB1bnRpbCB3ZSBjb3JyZWN0bHkgaGFuZGxlIGZhaWx1cmUgZXZlbnRzCiAgICAgICAgYXNzZXJ0KAogICAgICAgICAgICB0eFJlc3VsdC5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLAogICAgICAgICAgICBtZXNzYWdlOiAiZmFpbGVkIHRvIGV4ZWN1dGUgZXZtIHRyYW5zYWN0aW9uOiAiLmNvbmNhdCh0eFJlc3VsdC5lcnJvckNvZGUudG9TdHJpbmcoKSkKICAgICAgICApCiAgICB9Cn0K",
              "runTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihoZXhUcnhEYXRhOiBTdHJpbmcpIHsKICAgIGxldCBjb2E6ICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IEVWTS5ydW4oCiAgICAgICAgICAgIHR4OiBoZXhUcnhEYXRhLmRlY29kZUhleCgpLAogICAgICAgICAgICBjb2luYmFzZTogc2VsZi5jb2EuYWRkcmVzcygpCiAgICAgICAgKSAKCiAgICB9Cn0K",
              "transferCoa": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogVUludChhbW91bnQpICogMTAwMDAwMDAwMDAwMDAwMDAwKSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "transferCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCByZXZpZXZlcjogQWRkcmVzcykgewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBsZXQgcmV2aWV2ZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudD4ocmV2aWV2ZXIpCiAgICAgICAgLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIAogICAgICAgIHJldmlldmVyLmRlcG9zaXQoZnJvbTogPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiBVSW50KGFtb3VudCkgKiAxMDAwMDAwMDAwMDAwMDAwMDApKSBhcyEgQEZsb3dUb2tlbi5WYXVsdCkKCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAKICAgIH0KfQo=",
              "transferFlowFromCoaToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "transferFlowFromCoaToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "transferFlowToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "transferFlowToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCi8vLyBUcmFuc2ZlcnMgJEZMT1cgZnJvbSB0aGUgc2lnbmVyJ3MgYWNjb3VudCBDYWRlbmNlIEZsb3cgYmFsYW5jZSB0byB0aGUgcmVjaXBpZW50J3MgaGV4LWVuY29kZWQgRVZNIGFkZHJlc3MuCi8vLyBOb3RlIHRoYXQgYSBDT0EgbXVzdCBoYXZlIGEgJEZMT1cgYmFsYW5jZSBpbiBFVk0gYmVmb3JlIHRyYW5zZmVycmluZyB2YWx1ZSB0byBhbm90aGVyIEVWTSBhZGRyZXNzLgovLy8KdHJhbnNhY3Rpb24ocmVjaXBpZW50RVZNQWRkcmVzc0hleDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBjb2E6IGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgcmVjaXBpZW50RVZNQWRkcmVzczogRVZNLkVWTUFkZHJlc3MKICAgIHZhciBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IC9zdG9yYWdlL2V2bSkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCksIHRvOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgfQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgYnJpZGdlZCBhY2NvdW50IikKCiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAoKICAgICAgICAvLyBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MgPSBGbG93RVZNQnJpZGdlVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogcmVjaXBpZW50RVZNQWRkcmVzc0hleCkKICAgICAgICAvLyAgICAgPz8gcGFuaWMoIkludmFsaWQgcmVjaXBpZW50IEVWTSBhZGRyZXNzIikKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gcmVjaXBpZW50RVZNQWRkcmVzc0hleC5kZWNvZGVIZXgoKQoKICAgICAgICBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuY29hLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgICAgICAKICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgdmFsdWVCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIGxldCBjYWxsUmVzdWx0ID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcywKICAgICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKICAgICAgICBhc3NlcnQoY2FsbFJlc3VsdC5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiVHJhbnNmZXIgdG8gcmVjaXBpZW50IGZhaWxlZCIpCiAgICB9Cn0=",
              "withdrawCoa": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAgICAgbGV0IHdpdGhkcmF3QmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHdpdGhkcmF3QmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSBjb2Eud2l0aGRyYXcoYmFsYW5jZTogd2l0aGRyYXdCYWxhbmNlKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "withdrawCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo="
            },
            "ft": {
              "addToken": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&<Token>.Vault>(from: <TokenStoragePath> ) == nil {\n            signer.storage.save(<- <Token>.createEmptyVault(vaultType: Type<@<Token>.Vault>()), to: <TokenStoragePath>)\n        }\n\n        if signer.capabilities.exists(<TokenReceiverPath>) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(receiverCapability, at: <TokenReceiverPath>)\n        \n        }\n       \n        if signer.capabilities.exists(<TokenBalancePath>) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(balanceCapability, at: <TokenBalancePath>)\n        }\n    \n    }\n}",
              "enableTokenStorage": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&<Token>.Vault>(from: <TokenStoragePath> ) == nil {\n            signer.storage.save(<- <Token>.createEmptyVault(vaultType: Type<@<Token>.Vault>()), to: <TokenStoragePath>)\n        }\n\n        if signer.capabilities.exists(<TokenReceiverPath>) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(receiverCapability, at: <TokenReceiverPath>)\n        \n        }\n       \n        if signer.capabilities.exists(<TokenBalancePath>) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(balanceCapability, at: <TokenBalancePath>)\n        }\n    \n    }\n}",
              "enableTokenStorageTest": "import FungibleToken from 0xee82856bf20e2aa6\nimport FlowToken from 0x0ae53cb6e3f42a79\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault ) == nil {\n            signer.storage.save(<- FlowToken.createEmptyVault(), to: /storage/flowTokenVault)\n        }\n\n        if signer.capabilities.exists(/public/flowTokenReceiver) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&FlowToken.Vault>(/storage/flowTokenVault)\n            signer.capabilities.publish(receiverCapability, at: /public/flowTokenReceiver)\n        \n        }\n       \n        if signer.capabilities.exists(/public/flowTokenBalance) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&FlowToken.Vault>(/storage/flowTokenVault)\n            signer.capabilities.publish(balanceCapability, at: /public/flowTokenBalance)\n        }\n    \n    }\n}",
              "transferEvmTokens": "import EVM from 0xEVM\n\n/// Transfers $FLOW from the signer's account Cadence Flow balance to the recipient's hex-encoded EVM address.\n/// Note that a COA must have a $FLOW balance in EVM before transferring value to another EVM address.\n///\ntransaction(toEVMAddressHex: String, amount: UInt256, gasLimit: UInt64) {\n\n    let coa: auth(EVM.Withdraw, EVM.Call) &EVM.CadenceOwnedAccount\n    let recipientEVMAddress: EVM.EVMAddress\n\n    prepare(signer: auth(BorrowValue, SaveValue) &Account) {\n        if signer.storage.type(at: /storage/evm) == nil {\n            signer.storage.save(<-EVM.createCadenceOwnedAccount(), to: /storage/evm)\n        }\n        self.coa = signer.storage.borrow<auth(EVM.Withdraw, EVM.Call) &EVM.CadenceOwnedAccount>(from: /storage/evm)\n            ?? panic(\"Could not borrow reference to the signer's bridged account\")\n\n        var addressBytes: [UInt8] = toEVMAddressHex.decodeHex()\n\n        self.recipientEVMAddress = EVM.EVMAddress(bytes: [\n            addressBytes[0], addressBytes[1], addressBytes[2], addressBytes[3],\n            addressBytes[4], addressBytes[5], addressBytes[6], addressBytes[7],\n            addressBytes[8], addressBytes[9], addressBytes[10], addressBytes[11],\n            addressBytes[12], addressBytes[13], addressBytes[14], addressBytes[15],\n            addressBytes[16], addressBytes[17], addressBytes[18], addressBytes[19]\n        ])\n    }\n\n    execute {\n        // if self.recipientEVMAddress.bytes == self.coa.address().bytes {\n        //     return\n        // }\n        let data = \"\"\n        let callResult = self.coa.call(\n            to: self.recipientEVMAddress,\n            data: data,\n            gasLimit: gasLimit,\n            value: valueBalance\n        )\n        assert(callResult.status == EVM.Status.successful, message: \"Transfer to recipient failed\")\n    }\n}",
              "transferFlowTest": "import FungibleToken from 0xa0225e7000ac82a9\nimport ExampleToken from 0x9f749ae0417287cb\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &ExampleToken.Vault>(from: /storage/exampleTokenVault)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(/public/exampleTokenReceiver)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "transferTokens": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &<Token>.Vault>(from: <TokenStoragePath>)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(<TokenReceiverPath>)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "transferTokensTest": "import FungibleToken from 0xa0225e7000ac82a9\nimport ExampleToken from 0x9f749ae0417287cb\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &ExampleToken.Vault>(from: /storage/exampleTokenVault)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(/public/exampleTokenReceiver)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "isTokenListEnabled": "CiAgICAvLyBGbG93IFdhbGxldCAtIHYxLjc3CiAgICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYNCmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikKCiAgICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlICAgICAgCgogICAgICAgcmV0dXJuIGZsYWcKICAgIH0KICAgIA0KCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2tFeGFtcGxlVG9rZW5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICBsZXQgcmVjZWl2ZXI6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgIC5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvZXhhbXBsZVRva2VuUmVjZWl2ZXIpCgogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvZXhhbXBsZVRva2VuQmFsYW5jZSkKCiAgICAgIGxldCBmbGFnID0gcmVjZWl2ZXIgJiYgYmFsYW5jZSAgICAgIAoKICAgICAgIHJldHVybiBmbGFnCiAgICB9CiAgICAKCiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IHtTdHJpbmc6IEJvb2x9IHsKICAgICAgcmV0dXJuIHsKICAgICJBLjQ0NDVlN2FkMTE1NjgyNzYuRmxvd1Rva2VuIiA6CiAgICBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS45Zjc0OWFlMDQxNzI4N2NiLkV4YW1wbGVUb2tlbiIgOgogICAgY2hlY2tFeGFtcGxlVG9rZW5WYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA==",
              "getTokenListBalance": "CiAgICAvLyBGbG93IFdhbGxldCAtIHYxLjc3CiAgICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYNCmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkgPz8gbmlsCiAgICAgIAogICAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIAogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gMC4wCiAgICAgIAogICAgfQogICAgDQoKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0V4YW1wbGVUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZXhhbXBsZVRva2VuQmFsYW5jZSkgPz8gbmlsCiAgICAgIAogICAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIAogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gMC4wCiAgICAgIAogICAgfQogICAgCgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiB7U3RyaW5nOiBVRml4NjR9IHsKICAgICAgcmV0dXJuIHsKICAgICAgIkEuNDQ0NWU3YWQxMTU2ODI3Ni5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgLAogICAgICAiQS45Zjc0OWFlMDQxNzI4N2NiLkV4YW1wbGVUb2tlbiIgOgogICAgY2hlY2tFeGFtcGxlVG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg"
            },
            "hybridCustody": {
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyZXNzOiBBZGRyZXNzLCBuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG0gPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICBsZXQgZCA9IE1ldGFkYXRhVmlld3MuRGlzcGxheSgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiB0aHVtYm5haWwpCiAgICAgICAgKQoKICAgICAgICBtLnNldENoaWxkQWNjb3VudERpc3BsYXkoYWRkcmVzczogY2hpbGRBZGRyZXNzLCBkKQogICAgfQp9",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgVG9rZW5JbmZvIHsKcHViIGxldCBpZDogU3RyaW5nCnB1YiBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKTogW1Rva2VuSW5mb10gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRva2VuSW5mbyhpZDogdHlwZS5pZGVudGlmaWVyLCBiYWxhbmNlOiB2YXVsdC5iYWxhbmNlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgIAogICAgcmV0dXJuIGNvaW5JbmZvTGlzdAp9Cg==",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogW1VJbnQ2NF19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gbmZ0cwp9",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCnB1YiBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY29sbGVjdGlvbkxpc3Q6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICBpZiBmb3VuZFR5cGVzID09IG5pbCB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQoKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiBmb3VuZFR5cGVzIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gZm91bmRUeXBlcyEKCiAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0eXBlLmlkZW50aWZpZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogY2hpbGRBY2NvdW50LCBwYXRoOiBwYXRoKSwKICAgICAgICAgICAgICAgICAgICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gY29sbGVjdGlvbkxpc3QKfQ==",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHNjcmlwdCB5b3UgY2FuIGV4ZWN1dGUgb24gRmxvdyBOZXR3b3JrCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKToge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwogICAgdmFyIGFjY2Vzc2libGVORlRzOiB7QWRkcmVzczoge1N0cmluZzogW1VJbnQ2NF19fSAgPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgYWNjZXNzaWJsZU5GVHNbYWRkcmVzc10gPSBuZnRzCiAgICB9CiAgICByZXR1cm4gYWNjZXNzaWJsZU5GVHMKfQ==",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBZGRyZXNzOiBBZGRyZXNzKToge1N0cmluZzogVUZpeDY0fSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1R5cGVdfSA9IHt9CgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IHZhdWx0VHlwZTogVHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICAgICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZXM6IHtTdHJpbmc6IFVGaXg2NH0gPSB7fQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byB2YXVsdEJhbGFuY2VzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9PSBuaWwgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgICAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IHZhdWx0ID0gYWNjdC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXVsdEJhbGFuY2VzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiB2YXVsdEJhbGFuY2VzCn0=",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKICAgIHB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0K",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCmxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQp2YXIgZGF0YToge0FkZHJlc3M6IEFueVN0cnVjdH0gPSB7fQpmb3IgYWRkcmVzcyBpbiBtLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgbGV0IGMgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIG5vdCBmb3VuZCIpCiAgICBsZXQgZCA9IGMucmVzb2x2ZVZpZXcoVHlwZTxNZXRhZGF0YVZpZXdzLkRpc3BsYXk+KCkpCiAgICBkYXRhLmluc2VydChrZXk6IGFkZHJlc3MsIGQpCn0KcmV0dXJuIGRhdGEKfQ==",
              "getChildAccountNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwovLyBpbXBvcnQgTGlua2VkQWNjb3VudHMgZnJvbSAweENoaWxkQWNjb3VudAoKLy8vIEN1c3RvbSBzdHJ1Y3QgdG8gbWFrZSBpbnRlcnByZXRhdGlvbiBvZiBORlQgJiBDb2xsZWN0aW9uIGRhdGEgZWFzeSBjbGllbnQgc2lkZQpwdWIgc3RydWN0IE5GVERhdGEgewogICAgcHViIGxldCBuYW1lOiBTdHJpbmcKICAgIHB1YiBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogICAgcHViIGxldCB0aHVtYm5haWw6IFN0cmluZwogICAgcHViIGxldCByZXNvdXJjZUlEOiBVSW50NjQKICAgIHB1YiBsZXQgb3duZXJBZGRyZXNzOiBBZGRyZXNzPwogICAgcHViIGxldCBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblVSTDogU3RyaW5nPwogICAgcHViIGxldCBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcKICAgIHB1YiBsZXQgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CgogICAgaW5pdCgKICAgICAgICBuYW1lOiBTdHJpbmcsCiAgICAgICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgICAgICB0aHVtYm5haWw6IFN0cmluZywKICAgICAgICByZXNvdXJjZUlEOiBVSW50NjQsCiAgICAgICAgb3duZXJBZGRyZXNzOiBBZGRyZXNzPywKICAgICAgICBjb2xsZWN0aW9uTmFtZTogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblVSTDogU3RyaW5nPywKICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBTdHJpbmcsCiAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBTdHJpbmc/CiAgICApIHsKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICAgICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgICAgICBzZWxmLnJlc291cmNlSUQgPSByZXNvdXJjZUlECiAgICAgICAgc2VsZi5vd25lckFkZHJlc3MgPSBvd25lckFkZHJlc3MKICAgICAgICBzZWxmLmNvbGxlY3Rpb25OYW1lID0gY29sbGVjdGlvbk5hbWUKICAgICAgICBzZWxmLmNvbGxlY3Rpb25EZXNjcmlwdGlvbiA9IGNvbGxlY3Rpb25EZXNjcmlwdGlvbgogICAgICAgIHNlbGYuY29sbGVjdGlvblVSTCA9IGNvbGxlY3Rpb25VUkwKICAgICAgICBzZWxmLmNvbGxlY3Rpb25TdG9yYWdlUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIgPSBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXIKICAgIH0KfQoKLy8vIEhlbHBlciBmdW5jdGlvbiB0aGF0IHJldHJpZXZlcyBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudAovLy8KcHViIGZ1biBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKF8gYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBHZXQgdGhlIGFjY291bnQKICAgIGxldCBhY2NvdW50OiBBdXRoQWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAvLyBJbml0IGZvciByZXR1cm4gdmFsdWUKICAgIGxldCBkYXRhOiBbTkZURGF0YV0gPSBbXQogICAgLy8gQXNzaWduIHRoZSB0eXBlcyB3ZSdsbCBuZWVkCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIGxldCBkaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXlUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PigpCiAgICBsZXQgY29sbGVjdGlvbkRhdGFUeXBlOiBUeXBlID0gVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCgogICAgLy8gSXRlcmF0ZSBvdmVyIGVhY2ggcHVibGljIHBhdGgKICAgIGFjY291bnQuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgaWYgaXQncyBhIENvbGxlY3Rpb24gd2UncmUgaW50ZXJlc3RlZCBpbiwgaWYgc28sIGdldCBhIHJlZmVyZW5jZQogICAgICAgIGlmIHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KGZyb206IHBhdGgpIHsKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciB0aGUgQ29sbGVjdGlvbidzIE5GVHMsIGNvbnRpbnVpbmcgaWYgdGhlIE5GVCByZXNvbHZlcyB0aGUgdmlld3Mgd2Ugd2FudAogICAgICAgICAgICAgICAgZm9yIGlkIGluIGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkgewogICAgICAgICAgICAgICAgICAgIGxldCByZXNvbHZlclJlZjogJntNZXRhZGF0YVZpZXdzLlJlc29sdmVyfSA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiBpZCkKICAgICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGRpc3BsYXlUeXBlKSBhcyEgTWV0YWRhdGFWaWV3cy5EaXNwbGF5PyB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHJlc29sdmVyUmVmLnJlc29sdmVWaWV3KGNvbGxlY3Rpb25EYXRhVHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEJ1aWxkIG91ciBORlREYXRhIHN0cnVjdCBmcm9tIHRoZSBtZXRhZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmZ0RGF0YSA9IE5GVERhdGEoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwudXJpKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZUlEOiByZXNvbHZlclJlZi51dWlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3duZXJBZGRyZXNzOiByZXNvbHZlclJlZi5vd25lcj8uYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25OYW1lOiBjb2xsZWN0aW9uRGlzcGxheT8ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25EZXNjcmlwdGlvbjogY29sbGVjdGlvbkRpc3BsYXk/LmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblVSTDogY29sbGVjdGlvbkRpc3BsYXk/LmV4dGVybmFsVVJMPy51cmwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uUHVibGljUGF0aElkZW50aWZpZXI6IGNvbGxlY3Rpb25EYXRhPy5wdWJsaWNQYXRoPy50b1N0cmluZygpCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGl0IHRvIG91ciBkYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKG5mdERhdGEpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgcmV0dXJuIGRhdGEKfQoKLy8vIFNjcmlwdCB0aGF0IHJldHJpZXZlIGRhdGEgYWJvdXQgYWxsIHB1YmxpY2x5IGFjY2Vzc2libGUgTkZUcyBpbiBhbiBhY2NvdW50IGFuZCBhbnkgb2YgaXRzCi8vLyBjaGlsZCBhY2NvdW50cwovLy8KLy8vIE5vdGUgdGhhdCB0aGlzIHNjcmlwdCBkb2VzIG5vdCBjb25zaWRlciBhY2NvdW50cyB3aXRoIGV4Y2VwdGlvbmFsbHkgbGFyZ2UgY29sbGVjdGlvbnMgCi8vLyB3aGljaCB3b3VsZCByZXN1bHQgaW4gbWVtb3J5IGVycm9ycy4gVG8gY29tcG9zZSBhIHNjcmlwdCB0aGF0IGRvZXMgY292ZXIgYWNjb3VudHMgd2l0aAovLy8gYSBsYXJnZSBudW1iZXIgb2Ygc3ViLWFjY291bnRzIGFuZC9vciBORlRzIHdpdGhpbiB0aG9zZSBhY2NvdW50cywgc2VlIGV4YW1wbGUgNSBpbgovLy8gdGhlIE5GVCBDYXRhbG9nJ3MgUkVBRE1FOiBodHRwczovL2dpdGh1Yi5jb20vZGFwcGVybGFicy9uZnQtY2F0YWxvZyBhbmQgYWRhcHQgZm9yIHVzZQovLy8gd2l0aCBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCi8vLwovLyBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtBZGRyZXNzOiBbTkZURGF0YV19IHsKLy8gICAgIGxldCBhbGxORlREYXRhOiB7QWRkcmVzczogW05GVERhdGFdfSA9IHt9CiAgICAKLy8gICAgIC8vIEFkZCBhbGwgcmV0cmlldmVkIHZpZXdzIHRvIHRoZSBydW5uaW5nIG1hcHBpbmcgaW5kZXhlZCBvbiBhZGRyZXNzCi8vICAgICBhbGxORlREYXRhLmluc2VydChrZXk6IGFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykpCiAgICAKLy8gICAgIC8qIEl0ZXJhdGUgb3ZlciBhbnkgY2hpbGQgYWNjb3VudHMgKi8gCi8vICAgICAvLwovLyAgICAgLy8gR2V0IHJlZmVyZW5jZSB0byBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uIGlmIGl0IGV4aXN0cwovLyAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBnZXRBY2NvdW50KGFkZHJlc3MpLmdldENhcGFiaWxpdHk8JkxpbmtlZEFjY291bnRzLkNvbGxlY3Rpb257TGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY30+KAovLyAgICAgICAgICAgICBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uUHVibGljUGF0aAovLyAgICAgICAgICkuYm9ycm93KCkgewovLyAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIGxpbmtlZCBhY2NvdW50IGluIExpbmtlZEFjY291bnRzLkNvbGxlY3Rpb24KLy8gICAgICAgICBmb3IgY2hpbGRBZGRyZXNzIGluIGNvbGxlY3Rpb25SZWYuZ2V0TGlua2VkQWNjb3VudEFkZHJlc3NlcygpIHsKLy8gICAgICAgICAgICAgaWYgIWFsbE5GVERhdGEuY29udGFpbnNLZXkoY2hpbGRBZGRyZXNzKSB7Ci8vICAgICAgICAgICAgICAgICAvLyBJbnNlcnQgdGhlIE5GVCBtZXRhZGF0YSBmb3IgdGhvc2UgTkZUcyBpbiBlYWNoIGNoaWxkIGFjY291bnQKLy8gICAgICAgICAgICAgICAgIC8vIGluZGV4aW5nIG9uIHRoZSBhY2NvdW50J3MgYWRkcmVzcwovLyAgICAgICAgICAgICAgICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBjaGlsZEFkZHJlc3MsIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoY2hpbGRBZGRyZXNzKSkKLy8gICAgICAgICAgICAgfQovLyAgICAgICAgIH0KLy8gICAgIH0KLy8gICAgIHJldHVybiBhbGxORlREYXRhIAovLyB9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlREYXRhXSB7CiAgICAvLyBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgcmV0dXJuIGdldEFsbFZpZXdzRnJvbUFkZHJlc3MoYWRkcmVzcykgCn0KCg==",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKdHJhbnNhY3Rpb24oY2hpbGQ6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUgKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICBtYW5hZ2VyLnJlbW92ZUNoaWxkKGFkZHI6IGNoaWxkKQogICAgfQp9"
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gRGV0ZXJtaW5lcyBpZiBhbiBhY2NvdW50IGlzIHNldCB1cCB3aXRoIGEgU3Rha2luZyBDb2xsZWN0aW9uCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICByZXR1cm4gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "checkSetupTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCi8vLyBEZXRlcm1pbmVzIGlmIGFuIGFjY291bnQgaXMgc2V0IHVwIHdpdGggYSBTdGFraW5nIENvbGxlY3Rpb24KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIHJldHVybiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWRkcmVzcykKfQ==",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6ICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5yZWdpc3RlckRlbGVnYXRvcihub2RlSUQ6IGlkLCBhbW91bnQ6IGFtb3VudCkgICAgICAKICAgIH0KfQ==",
              "createDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCi8vLyBSZWdpc3RlcnMgYSBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbiByZXNvdXJjZQovLy8gZm9yIHRoZSBzcGVjaWZpZWQgbm9kZUlEIGFuZCB0aGUgYW1vdW50IG9mIHRva2VucyB0byBjb21taXQKCnRyYW5zYWN0aW9uKGlkOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVnaXN0ZXJEZWxlZ2F0b3Iobm9kZUlEOiBpZCwgYW1vdW50OiBhbW91bnQpICAgICAgCiAgICB9Cn0=",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "createStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOmF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlTmV3VG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getAprTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICBsZXQgYXByID0gRmxvd0lEVGFibGVTdGFraW5nLmdldEVwb2NoVG9rZW5QYXlvdXQoKSAvIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRUb3RhbFN0YWtlZCgpIC8gNy4wICogMzY1LjAgKiAoMS4wIC0gRmxvd0lEVGFibGVTdGFraW5nLmdldFJld2FyZEN1dFBlcmNlbnRhZ2UoKSkKICAgIHJldHVybiBhcHIKfQ==",
              "getDelegatesInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIHB1YiBsZXQgZGVsZWdhdG9ySUQ6IFVJbnQzMgogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCgogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgcHViIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgaW5pdChkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbykgewogICAgICAgIHNlbGYuZGVsZWdhdG9ySUQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICAgICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JJbmZvLm5vZGVJRCkKICAgICAgICBzZWxmLmRlbGVnYXRlZE5vZGVJbmZvID0gbm9kZUluZm8KICAgICAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYucmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zID0gc2VsZi50b2tlbnNVbnN0YWtlZCArIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZGVsZWdhdG9ySURzOiBbRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkRlbGVnYXRvcklEc10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0RGVsZWdhdG9ySURzKGFkZHJlc3M6IGFjY291bnQpCgogICAgbGV0IGZvcm1hdHRlZERlbGVnYXRvckluZm86IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319ID0ge30KCiAgICBmb3IgZGVsZWdhdG9ySUQgaW4gZGVsZWdhdG9ySURzIHsKICAgICAgICBpZiBsZXQgX2Zvcm1hdHRlZERlbGVnYXRvckluZm8gPSBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRF0gPSBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gPSB7IGRlbGVnYXRvcklELmRlbGVnYXRvcklEOiBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyl9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvCn0=",
              "getDelegatesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAKLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIHN0cnVjdCBEZWxlZ2F0ZUluZm8gewogICAgYWNjZXNzKGFsbCkgbGV0IGRlbGVnYXRvcklEOiBVSW50MzIKICAgIGFjY2VzcyhhbGwpIGxldCBub2RlSUQ6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCgogICAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCByb2xlOiBVSW50OAogICAgYWNjZXNzKGFsbCkgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IGRlbGVnYXRlZE5vZGVJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8KICAgIGFjY2VzcyhhbGwpIGxldCByZXN0YWthYmxlVW5zdGFrZWRUb2tlbnM6IFVGaXg2NAoKICAgIGluaXQoZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8pIHsKICAgICAgICBzZWxmLmRlbGVnYXRvcklEID0gZGVsZWdhdG9ySW5mby5pZAogICAgICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgICAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCiAgICAgICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9ySW5mby5ub2RlSUQpCiAgICAgICAgc2VsZi5kZWxlZ2F0ZWROb2RlSW5mbyA9IG5vZGVJbmZvCiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYudW5zdGFrYWJsZVRva2VucyA9IHNlbGYudG9rZW5zU3Rha2VkICsgc2VsZi50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZGVsZWdhdG9ySURzOiBbRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkRlbGVnYXRvcklEc10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0RGVsZWdhdG9ySURzKGFkZHJlc3M6IGFjY291bnQpCgogICAgbGV0IGZvcm1hdHRlZERlbGVnYXRvckluZm86IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319ID0ge30KCiAgICBmb3IgZGVsZWdhdG9ySUQgaW4gZGVsZWdhdG9ySURzIHsKICAgICAgICBpZiBsZXQgX2Zvcm1hdHRlZERlbGVnYXRvckluZm8gPSBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRF0gPSBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELmRlbGVnYXRvcklEKQogICAgICAgICAgICBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvck5vZGVJRF0gPSB7IGRlbGVnYXRvcklELmRlbGVnYXRvcklEOiBEZWxlZ2F0ZUluZm8oZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyl9CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvCn0=",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getDelegatorInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihlcG9jaENvdW50ZXI6IFVJbnQ2NCk6IEZsb3dFcG9jaC5FcG9jaE1ldGFkYXRhPyB7CiAgcmV0dXJuIEZsb3dFcG9jaC5nZXRFcG9jaE1ldGFkYXRhKGVwb2NoQ291bnRlcikKfQ==",
              "getEpochMetadataTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGVwb2NoQ291bnRlcjogVUludDY0KTogRmxvd0Vwb2NoLkVwb2NoTWV0YWRhdGE/IHsKICByZXR1cm4gRmxvd0Vwb2NoLmdldEVwb2NoTWV0YWRhdGEoZXBvY2hDb3VudGVyKQp9",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcpOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpCn0=",
              "getNodeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvIHsKCiAgICBwdWIgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlQ291bnQ6IFVJbnQ2NAoKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBzdGFrZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGluaXQoYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dLCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10pIHsKCiAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBVSW50NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBVSW50NjQoMCkKCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBzZWxmLm5vZGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICAgICAgZm9yIGRlbGVnYXRlSW5mbyBpbiBhbGxEZWxlZ2F0ZUluZm8gewogICAgICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBzZWxmLmRlbGVnYXRlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbz8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsRGVsZWdhdG9ySW5mbyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIHJldHVybiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8oYWxsTm9kZUluZm86IGFsbE5vZGVJbmZvLCBhbGxEZWxlZ2F0ZUluZm86IGFsbERlbGVnYXRlSW5mbykKfQ==",
              "getNodesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvIHsKCiAgICBhY2Nlc3MoYWxsKSB2YXIgbm9kZUNvdW50OiBVSW50NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZUNvdW50OiBVSW50NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBpbml0KGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSwgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dKSB7CgogICAgICAgIHNlbGYubm9kZUNvdW50ID0gVUludDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gVUludDY0KDApCgogICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgICAgIHNlbGYubm9kZUNvdW50ID0gc2VsZi5ub2RlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgICAgIGZvciBkZWxlZ2F0ZUluZm8gaW4gYWxsRGVsZWdhdGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gc2VsZi5kZWxlZ2F0ZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbz8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsRGVsZWdhdG9ySW5mbyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIHJldHVybiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8oYWxsTm9kZUluZm86IGFsbE5vZGVJbmZvLCBhbGxEZWxlZ2F0ZUluZm86IGFsbERlbGVnYXRlSW5mbykKfQ==",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKcHViIHN0cnVjdCBTdGFrZUluZm8gewogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIHB1YiBsZXQgbmV0d29ya2luZ0tleTogU3RyaW5nCiAgICBwdWIgbGV0IHN0YWtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAoKICAgIHB1YiBsZXQgZGVsZWdhdG9yczogW1VJbnQzMl0KICAgIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICAgIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zRGVsZWdhdGVkOiBVRml4NjQKICAgIHB1YiBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgbWFjaGluZUFjY291bnRCYWxhbmNlOiBVRml4NjQ/CgogICAgaW5pdChub2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm8/KSB7CiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgICAgIHNlbGYubmV0d29ya2luZ0tleSA9IG5vZGVJbmZvLm5ldHdvcmtpbmdLZXkKICAgICAgICBzZWxmLnN0YWtpbmdLZXkgPSBub2RlSW5mby5zdGFraW5nS2V5CiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAoKICAgICAgICBzZWxmLmRlbGVnYXRvcnMgPSBub2RlSW5mby5kZWxlZ2F0b3JzCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdGFrZUluZm99PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGZvcm1hdHRlZE5vZGVJbmZvOiB7U3RyaW5nOiBTdGFrZUluZm99ID0ge30KICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBtYWNoaW5lQWNjb3VudHM6IHtTdHJpbmc6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm99ID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldE1hY2hpbmVBY2NvdW50cyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgZm9ybWF0dGVkTm9kZUluZm9bbm9kZUluZm8uaWRdID0gU3Rha2VJbmZvKG5vZGVJbmZvOiBub2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBtYWNoaW5lQWNjb3VudHNbbm9kZUluZm8uaWRdKQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWROb2RlSW5mbwp9",
              "getStakeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKcHViIHN0cnVjdCBTdGFrZUluZm8gewogICAgcHViIGxldCBpZDogU3RyaW5nCiAgICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIHB1YiBsZXQgbmV0d29ya2luZ0tleTogU3RyaW5nCiAgICBwdWIgbGV0IHN0YWtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAoKICAgIHB1YiBsZXQgZGVsZWdhdG9yczogW1VJbnQzMl0KICAgIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICAgIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zRGVsZWdhdGVkOiBVRml4NjQKICAgIHB1YiBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgbWFjaGluZUFjY291bnRCYWxhbmNlOiBVRml4NjQ/CgogICAgaW5pdChub2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm8/KSB7CiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgICAgIHNlbGYubmV0d29ya2luZ0tleSA9IG5vZGVJbmZvLm5ldHdvcmtpbmdLZXkKICAgICAgICBzZWxmLnN0YWtpbmdLZXkgPSBub2RlSW5mby5zdGFraW5nS2V5CiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAoKICAgICAgICBzZWxmLmRlbGVnYXRvcnMgPSBub2RlSW5mby5kZWxlZ2F0b3JzCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdGFrZUluZm99PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGZvcm1hdHRlZE5vZGVJbmZvOiB7U3RyaW5nOiBTdGFrZUluZm99ID0ge30KICAgIGxldCBhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0QWxsTm9kZUluZm8oYWRkcmVzczogYWNjb3VudCkKICAgIGxldCBtYWNoaW5lQWNjb3VudHM6IHtTdHJpbmc6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5NYWNoaW5lQWNjb3VudEluZm99ID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldE1hY2hpbmVBY2NvdW50cyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgZm9ybWF0dGVkTm9kZUluZm9bbm9kZUluZm8uaWRdID0gU3Rha2VJbmZvKG5vZGVJbmZvOiBub2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBtYWNoaW5lQWNjb3VudHNbbm9kZUluZm8uaWRdKQogICAgfQoKICAgIHJldHVybiBmb3JtYXR0ZWROb2RlSW5mbwp9",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "getStakingInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgcmV3YXJkZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlUmV3YXJkZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "restakeRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgcmV3YXJkZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlUmV3YXJkZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyB1bnN0YWtlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBzZXRzIHVwIGFuIGFjY291bnQgdG8gdXNlIGEgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBJdCB3aWxsIHdvcmsgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgaGF2ZSBhIHJlZ3VsYXIgYWNjb3VudCwgYSB0d28tYWNjb3VudCBsb2NrZWQgdG9rZW5zIHNldHVwLAovLy8gb3Igc3Rha2luZyBvYmplY3RzIHN0b3JlZCBpbiB0aGUgdW5sb2NrZWQgYWNjb3VudAoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmxpbms8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oL3ByaXZhdGUvZmxvd1Rva2VuSG9sZGVyLCB0YXJnZXQ6IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgbGV0IGZsb3dUb2tlbiA9IHNpZ25lci5saW5rPCZGbG93VG9rZW4uVmF1bHQ+KC9wcml2YXRlL2Zsb3dUb2tlblZhdWx0LCB0YXJnZXQ6IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KSEKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBTdGFraW5nIENvbGxlY3Rpb24gYW5kIHB1dCBpdCBpbiBzdG9yYWdlCiAgICAgICAgICAgIGlmIGxvY2tlZEhvbGRlci5jaGVjaygpIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IG5pbCksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGxpbmsgdG8gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgICAgICBzaWduZXIubGluazwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9ue0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KAogICAgICAgICAgICAgICAgRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCwKICAgICAgICAgICAgICAgIHRhcmdldDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IG5vZGUgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIubG9hZDxARmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkRGVsZWdhdG9yT2JqZWN0KDwtZGVsZWdhdG9yKQogICAgICAgIH0KICAgIH0KfQ==",
              "setupTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQovLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIHNldHMgdXAgYW4gYWNjb3VudCB0byB1c2UgYSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIEl0IHdpbGwgd29yayByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGEgcmVndWxhciBhY2NvdW50LCBhIHR3by1hY2NvdW50IGxvY2tlZCB0b2tlbnMgc2V0dXAsCi8vLyBvciBzdGFraW5nIG9iamVjdHMgc3RvcmVkIGluIHRoZSB1bmxvY2tlZCBhY2NvdW50Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMsIFNhdmVWYWx1ZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpID09IG5pbCB7CgogICAgICAgICAgICAvLyBDcmVhdGUgcHJpdmF0ZSBjYXBhYmlsaXRpZXMgZm9yIHRoZSB0b2tlbiBob2xkZXIgYW5kIHVubG9ja2VkIHZhdWx0CiAgICAgICAgICAgIGxldCBsb2NrZWRIb2xkZXIgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3LCBMb2NrZWRUb2tlbnMuVG9rZW5PcGVyYXRpb25zKSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pigvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1GbG93U3Rha2luZ0NvbGxlY3Rpb24uY3JlYXRlU3Rha2luZ0NvbGxlY3Rpb24odW5sb2NrZWRWYXVsdDogZmxvd1Rva2VuLCB0b2tlbkhvbGRlcjogbmlsKSwgdG86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDcmVhdGUgYSBwdWJsaWMgbGluayB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgICAgIC8vIHNpZ25lci5saW5rPCZ7Rmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljfT4oCiAgICAgICAgICAgIC8vICAgICBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoLAogICAgICAgICAgICAvLyAgICAgdGFyZ2V0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgICAgICAvLyApCiAgICAgICAgICAgIGxldCBzdGFraW5nQ29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goc3Rha2luZ0NvbGxlY3Rpb25DYXAsIGF0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgc3Rha2luZyBjb2xsZWN0aW9uIHJlZmVyZW5jZSIpCgogICAgICAgIC8vIElmIHRoZXJlIGlzIGEgbm9kZSBzdGFrZXIgb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9yIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3RzIHVuc3Rha2luZyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5yZXF1ZXN0VW5zdGFraW5nKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RlVOR0lCTEVUT0tFTkFERFJFU1MKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4RkxPV1RPS0VOQUREUkVTUwppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMT0NLRURUT0tFTkFERFJFU1MKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IGhvbGRlclJlZjogJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyByZXdhcmRlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Jld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgdW5zdGFrZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdCBpZiBpdCBpcyB0aGVyZQoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdVbnN0YWtlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ=="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPiApID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KHZhdWx0VHlwZTogVHlwZTxAPFRva2VuPi5WYXVsdD4oKSksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goYmFsYW5jZUNhcGFiaWxpdHksIGF0OiA8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAgICAgfQogICAgCiAgICB9Cn0=",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0YXJnZXRQYXRoOiBTdHJpbmc/KSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoLnRvU3RyaW5nKCksIHRhcmdldFBhdGg6IHRhcmdldFBhdGgpCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICB9CgogIHJldHVybiBpdGVtcwp9",
              "getBasicPublicItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKXN0cnVjdCBJdGVtIHsKICBhY2Nlc3MoYWxsKWxldCBhZGRyZXNzOiBBZGRyZXNzCiAgYWNjZXNzKGFsbClsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbClsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgoKICBmdW4gZWFjaFBhdGgocGF0aDogUHVibGljUGF0aCwgY2FwVHlwZTogVHlwZSk6IEJvb2wgewogICAgLy8gdG9kbwogICAgbGV0IGNhcCA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmdldDwmQW55U3RydWN0PihwYXRoKQogICAgdmFyIHRhcmdldFBhdGggPSAiIgoKICAgIGlmIGNhcCAhPSBuaWwgewogICAgICB0YXJnZXRQYXRoID0gIjEyIiAKICAgIH0KICAgIGxldCBpdGVtID0gSXRlbShhZGRyZXNzOiBhZGRyZXNzLCBwYXRoOiBwYXRoLnRvU3RyaW5nKCksIHRhcmdldFBhdGg6IHRhcmdldFBhdGgpCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfQogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoUHVibGljKGVhY2hQYXRoKQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBhY2Nlc3MoYWxsKXN0cnVjdCBJdGVtIHsKICBhY2Nlc3MoYWxsKWxldCBhZGRyZXNzOiBBZGRyZXNzCiAgYWNjZXNzKGFsbClsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbClsZXQgdHlwZTogVHlwZQogIGFjY2VzcyhhbGwpbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsIAogICAgcGF0aDogU3RyaW5nLCAKICAgIHR5cGU6IFR5cGUsIAogICAgdGFyZ2V0UGF0aDogU3RyaW5nPwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50eXBlID0gdHlwZQogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQcml2YXRlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQcml2YXRlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHJpdmF0ZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLyBBIHdvcmthcm91bmQgbWV0aG9kCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiBmYWxzZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicItemTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKICAKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQoKICBwdWIgbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsIAogICAgcGF0aDogU3RyaW5nLCAKICAgIHR5cGU6IFR5cGUsIAogICAgdGFyZ2V0UGF0aDogU3RyaW5nPwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50eXBlID0gdHlwZQogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhNYXA6IHtTdHJpbmc6IEJvb2x9KTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KICBhY2NvdW50LmZvckVhY2hQdWJsaWMoZnVuIChwYXRoOiBQdWJsaWNQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAoKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aAogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIGZhbHNlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBwdWIgbGV0IGlzQ29sbGVjdGlvbkNhcDogQm9vbAogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCgogIHB1YiBsZXQgaXNCYWxhbmNlQ2FwOiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8sIAogICAgaXNDb2xsZWN0aW9uQ2FwOiBCb29sLCAKICAgIHRva2VuSURzOiBbVUludDY0XSwKICAgIGlzQmFsYW5jZUNhcDogQm9vbCwKICAgIGJhbGFuY2U6IFVGaXg2ND8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICAgIHNlbGYuaXNDb2xsZWN0aW9uQ2FwID0gaXNDb2xsZWN0aW9uQ2FwCiAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgIHNlbGYuaXNCYWxhbmNlQ2FwID0gaXNCYWxhbmNlQ2FwCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGxldCBiYWxhbmNlQ2FwVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwmQW55UmVzb3VyY2V7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+PigpCgogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCiAgICB2YXIgaXNDb2xsZWN0aW9uQ2FwID0gZmFsc2UKICAgIHZhciBpc0JhbGFuY2VDYXAgPSBmYWxzZQogICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAoKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGJhbGFuY2VDYXBUeXBlKSkgewogICAgICBpc0JhbGFuY2VDYXAgPSB0cnVlCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQoKICAgICAgaWYgbGV0IHZhdWx0ID0gdmF1bHRSZWYgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0LmJhbGFuY2UKICAgICAgfQogICAgfSBlbHNlIGlmICh0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpKSB7CiAgICAgIGlzQ29sbGVjdGlvbkNhcCA9IHRydWUKICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHkocGF0aCkKICAgICAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uUmVmIHsKICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgfQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoLAogICAgICBpc0NvbGxlY3Rpb25DYXA6IGlzQ29sbGVjdGlvbkNhcCwKICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICBpc0JhbGFuY2VDYXA6IGlzQmFsYW5jZUNhcCwKICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQdWJsaWNQYXRoXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBjbGVhbmRQYXRoczogW1B1YmxpY1BhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnB1YmxpY1BhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdG9yYWdlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQuc3RvcmFnZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKcHViIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgcHViIGxldCBuYW1lOiBTdHJpbmcKICBwdWIgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgpwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCBpc1Jlc291cmNlOiBCb29sCiAgcHViIGxldCBpc05GVENvbGxlY3Rpb246IEJvb2wKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgdG9rZW5JRHM6IFtVSW50NjRdCiAgcHViIGxldCBpc1ZhdWx0OiBCb29sCiAgcHViIGxldCBiYWxhbmNlOiBVRml4NjQ/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0eXBlOiBUeXBlLCBpc1Jlc291cmNlOiBCb29sLCAKICAgIGlzTkZUQ29sbGVjdGlvbjogQm9vbCwgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LAogICAgdG9rZW5JRHM6IFtVSW50NjRdLCBpc1ZhdWx0OiBCb29sLCBiYWxhbmNlOiBVRml4NjQ/KSB7CiAgICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgICAgc2VsZi5wYXRoID0gcGF0aAogICAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICAgIHNlbGYuaXNSZXNvdXJjZSA9IGlzUmVzb3VyY2UKICAgICAgc2VsZi5pc05GVENvbGxlY3Rpb24gPSBpc05GVENvbGxlY3Rpb24KICAgICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgICBzZWxmLnRva2VuSURzID0gdG9rZW5JRHMKICAgICAgc2VsZi5pc1ZhdWx0ID0gaXNWYXVsdAogICAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkZW50aWZpZXJzOiBbU3RyaW5nXSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCB2YXVsdFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxATm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBpZGVudGlmaWVyIGluIHBhdGhJZGVudGlmaWVycyB7CiAgICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKSAKICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgaXNORlRDb2xsZWN0aW9uIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGlzVmF1bHQgPSB0eXBlLmlzU3VidHlwZShvZjogdmF1bHRUeXBlKSAKICAgICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKICAgICAgaWYgaXNWYXVsdCB7CiAgICAgICAgaWYgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHBhdGgpIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdFJlZi5iYWxhbmNlCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICBpc1Jlc291cmNlOiBpc1Jlc291cmNlLAogICAgICAgIGlzTkZUQ29sbGVjdGlvbjogaXNORlRDb2xsZWN0aW9uLAogICAgICAgIGRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5LAogICAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgICBpc1ZhdWx0OiBpc1ZhdWx0LAogICAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICAgKQoKICAgICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICB9CiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getStoredItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVJlc291cmNlPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aFN0cikhCiAgcmV0dXJuIGFjY291bnQuYm9ycm93PCZBbnlSZXNvdXJjZT4oZnJvbTogcGF0aCkKfQ==",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVN0cnVjdD8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55U3RydWN0Pihmcm9tOiBwYXRoKQp9"
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkIGZyb20gMHhGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgU3dpdGNoYm9hcmRJbmZvIHsKICBwdWIgbGV0IHZhdWx0VHlwZXM6IFtUeXBlXQoKICBpbml0KHZhdWx0VHlwZXM6IFtUeXBlXSkgewogICAgc2VsZi52YXVsdFR5cGVzID0gdmF1bHRUeXBlcwogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTd2l0Y2hib2FyZEluZm8/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgaWYgbGV0IGJvYXJkID0gYWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5Td2l0Y2hib2FyZD4oZnJvbTogRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkLlN0b3JhZ2VQYXRoKSB7CiAgICBsZXQgdHlwZXMgPSBib2FyZC5nZXRWYXVsdFR5cGVzKCkKICAgIHJldHVybiBTd2l0Y2hib2FyZEluZm8odmF1bHRUeXBlczogdHlwZXMpCiAgfQogIHJldHVybiBuaWwKfQ=="
            },
            "temp": {
              "mintNFT": "Ly8gRmxvdyBXYWxsZXQgLSBwcmV2aWV3bmV0IFNjcmlwdCAtIHYxLjc3CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAvLy8gVGhpcyBzY3JpcHQgdXNlcyB0aGUgTkZUTWludGVyIHJlc291cmNlIHRvIG1pbnQgYSBuZXcgTkZUCi8vLyBJdCBtdXN0IGJlIHJ1biB3aXRoIHRoZSBhY2NvdW50IHRoYXQgaGFzIHRoZSBtaW50ZXIgcmVzb3VyY2UKLy8vIHN0b3JlZCBpbiAvc3RvcmFnZS9ORlRNaW50ZXIKCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oCiAgICByZWNpcGllbnQ6IEFkZHJlc3MsCiAgICBuYW1lOiBTdHJpbmcsCiAgICBkZXNjcmlwdGlvbjogU3RyaW5nLAogICAgdGh1bWJuYWlsOiBTdHJpbmcsCiAgICBjdXRzOiBbVUZpeDY0XSwKICAgIHJveWFsdHlEZXNjcmlwdGlvbnM6IFtTdHJpbmddLAogICAgcm95YWx0eUJlbmVmaWNpYXJpZXM6IFtBZGRyZXNzXQopIHsKCiAgICAvLy8gbG9jYWwgdmFyaWFibGUgZm9yIHN0b3JpbmcgdGhlIG1pbnRlciByZWZlcmVuY2UKICAgIGxldCBtaW50ZXI6ICZFeGFtcGxlTkZULk5GVE1pbnRlcgoKICAgIC8vLyBSZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbgogICAgbGV0IHJlY2lwaWVudENvbGxlY3Rpb25SZWY6ICZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gRXhhbXBsZU5GVC5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgICAgID8/IHBhbmljKCJWaWV3UmVzb2x2ZXIgZG9lcyBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICAKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVE1pbnRlciByZXNvdXJjZSBpbiBzdG9yYWdlCiAgICAgICAgc2VsZi5taW50ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkV4YW1wbGVORlQuTkZUTWludGVyPihmcm9tOiBFeGFtcGxlTkZULk1pbnRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQWNjb3VudCBkb2VzIG5vdCBzdG9yZSBhbiBvYmplY3QgYXQgdGhlIHNwZWNpZmllZCBwYXRoIikKCiAgICAgICAgLy8gQm9ycm93IHRoZSByZWNpcGllbnQncyBwdWJsaWMgTkZUIGNvbGxlY3Rpb24gcmVmZXJlbmNlCiAgICAgICAgc2VsZi5yZWNpcGllbnRDb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChyZWNpcGllbnQpLmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSBORlQgQ29sbGVjdGlvbiIpCiAgICB9CgogICAgcHJlIHsKICAgICAgICBjdXRzLmxlbmd0aCA9PSByb3lhbHR5RGVzY3JpcHRpb25zLmxlbmd0aCAmJiBjdXRzLmxlbmd0aCA9PSByb3lhbHR5QmVuZWZpY2lhcmllcy5sZW5ndGg6ICJBcnJheSBsZW5ndGggc2hvdWxkIGJlIGVxdWFsIGZvciByb3lhbHR5IHJlbGF0ZWQgZGV0YWlscyIKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgLy8gQ3JlYXRlIHRoZSByb3lhbHR5IGRldGFpbHMKICAgICAgICB2YXIgY291bnQgPSAwCiAgICAgICAgdmFyIHJveWFsdGllczogW01ldGFkYXRhVmlld3MuUm95YWx0eV0gPSBbXQogICAgICAgIGxvZyhyb3lhbHR5QmVuZWZpY2lhcmllcy5sZW5ndGgpCiAgICAgICAgd2hpbGUgcm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoID4gY291bnQgewogICAgICAgICAgICBsZXQgYmVuZWZpY2lhcnkgPSByb3lhbHR5QmVuZWZpY2lhcmllc1tjb3VudF0KICAgICAgICAgICAgbGV0IGJlbmVmaWNpYXJ5Q2FwYWJpbGl0eSA9IGdldEFjY291bnQoYmVuZWZpY2lhcnkpLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgICAgICAgICAgICAgTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHR5UmVjZWl2ZXJQdWJsaWNQYXRoKCkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgaWYgIWJlbmVmaWNpYXJ5Q2FwYWJpbGl0eS5jaGVjaygpIHsKICAgICAgICAgICAgICAgIHBhbmljKCJCZW5lZmljaWFyeSBkb2VzIG5vdCBoYXZlIFJlY2VpdmVyIGNvbmZpZ3VyZWQgYXQgUm95YWx0eVJlY2VpdmVyUHVibGljUGF0aCIpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJveWFsdGllcy5hcHBlbmQoCiAgICAgICAgICAgICAgICBNZXRhZGF0YVZpZXdzLlJveWFsdHkoCiAgICAgICAgICAgICAgICAgICAgcmVjZWl2ZXI6IGJlbmVmaWNpYXJ5Q2FwYWJpbGl0eSwKICAgICAgICAgICAgICAgICAgICBjdXQ6IGN1dHNbY291bnRdLAogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiByb3lhbHR5RGVzY3JpcHRpb25zW2NvdW50XQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICApCiAgICAgICAgICAgIGNvdW50ID0gY291bnQgKyAxCiAgICAgICAgfQoKCiAgICAgICAgLy8gTWludCB0aGUgTkZUIGFuZCBkZXBvc2l0IGl0IHRvIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IG1pbnRlZE5GVCA8LSBzZWxmLm1pbnRlci5taW50TkZUKAogICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sCiAgICAgICAgICAgIHRodW1ibmFpbDogdGh1bWJuYWlsLAogICAgICAgICAgICByb3lhbHRpZXM6IHJveWFsdGllcwogICAgICAgICkKICAgICAgICBzZWxmLnJlY2lwaWVudENvbGxlY3Rpb25SZWYuZGVwb3NpdCh0b2tlbjogPC1taW50ZWRORlQpCiAgICB9Cgp9"
            },
            "nft": {}
          },
          "testnet-migration": {
            "version": "1.0",
            "basic": {
              "accountStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIHN0cnVjdCBTdG9yYWdlSW5mbyB7CiAgICBhY2Nlc3MoYWxsKSAgbGV0IGNhcGFjaXR5OiBVSW50NjQKICAgIGFjY2VzcyhhbGwpICBsZXQgdXNlZDogVUludDY0CiAgICBhY2Nlc3MoYWxsKSAgbGV0IGF2YWlsYWJsZTogVUludDY0CgogICAgaW5pdChjYXBhY2l0eTogVUludDY0LCB1c2VkOiBVSW50NjQsIGF2YWlsYWJsZTogVUludDY0KSB7CiAgICAgICAgc2VsZi5jYXBhY2l0eSA9IGNhcGFjaXR5CiAgICAgICAgc2VsZi51c2VkID0gdXNlZAogICAgICAgIHNlbGYuYXZhaWxhYmxlID0gYXZhaWxhYmxlCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOiBTdG9yYWdlSW5mbyB7CiAgICBsZXQgYWNjdCA9IGdldEFjY291bnQoYWRkcikKICAgIHJldHVybiBTdG9yYWdlSW5mbyhjYXBhY2l0eTogYWNjdC5zdG9yYWdlLmNhcGFjaXR5LAogICAgICAgICAgICB1c2VkOiBhY2N0LnN0b3JhZ2UudXNlZCwKICAgICAgICAgICAgYXZhaWxhYmxlOiBhY2N0LnN0b3JhZ2UuY2FwYWNpdHkgLSBhY2N0LnN0b3JhZ2UudXNlZCkKfQ==",
              "addContractToAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCBjb2RlOiBTdHJpbmcpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvbnRyYWN0cywgQWRkQ29udHJhY3QpICZBY2NvdW50KSB7CiAgICAgICAgc2lnbmVyLmNvbnRyYWN0cy5hZGQobmFtZTogbmFtZSwgY29kZTogY29kZS51dGY4KQogICAgfQp9",
              "addContractToAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCBjb2RlOiBTdHJpbmcpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvbnRyYWN0cywgQWRkQ29udHJhY3QpICZBY2NvdW50KSB7CiAgICAgICAgc2lnbmVyLmNvbnRyYWN0cy5hZGQobmFtZTogbmFtZSwgY29kZTogY29kZS51dGY4KQogICAgfQp9",
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQogICAgICAgIGFjY291bnQua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQogICAgfQp9",
              "addKeyTemp": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKCXByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlIHwgU3RvcmFnZSkgJkFjY291bnQpIHsKCgkJbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgoJCS8vIGFkZCBhbGwgdGhlIGtleXMgdG8gdGhlIGFjY291bnQKCQlmb3Iga2V5IGluIHB1YmxpY0tleXMgewoJCQlhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LnB1YmxpY0tleSwgaGFzaEFsZ29yaXRobToga2V5Lmhhc2hBbGdvcml0aG0sIHdlaWdodDoga2V5LndlaWdodCkKCQl9CgkJCgkJLy8gYWRkIGNvbnRyYWN0cyBpZiBwcm92aWRlZAoJCWZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CgkJCWFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCgkJfQoJfQp9",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCgogdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30sIGZ1bmRBbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHRva2VuUmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KICAgIGxldCBzZW50VmF1bHQ6IEBGdW5naWJsZVRva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgICAgICBzZWxmLnRva2VuUmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikgPz8gcGFuaWMoIlVuYWJsZSB0byBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIikKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcicncyBWYXVsdCEiKQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogZnVuZEFtb3VudCkKICAgIH0KICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudG9rZW5SZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9CiB9",
              "createAccountEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KCiAgICAgICAgZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKICAgICAgICB9CgogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQoKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQog",
              "createAccountSdk": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCwgY29udHJhY3RzOiB7U3RyaW5nOiBTdHJpbmd9KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSB8IFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQoKICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgIH0KfQ==",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXlzOiBbQ3J5cHRvLktleUxpc3RFbnRyeV0sIGNvbnRyYWN0czoge1N0cmluZzogU3RyaW5nfSkgewogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewoKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgZm9yIGtleSBpbiBwdWJsaWNLZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleS5wdWJsaWNLZXksIGhhc2hBbGdvcml0aG06IGtleS5oYXNoQWxnb3JpdGhtLCB3ZWlnaHQ6IGtleS53ZWlnaHQpCiAgICAgICAgfQoKICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIGxldCBmZWVWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMDAwMSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC0gZmVlVmF1bHQpCgogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQoKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQog",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbCkgc3RydWN0IFJlc3VsdCB7CiAgYWNjZXNzKGFsbCkgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBhY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0CiAgYWNjZXNzKGFsbCkgbGV0IGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NAogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlVXNlZDogVUludDY0CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgYmFsYW5jZTogVUZpeDY0LAogICAgYXZhaWxhYmxlQmFsYW5jZTogVUZpeDY0LAogICAgc3RvcmFnZVVzZWQ6IFVJbnQ2NCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgICBzZWxmLmF2YWlsYWJsZUJhbGFuY2UgPSBhdmFpbGFibGVCYWxhbmNlCiAgICBzZWxmLnN0b3JhZ2VVc2VkID0gc3RvcmFnZVVzZWQKICAgIHNlbGYuc3RvcmFnZUNhcGFjaXR5ID0gc3RvcmFnZUNhcGFjaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICByZXR1cm4gUmVzdWx0KAogICAgYWRkcmVzczogYWNjb3VudC5hZGRyZXNzLAogICAgYmFsYW5jZTogYWNjb3VudC5iYWxhbmNlLAogICAgYXZhaWxhYmxlQmFsYW5jZTogYWNjb3VudC5hdmFpbGFibGVCYWxhbmNlLAogICAgc3RvcmFnZVVzZWQ6IGFjY291bnQuc3RvcmFnZS51c2VkLAogICAgc3RvcmFnZUNhcGFjaXR5OiBhY2NvdW50LnN0b3JhZ2UuY2FwYWNpdHkKICApCn0=",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHVzZENhcDogVUludDY0ID0gYWNjb3VudC5zdG9yYWdlLnVzZWQKCiAgcmV0dXJuIFVGaXg2NCh1c2RDYXApICogMC4wMDAwMDAwMgp9",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5Ci8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgdW5sb2NrZWRWYXVsdCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQogICAgICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldAogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAKICAgIHJldHVybiBsb2NrZWRCYWxhbmNlICsgdW5sb2NrZWRCYWxhbmNlCn0=",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gVUZpeDY0KDApCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZQp9",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldDwmRmxvd1Rva2VuLlZhdWx0PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKLy9DaGVjayB0aGUgc3RhdHVzIG9mIGEgZmluIHVzZXIKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZykgOiBBZGRyZXNzPyB7CiAgICBsZXQgc3RhdHVzPUZJTkQuc3RhdHVzKG5hbWUpCiAgICByZXR1cm4gc3RhdHVzLm93bmVyCn0=",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOiB7U3RyaW5nOiBVSW50NjR9IHsKICAgIGxldCBhY2N0ID0gZ2V0QWNjb3VudChhZGRyKQogICAgbGV0IHJldDoge1N0cmluZzogVUludDY0fSA9IHt9CiAgICByZXRbImNhcGFjaXR5Il0gPSBhY2N0LnN0b3JhZ2UuY2FwYWNpdHkKICAgIHJldFsidXNlZCJdID0gYWNjdC5zdG9yYWdlLnVzZWQKICAgIHJldFsiYXZhaWxhYmxlIl0gPSBhY2N0LnN0b3JhZ2UuY2FwYWNpdHkgLSAgYWNjdC5zdG9yYWdlLnVzZWQKICAgIHJldHVybiByZXQKfQ==",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9Pig8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIGNhcGFiaWxpdHkiKQoKICAgIHJldHVybiB2YXVsdFJlZi5iYWxhbmNlCn0=",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleTogU3RyaW5nKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgdmFyIGZsYWcgPSBmYWxzZQogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5ID09IGtleSB7CiAgICAgIGZsYWcgPSBhY2NvdW50S2V5LndlaWdodCA+PSBVRml4NjQoMTAwMCkgJiYgIWFjY291bnRLZXkuaXNSZXZva2VkCiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gZmxhZwp9Cg==",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleXM6IFtTdHJpbmddKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgdmFyIHdlaWdodDogVUZpeDY0ID0gMC4wCiAgZnVuIGFjY291bnRGbihhY2NvdW50S2V5OiBBY2NvdW50S2V5KTogQm9vbCB7CiAgICBsZXQga2V5ID0gU3RyaW5nLmVuY29kZUhleChhY2NvdW50S2V5LnB1YmxpY0tleS5wdWJsaWNLZXkpCiAgICBpZiBwdWJsaWNLZXlzLmNvbnRhaW5zKGtleSkgJiYgIWFjY291bnRLZXkuaXNSZXZva2VkIHsKICAgICAgd2VpZ2h0ID0gd2VpZ2h0ICsgYWNjb3VudEtleS53ZWlnaHQgCiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gd2VpZ2h0ID49IFVGaXg2NCgxMDAwKQp9Cg==",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIHJldHVybiBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdHMoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKfQ==",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAKICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgbGV0IGJhbGFuY2UgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KQoKICAgIHJldHVybiByZWNlaXZlciAmJiBiYWxhbmNlCn0=",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgphY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgPz8gbmlsCgogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgfQogICAgCiAgICByZXR1cm4gMC4wCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJzOiBbQWRkcmVzc10pOiBbVUZpeDY0XSB7CiAgICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgICAgICBsZXQgYmFsID0gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHIpCiAgICAgICAgYmFscy5hcHBlbmQoYmFsKQogICAgfQogICAgCiAgICByZXR1cm4gYmFscwp9",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKCmFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCiAgICA/PyBuaWwKCiAgICAKICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICB9CiAgICAKICAgIHJldHVybiAwLjAKfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcnM6IFtBZGRyZXNzXSk6IFtVRml4NjRdIHsKICAgIGxldCBiYWxzOiBbVUZpeDY0XSA9IFtdCgogICAgZm9yIGFkZHIgaW4gYWRkcnMgewogICAgICAgIGxldCBiYWwgPSBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcikKICAgICAgICBiYWxzLmFwcGVuZChiYWwpCiAgICB9CiAgICAKICAgIHJldHVybiBiYWxzCn0=",
              "removeAccountKeyByIndex": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24oa2V5SW5kZXg6IEludCkgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoS2V5cykgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIua2V5cy5yZXZva2Uoa2V5SW5kZXg6IGtleUluZGV4KQogICAgfQp9",
              "removeContractFromAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChSZW1vdmVDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLnJlbW92ZShuYW1lOiBuYW1lKQogICAgfQp9",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24oaW5kZXg6IEludCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gR2V0IGEga2V5IGZyb20gYW4gYXV0aCBhY2NvdW50LgogICAgICAgIGxldCBrZXlBID0gc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBpbmRleCkKICAgIH0KfQ==",
              "test": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "updateContractOfAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCBjb2RlOiBTdHJpbmcpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFVwZGF0ZUNvbnRyYWN0KSAmQWNjb3VudCkgewogICAgICAgIHNpZ25lci5jb250cmFjdHMudXBkYXRlKG5hbWU6IG5hbWUsIGNvZGU6IGNvZGUudXRmOCkKICAgIH0KfQ==",
              "verifyUserSignature": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oCiAgICBtZXNzYWdlOiBTdHJpbmcsCiAgICByYXdQdWJsaWNLZXlzOiBbU3RyaW5nXSwKICAgIHdlaWdodHM6IFtVRml4NjRdLAogICAgc2lnbkFsZ29zOiBbVUludDhdLAogICAgaGFzaEFsZ29zOiBbVUludDhdLAogICAgc2lnbmF0dXJlczogW1N0cmluZ10sCik6IEJvb2wgewoKICAgIGxldCBrZXlMaXN0ID0gQ3J5cHRvLktleUxpc3QoKQoKICAgIHZhciBpID0gMAogICAgZm9yIHJhd1B1YmxpY0tleSBpbiByYXdQdWJsaWNLZXlzIHsKICAgIGtleUxpc3QuYWRkKAogICAgICAgIFB1YmxpY0tleSgKICAgICAgICBwdWJsaWNLZXk6IHJhd1B1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbkFsZ29zW2ldKSEKICAgICAgICApLAogICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvc1tpXSkhLAogICAgICAgIHdlaWdodDogd2VpZ2h0c1tpXSwKICAgICkKICAgIGkgPSBpICsgMQogICAgfQoKICAgIGxldCBzaWduYXR1cmVTZXQ6IFtDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZV0gPSBbXQoKICAgIHZhciBqID0gMAogICAgZm9yIHNpZ25hdHVyZSBpbiBzaWduYXR1cmVzIHsKICAgIHNpZ25hdHVyZVNldC5hcHBlbmQoCiAgICAgICAgQ3J5cHRvLktleUxpc3RTaWduYXR1cmUoCiAgICAgICAgICAgIGtleUluZGV4OiBqLAogICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5kZWNvZGVIZXgoKQogICAgICAgICkKICAgICkKICAgICAgICBqID0gaiArIDEKICAgIH0KCiAgICBsZXQgc2lnbmVkRGF0YSA9IG1lc3NhZ2UuZGVjb2RlSGV4KCkKCiAgICByZXR1cm4ga2V5TGlzdC52ZXJpZnkoCiAgICAgICAgc2lnbmF0dXJlU2V0OiBzaWduYXR1cmVTZXQsCiAgICAgICAgc2lnbmVkRGF0YTogc2lnbmVkRGF0YSwKICAgICAgICBkb21haW5TZXBhcmF0aW9uVGFnOiAiRkxPVy1WMC4wLXVzZXIiCiAgICApCn0=",
              "verifyUserSignatureTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oCiAgICBtZXNzYWdlOiBTdHJpbmcsCiAgICByYXdQdWJsaWNLZXk6IFN0cmluZywKICAgIHdlaWdodDogVUZpeDY0LAogICAgc2lnbkFsZ286IFVJbnQ4LAogICAgaGFzaEFsZ286IFVJbnQ4LAogICAgc2lnbmF0dXJlOiBTdHJpbmcsCik6IEJvb2wgewoKICAgIGxldCBrZXlMaXN0OiBDcnlwdG8uS2V5TGlzdCA9IENyeXB0by5LZXlMaXN0KCkKCiAgICBrZXlMaXN0LmFkZCgKICAgICAgICBQdWJsaWNLZXkoCiAgICAgICAgcHVibGljS2V5OiByYXdQdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25BbGdvKSEKICAgICAgICApLAogICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvKSEsCiAgICAgICAgd2VpZ2h0OiB3ZWlnaHQsCiAgICApCgogICAgbGV0IHNpZ25hdHVyZVNldDogW0NyeXB0by5LZXlMaXN0U2lnbmF0dXJlXSA9IFtdCgogICAgc2lnbmF0dXJlU2V0LmFwcGVuZCgKICAgICAgICBDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZSgKICAgICAgICAgICAga2V5SW5kZXg6IDAsCiAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlLmRlY29kZUhleCgpCiAgICAgICAgKQogICAgKQoKICAgIGxldCBzaWduZWREYXRhID0gbWVzc2FnZS5kZWNvZGVIZXgoKQoKICAgIHJldHVybiBrZXlMaXN0LnZlcmlmeSgKICAgICAgICBzaWduYXR1cmVTZXQ6IHNpZ25hdHVyZVNldCwKICAgICAgICBzaWduZWREYXRhOiBzaWduZWREYXRhLAogICAgICAgIGRvbWFpblNlcGFyYXRpb25UYWc6ICJGTE9XLVYwLjAtdXNlciIKICAgICkKfQ==",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5Ci8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCnRyYW5zYWN0aW9uKCkgewoKICAgIGxldCBob2xkZXJSZWY6IGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYW1vdW50OiBVRml4NjQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgc2VsZi5ob2xkZXJSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gVG9rZW5Ib2xkZXIiKQoKCQkJCXNlbGYudmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKCiAgICAgICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gc2lnbmVyCiAgICAgICAgLmNhcGFiaWxpdGllcy5nZXQ8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKCiAgICAgICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICAgICAgcGFuaWMoIkNvdWxkIG5vdCBnZXQgZmxvdyBsb2NrZWQgdG9rZW4gdmF1bHQiKQogICAgICAgIH0KCiAgICAgICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgICAgIGxldCBsb2NrZWRCYWxhbmNlVW5sb2NrZWQgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRVbmxvY2tMaW1pdCgpCgogICAgICAgIC8vIGlmIGxvY2tlZEJhbGFuY2UgPT0gVUZpeDY0KDApIHsKICAgICAgICAvLyAgICAgcGFuaWMoIk5vdCBlbm91Z2ggYW1vdW50IHRvIHdpdGhkcmF3IikKICAgICAgICAvLyB9CgogICAgICAgIHNlbGYuYW1vdW50ID0gbG9ja2VkQmFsYW5jZVVubG9ja2VkCiAgICAKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IHNlbGYuYW1vdW50KSkKICAgIH0KfQ==",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6IGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ=="
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzLCB0YXJnZXQ6IEFkZHJlc3MpOiAmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJre0Zsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya1B1YmxpY30/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgewogICAgcmV0dXJuIGNvbGxlY3Rpb24uYm9ycm93UHVibGljQWNjb3VudEJvb2ttYXJrKGFkZHJlc3M6IHRhcmdldCkKICB9IAoKICByZXR1cm4gbmlsCn0=",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzKTogJntBZGRyZXNzOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfX0/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGFjY291bnQgYm9va21hcmsgY29sbGVjdGlvbiIpCgogIHJldHVybiBjb2xsZWN0aW9uLmdldEFjY291bnRCb29rbWFya3MoKQp9"
            },
            "bridge": {
              "batchBridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGFuIE5GVCBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBFUkM3MjEgaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gQ2FkZW5jZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWRzOiBbVUludDI1Nl0pIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgY29sbGVjdGlvbiBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkgKiBVRml4NjQoaWRzLmxlbmd0aCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIH0KICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "batchBridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQyNTZdKSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApICogVUZpeDY0KGlkcy5sZW5ndGgpCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICAgICAgdHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgICAgIHNlbGYuY29sbGVjdGlvbi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCBORlQgaW50byB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbgogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchBridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIAogICAgbGV0IG5mdHM6IEB7VUludDY0IDoge05vbkZ1bmdpYmxlVG9rZW4uTkZUfX0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICBzZWxmLm5mdHMgPC0ge30KICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgc2VsZi5uZnRzW2lkXSA8LSEgbmZ0CiAgICAgICAgfQogICAgICAgIC8vIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwICogVUZpeDY0KGlkcy5sZW5ndGgpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgdmFyIGlkeCA9IDAKICAgICAgICB3aGlsZSBpZHggPCBpZHMubGVuZ3RoIHsKICAgICAgICAgICAgbGV0IG5mdElkID0gaWRzW2lkeF0hCiAgICAgICAgICAgIGxldCBuZnQgPC0gc2VsZi5uZnRzLnJlbW92ZShrZXk6IG5mdElkKSEgYXMgQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgICAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCggCiAgICAgICAgICAgICAgICBuZnQ6IDwtIG5mdCEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgaWR4ID0gaWR4ICsgMQogICAgICAgIH0KICAgICAgIAogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYubmZ0cwogICAgfQp9Cg==",
              "batchBridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogICAgCiAgICBsZXQgbmZ0czogQHtVSW50NjQgOiB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIHNlbGYubmZ0cyA8LSB7fQogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgICAgICBzZWxmLm5mdHNbaWRdIDwtISBuZnQKICAgICAgICB9CiAgICAgICAgLy8gc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAgKiBVRml4NjQoaWRzLmxlbmd0aCkKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICB2YXIgaWR4ID0gMAogICAgICAgIHdoaWxlIGlkeCA8IGlkcy5sZW5ndGggewogICAgICAgICAgICBsZXQgbmZ0SWQgPSBpZHNbaWR4XSEKICAgICAgICAgICAgbGV0IG5mdCA8LSBzZWxmLm5mdHMucmVtb3ZlKGtleTogbmZ0SWQpISBhcyBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKCAKICAgICAgICAgICAgICAgIG5mdDogPC0gbmZ0ISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgICAgICBpZHggPSBpZHggKyAxCiAgICAgICAgfQogICAgICAgCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5uZnRzCiAgICB9Cn0K",
              "batchEvmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzZXM6IEFycmF5IG9mIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeCB0byBjaGVjayBmb3IKLy8vICAgICBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLyAgICAgaW5kZXhlZCBvbiB0aGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IHdpdGhvdXQgMHggcHJlZml4Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzZXM6IFtTdHJpbmddKToge1N0cmluZzogQm9vbD99IHsKICAgIGxldCByZXN1bHRzOiB7U3RyaW5nOiBCb29sP30gPSB7fQogICAgZm9yIGFkZHJlc3NIZXggaW4gZXZtQWRkcmVzc2VzIHsKICAgICAgICBpZiByZXN1bHRzW2FkZHJlc3NIZXhdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIGlmIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzc0hleCkgewogICAgICAgICAgICBsZXQgcmVxdWlyZXNPbmJvYXJkaW5nID0gRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3MpCiAgICAgICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogYWRkcmVzc0hleCwgcmVxdWlyZXNPbmJvYXJkaW5nKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchEvmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzZXM6IEFycmF5IG9mIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeCB0byBjaGVjayBmb3IKLy8vICAgICBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLyAgICAgaW5kZXhlZCBvbiB0aGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IHdpdGhvdXQgMHggcHJlZml4Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzZXM6IFtTdHJpbmddKToge1N0cmluZzogQm9vbD99IHsKICAgIC8vIGxldCBldm1BZGRyZXNzZXMgPSBbIjZBOWRBNWQ2M2ZGMzM1MzY2N0QzNEMwMjAyQzYyOEM3REEzYzJDMWYiXQogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchIdentifierRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CgogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgewogICAgICAgIGlmIHJlc3VsdHNbaWRlbnRpZmllcl0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgbGV0IHR5cGU6IFR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBpZGVudGlmaWVyLCBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "batchIdentifierRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CgogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgewogICAgICAgIGlmIHJlc3VsdHNbaWRlbnRpZmllcl0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgbGV0IHR5cGU6IFR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBpZGVudGlmaWVyLCBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "batchOnboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgTkZUIHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIE5GVHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIE5GVCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gYWRkcmVzc2VzQXNIZXg6IEFycmF5IG9mIEVWTSBjb250cmFjdCBhZGRyZXNzZXMgKGFzIGhleCBzdHJpbmcgd2l0aG91dCAweCBwcmVmaXgpIGRlZmluaW5nIHRoZSAKLy8vICAgICBicmlkZ2VhYmxlIGFzc2V0IHRvIGJlIG9uYm9hcmRlZAovLy8KdHJhbnNhY3Rpb24oYWRkcmVzc2VzQXNIZXg6IFtTdHJpbmddKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgLy8gU2V0IGEgd2l0aGRyYXdhbCBsaW1pdCBmb3IgdGhlIHByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyTGltaXQgPSBGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUgKiBVRml4NjQoYWRkcmVzc2VzQXNIZXgubGVuZ3RoKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihwcm92aWRlckxpbWl0KQogICAgICAgIC8vIENyZWF0ZSBTY29wZWRGVFByb3ZpZGVyIHRvIGV4cGlyZSBqdXN0IGFmdGVyIHRoaXMgdHJhbnNhY3Rpb24KICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBJdGVyYXRlIG92ZXIgcHJvdmlkZWQgYXJyYXkKICAgICAgICBmb3IgYWRkcmVzc0hleCBpbiBhZGRyZXNzZXNBc0hleCB7CiAgICAgICAgICAgIC8vIENvbnZlcnQgaGV4IHN0cmluZyB0byBFVk1BZGRyZXNzCiAgICAgICAgICAgIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzc0hleCkKICAgICAgICAgICAgLy8gQ29udGludWUgaWYgdGhlIGhleCBpcyBub3QgYSB2YWxpZCBFVk0gYWRkcmVzcyBvciBpZiB0aGUgYWRkcmVzcyBpcyBhbHJlYWR5IG9uYm9hcmRlZAogICAgICAgICAgICBpZiBhZGRyZXNzID09IG5pbCB8fCBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcyEpICE9IHRydWUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQoKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlFVk1BZGRyZXNzKAogICAgICAgICAgICAgICAgYWRkcmVzcyEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICB9CiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchOnboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KHR5cGVzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXJzIGluIGlkZW50aWZpZXJzIHsgCiAgICAgICAgICAgIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgICAgICAvLyBDb250aW51ZSBvbiBpZiB0aGUgdHlwZSBkb2VzIG5vdCByZXF1aXJlIG9uYm9hcmRpbmcKICAgICAgICAgICAgaWYgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpICE9IHRydWUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICB9CiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchOnboardByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KGlkZW50aWZpZXJzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgeyAKICAgICAgICAgICAgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByType": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlczogVGhlIENhZGVuY2UgdHlwZXMgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZCB0byB0aGUgYnJpZGdlCi8vLwp0cmFuc2FjdGlvbih0eXBlczogW1R5cGVdKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgLy8gU2V0IGEgd2l0aGRyYXdhbCBsaW1pdCBmb3IgdGhlIHByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyTGltaXQgPSBGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUgKiBVRml4NjQodHlwZXMubGVuZ3RoKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihwcm92aWRlckxpbWl0KQogICAgICAgIC8vIENyZWF0ZSBTY29wZWRGVFByb3ZpZGVyIHRvIGV4cGlyZSBqdXN0IGFmdGVyIHRoaXMgdHJhbnNhY3Rpb24KICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBmb3IgdHlwZSBpbiB0eXBlcyB7IAogICAgICAgICAgICAvLyBDb250aW51ZSBvbiBpZiB0aGUgdHlwZSBkb2VzIG5vdCByZXF1aXJlIG9uYm9hcmRpbmcKICAgICAgICAgICAgaWYgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpICE9IHRydWUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICB9CiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchOnboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchTypeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbih0eXBlczogW1R5cGVdKToge1R5cGU6IEJvb2w/fSB7CiAgICBsZXQgcmVzdWx0czoge1R5cGU6IEJvb2w/fSA9IHt9CiAgICBmb3IgdHlwZSBpbiB0eXBlcyB7CiAgICAgICAgaWYgcmVzdWx0c1t0eXBlXSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IHR5cGUsIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSkKICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchTypeRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgLy8gbGV0IGlkZW50aWZpZXJzID0gWyJBLjQ5ZTdhNWE0ZWRlZmU0MmUuRXhhbXBsZVRva2VuLlZhdWx0IiwiQS40OWU3YTVhNGVkZWZlNDJlLkV4YW1wbGVORlQuTkZUIl0KICAgIGxldCByZXN1bHRzOiB7U3RyaW5nOiBCb29sP30gPSB7fQoKICAgIGZvciBpZGVudGlmaWVyIGluIGlkZW50aWZpZXJzIHsKICAgICAgICBpZiByZXN1bHRzW2lkZW50aWZpZXJdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIGxldCB0eXBlOiBUeXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogaWRlbnRpZmllciwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "bridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NikgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50MjU2KSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQoKICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLmNvbGxlY3Rpb24gPSByZWNlaXZlckFjY3QuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdORlQoCiAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGE6IFtVSW50OF0sIGdhc0xpbWl0OiBVSW50NjQpIHsKICAgIAogICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCiAgICAgICAgCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCgKICAgICAgICAgICAgbmZ0OiA8LXNlbGYubmZ0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIHZhciBhZGRyZXNzQnl0ZXM6IFtVSW50OF0gPSBjb250cmFjdEVWTUFkZHJlc3MuZGVjb2RlSGV4KCkKICAgICAgICBsZXQgZXZtVG9rZW5BZGRyID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgLy8gbGV0IGRhdGEgPSBkYXRhU3RyLmRlY29kZUhleCgpCgogICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2KSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBmdW5naWJsZSB0b2tlbnMgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUKLy8vIEZsb3dFVk1CcmlkZ2UuCi8vLwovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVJbnQyNTYpIHsKCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlCiAgICBsZXQgcmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkMyMCBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gRnVuZ2libGVUb2tlbiBWYXVsdCB0eXBlCiAgICAgICAgc2VsZi52YXVsdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IHRva2VuQ29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiVmF1bHQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgVmF1bHQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQsIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIC8vIElmIHRoZSB2YXVsdCBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGl0IGFuZCBwdWJsaXNoIGFjY29yZGluZyB0byB0aGUgY29udHJhY3QncyBkZWZpbmVkIGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtdmF1bHREYXRhLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCgogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBsZXQgbWV0YWRhdGFDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwLCBhdDogdmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKG1ldGFkYXRhQ2FwLCBhdDogdmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5yZWNlaXZlciA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZhdWx0IGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZSByZXF1ZXN0CiAgICAgICAgbGV0IHZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9IDwtIHNlbGYuY29hLndpdGhkcmF3VG9rZW5zKAogICAgICAgICAgICB0eXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgYW1vdW50OiBhbW91bnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCB0b2tlbiBpbnRvIHRoZSBzaWduZXIncyB2YXVsdAogICAgICAgIHNlbGYucmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXZhdWx0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUKICAgIGxldCByZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlJlY2VpdmVyfQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzIwIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBGdW5naWJsZVRva2VuIFZhdWx0IHR5cGUKICAgICAgICBzZWxmLnZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbkNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBWYXVsdCB0eXBlIG9mOiAiIC5jb25jYXQodG9rZW5Db250cmFjdEFkZHJlc3MudG9TdHJpbmcoKSkuY29uY2F0KCIuIikuY29uY2F0KHRva2VuQ29udHJhY3ROYW1lKS5jb25jYXQoIi5WYXVsdCIpKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBWYXVsdCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdCwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgLy8gSWYgdGhlIHZhdWx0IGRvZXMgbm90IGV4aXN0LCBjcmVhdGUgaXQgYW5kIHB1Ymxpc2ggYWNjb3JkaW5nIHRvIHRoZSBjb250cmFjdCdzIGRlZmluZWQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC12YXVsdERhdGEuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKCiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxldCBtZXRhZGF0YUNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXAsIGF0OiB2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gobWV0YWRhdGFDYXAsIGF0OiB2YXVsdERhdGEubWV0YWRhdGFQYXRoKQogICAgICAgIH0KICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLnJlY2VpdmVyID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmF1bHQgcmVjZWl2ZXIgY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlIHJlcXVlc3QKICAgICAgICBsZXQgdmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdUb2tlbnMoCiAgICAgICAgICAgIHR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIHRva2VuIGludG8gdGhlIHNpZ25lcidzIHZhdWx0CiAgICAgICAgc2VsZi5yZWNlaXZlci5kZXBvc2l0KGZyb206IDwtdmF1bHQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUKICAgIGxldCByZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlJlY2VpdmVyfQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzIwIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBGdW5naWJsZVRva2VuIFZhdWx0IHR5cGUKICAgICAgICBzZWxmLnZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbkNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBWYXVsdCB0eXBlIG9mOiAiIC5jb25jYXQodG9rZW5Db250cmFjdEFkZHJlc3MudG9TdHJpbmcoKSkuY29uY2F0KCIuIikuY29uY2F0KHRva2VuQ29udHJhY3ROYW1lKS5jb25jYXQoIi5WYXVsdCIpKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBWYXVsdCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdCwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgLy8gSWYgdGhlIHZhdWx0IGRvZXMgbm90IGV4aXN0LCBjcmVhdGUgaXQgYW5kIHB1Ymxpc2ggYWNjb3JkaW5nIHRvIHRoZSBjb250cmFjdCdzIGRlZmluZWQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC12YXVsdERhdGEuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKCiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxldCBtZXRhZGF0YUNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXAsIGF0OiB2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gobWV0YWRhdGFDYXAsIGF0OiB2YXVsdERhdGEubWV0YWRhdGFQYXRoKQogICAgICAgIH0KICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLnJlY2VpdmVyID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmF1bHQgcmVjZWl2ZXIgY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlIHJlcXVlc3QKICAgICAgICBsZXQgdmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdUb2tlbnMoCiAgICAgICAgICAgIHR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIHRva2VuIGludG8gdGhlIHNpZ25lcidzIHZhdWx0CiAgICAgICAgc2VsZi5yZWNlaXZlci5kZXBvc2l0KGZyb206IDwtdmF1bHQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYuc2VudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGE6IFtVSW50OF0sIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UsIEVWTS5DYWxsLCBFVk0uT3duZXIpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgZnVuZHMgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgbGV0IHZhdWx0ID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlZhdWx0fT4oCiAgICAgICAgICAgICAgICBmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBGdW5naWJsZVRva2VuIFZhdWx0IikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBiYWxhbmNlICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdC53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGluIHN0b3JhZ2UgdXNhZ2Ugd2l0aCBzb21lIGJ1ZmZlcgogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgbGV0IHZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICBjb250cmFjdE5hbWU6IHRva2VuQ29udHJhY3ROYW1lLAogICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYuc2VudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQoKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gY29udHJhY3RFVk1BZGRyZXNzLmRlY29kZUhleCgpCiAgICAgICAgbGV0IGV2bVRva2VuQWRkciA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIC8vIGxldCBkYXRhID0gZGF0YVN0ci5kZWNvZGVIZXgoKQogICAgICAgICBsZXQgcmVzID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IGV2bVRva2VuQWRkciwKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQoKICAgICAgICBhc3NlcnQocmVzLnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJFVk0gY2FsbCBmYWlsZWQiKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0VG9rZW5zKAogICAgICAgICAgICB2YXVsdDogPC1zZWxmLnNlbnRWYXVsdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQoKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYuc2VudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "calculateBridgeFee": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgZmVlIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQgcGx1cyB0aGUgYmFzZSBmZWUuCi8vLwovLy8gQHBhcmFtIGJ5dGVzOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHVzZWQgdG8gZXNjcm93IGFuIGFzc2V0LgovLy8KLy8vIEByZXR1cm4gVGhlIGNhbGN1bGF0ZWQgZmVlIHRvIGJlIHBhaWQgaW4gRmxvd1Rva2VuCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihieXRlcyB1c2VkOiBVSW50NjQpOiBVRml4NjQgewogICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IHVzZWQpCn0K",
              "calculateBridgeFeeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgZmVlIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQgcGx1cyB0aGUgYmFzZSBmZWUuCi8vLwovLy8gQHBhcmFtIGJ5dGVzOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHVzZWQgdG8gZXNjcm93IGFuIGFzc2V0LgovLy8KLy8vIEByZXR1cm4gVGhlIGNhbGN1bGF0ZWQgZmVlIHRvIGJlIHBhaWQgaW4gRmxvd1Rva2VuCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihieXRlcyB1c2VkOiBVSW50NjQpOiBVRml4NjQgewogICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IHVzZWQpCn0K",
              "evmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzSGV4OiBUaGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4Ci8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NIZXg6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogZXZtQWRkcmVzc0hleCkgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgIH0KICAgIHJldHVybiBuaWwKfQo=",
              "evmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzSGV4OiBUaGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4Ci8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NIZXg6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogZXZtQWRkcmVzc0hleCkgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgIH0KICAgIHJldHVybiBuaWwKfQo=",
              "getAssociatedEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuIENhZGVuY2UgdHlwZSAoYXMgaXRzIGlkZW50aWZpZXIgU3RyaW5nKQovLy8KLy8vIEBwYXJhbSB0eXBlSWRlbnRpZmllciBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgU3RyaW5nCi8vLwovLy8gQHJldHVybiBUaGUgRVZNIGFkZHJlc3MgYXMgYSBoZXggc3RyaW5nIGlmIHRoZSB0eXBlIGhhcyBhbiBhc3NvY2lhdGVkIEVWTUFkZHJlc3MsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IFN0cmluZz8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICBpZiBsZXQgYWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VDb25maWcuZ2V0RVZNQWRkcmVzc0Fzc29jaWF0ZWQod2l0aDogdHlwZSkgewogICAgICAgICAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIG5pbAp9",
              "getAssociatedEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gUmV0dXJucyB0aGUgRVZNIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBnaXZlbiBDYWRlbmNlIHR5cGUgKGFzIGl0cyBpZGVudGlmaWVyIFN0cmluZykKLy8vCi8vLyBAcGFyYW0gdHlwZUlkZW50aWZpZXIgVGhlIENhZGVuY2UgdHlwZSBpZGVudGlmaWVyIFN0cmluZwovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzIGEgaGV4IHN0cmluZyBpZiB0aGUgdHlwZSBoYXMgYW4gYXNzb2NpYXRlZCBFVk1BZGRyZXNzLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihpZGVudGlmaWVyOiBTdHJpbmcpOiBTdHJpbmc/IHsKICAgIGlmIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSB7CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBGbG93RVZNQnJpZGdlQ29uZmlnLmdldEVWTUFkZHJlc3NBc3NvY2lhdGVkKHdpdGg6IHR5cGUpIHsKICAgICAgICAgICAgcmV0dXJuIEVWTVV0aWxzLmdldEVWTUFkZHJlc3NBc0hleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getBridgeCoaAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcmV0dXJuIFRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UncyBjb29yZGluYXRpbmcgQ2FkZW5jZU93bmVkQWNjb3VudAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2UuZ2V0QnJpZGdlQ09BRVZNQWRkcmVzcygpCiAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "getBridgeCoaAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgovLy8gUmV0dXJucyB0aGUgRVZNIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHJldHVybiBUaGUgRVZNIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBGbG93RVZNQnJpZGdlJ3MgY29vcmRpbmF0aW5nIENhZGVuY2VPd25lZEFjY291bnQKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKCk6IFN0cmluZyB7CiAgICBsZXQgYWRkcmVzczogRVZNLkVWTUFkZHJlc3MgPSBGbG93RVZNQnJpZGdlLmdldEJyaWRnZUNPQUVWTUFkZHJlc3MoKQogICAgcmV0dXJuIEVWTVV0aWxzLmdldEVWTUFkZHJlc3NBc0hleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzKQp9",
              "onboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgTkZUIHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIE5GVHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIE5GVCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gY29udHJhY3RBZGRyZXNzSGV4OiBUaGUgRVZNIGFkZHJlc3Mgb2YgdGhlIGNvbnRyYWN0IChhcyBoZXggc3RyaW5nIHdpdGhvdXQgMHggcHJlZml4KSBkZWZpbmluZyB0aGUgCi8vLyAgICAgYnJpZGdlYWJsZSBhc3NldCB0byBiZSBvbmJvYXJkZWQKLy8vCnRyYW5zYWN0aW9uKGNvbnRyYWN0QWRkcmVzc0hleDogU3RyaW5nKSB7CgogICAgbGV0IGNvbnRyYWN0QWRkcmVzczogRVZNLkVWTUFkZHJlc3MKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIENvbnN0cnVjdCBFVk1BZGRyZXNzIGZyb20gaGV4IHN0cmluZyAobm8gbGVhZGluZyBgIjB4ImApIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi5jb250cmFjdEFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBjb250cmFjdEFkZHJlc3NIZXgpCiAgICAgICAgICAgID8/IHBhbmljKCJJbnZhbGlkIEVWTSBhZGRyZXNzIHN0cmluZyBwcm92aWRlZCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgRVZNIGNvbnRyYWN0CiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlFVk1BZGRyZXNzKAogICAgICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIE5GVCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBORlRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBORlQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIGNvbnRyYWN0QWRkcmVzc0hleDogVGhlIEVWTSBhZGRyZXNzIG9mIHRoZSBjb250cmFjdCAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihjb250cmFjdEFkZHJlc3NIZXg6IFN0cmluZykgewoKICAgIGxldCBjb250cmFjdEFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgRVZNQWRkcmVzcyBmcm9tIGhleCBzdHJpbmcgKG5vIGxlYWRpbmcgYCIweCJgKSAtLS0gKi8KICAgICAgICAvLwogICAgICAgIHNlbGYuY29udHJhY3RBZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogY29udHJhY3RBZGRyZXNzSGV4KQogICAgICAgICAgICA/PyBwYW5pYygiSW52YWxpZCBFVk0gYWRkcmVzcyBzdHJpbmcgcHJvdmlkZWQiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIEVWTSBjb250cmFjdAogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5RVZNQWRkcmVzcygKICAgICAgICAgICAgc2VsZi5jb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "onboardByType": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSB0eXBlIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZTogVHlwZSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSBpZGVudGlmZXI6IFRoZSBDYWRlbmNlIHR5cGUgaWRlbnRpZmllciBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24oaWRlbnRpZmllcjogU3RyaW5nKSB7CgogICAgbGV0IHR5cGU6IFR5cGUKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIENvbnN0cnVjdCB0aGUgdHlwZSBmcm9tIGlkZW50aWZpZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICBzZWxmLnR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgc2VsZi50eXBlLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "onboardByTypeIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIGlkZW50aWZlcjogVGhlIENhZGVuY2UgdHlwZSBpZGVudGlmaWVyIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlCi8vLwp0cmFuc2FjdGlvbihpZGVudGlmaWVyOiBTdHJpbmcpIHsKCiAgICBsZXQgdHlwZTogVHlwZQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gQ29uc3RydWN0IHRoZSB0eXBlIGZyb20gaWRlbnRpZmllciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIHNlbGYudHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICBzZWxmLnR5cGUsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "onboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHg3MTVjNTdmN2E1OWJjMzliCgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4NzE1YzU3ZjdhNTliYzM5YgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGU6IFRoZSBDYWRlbmNlIHR5cGUgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZCB0byB0aGUgYnJpZGdlCi8vLwp0cmFuc2FjdGlvbih0eXBlOiBUeXBlKSB7CgogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICB0eXBlLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "typeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4odHlwZTogVHlwZSk6IEJvb2w/IHsKICAgIHJldHVybiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkKfQo=",
              "typeRequiresOnboardingByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBpZGVudGlmaWVyOiBUaGUgaWRlbnRpZmllciBvZiB0aGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K",
              "typeRequiresOnboardingByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweDcxNWM1N2Y3YTU5YmMzOWIKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBpZGVudGlmaWVyOiBUaGUgaWRlbnRpZmllciBvZiB0aGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K"
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgICBpbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCiAgICAvLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCiAgICAvLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZXhpc3QoPFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgIHJldHVybiB2YXVsdFJlZgogICAgfQoKICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgcmV0dXJuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pID09IG5pbCB7CiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbihuZnRUeXBlOiBUeXBlPEA8TkZUPi5ORlQ+KCkpCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPikgPT0gbmlsKSB7CiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIGxldCBjYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSAgICAgICAgICAgIAogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY2FwLCBhdDogPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKCiAgICAgICAgfQogICAgfQp9",
              "enableNFTStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1lbG9keVRpY2tldCBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIE1lbG9keVRpY2tldC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbiwgdG86IE1lbG9keVRpY2tldC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIGlmIChzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmTWVsb2R5VGlja2V0LkNvbGxlY3Rpb24+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkgPT0gbmlsKSB7CiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmTWVsb2R5VGlja2V0LkNvbGxlY3Rpb24+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpICAgICAgICAgICAgCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjYXAsIGF0OiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgfQp9",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCmFjY2VzcyhhbGwpIGZ1biBtYWluKCk6IHtTdHJpbmcgOiB7U3RyaW5nIDogQm9vbH19IHsKICBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ1R5cGVEYXRhKCkKICByZXR1cm4gY2F0YWxvZwp9",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogc3RvcmFnZVBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBwdWJsaWNQYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogc3RvcmFnZVBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBwdWJsaWNQYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQphY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CmFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCmluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpCiAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgICAgaWYgKCFjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQpIHsKICAgICAgICAgIGlmIGxldCBjRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gY0Rpc3BsYXkKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MsCiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXkKICAgICAgICApCiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTDisplaysTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KICBhY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpCiAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgICAgaWYgKCFjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQpIHsKICAgICAgICAgIGlmIGxldCBjRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gY0Rpc3BsYXkKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MsCiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXkKICAgICAgICApCiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViewsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0NvbGxlY3Rpb246IFR5cGUKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHB1YmxpY0NvbGxlY3Rpb246IFR5cGUsCiAgICBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlLAogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnB1YmxpY0NvbGxlY3Rpb24gPSBwdWJsaWNDb2xsZWN0aW9uCiAgICBzZWxmLnB1YmxpY0xpbmtlZFR5cGUgPSBwdWJsaWNMaW5rZWRUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRDogVUludDY0KToge1N0cmluZzogQW55U3RydWN0fSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1N0cmluZzogQW55U3RydWN0fSA9IHt9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24sIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzKSB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQodG9rZW5JRCkKCiAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKSEKICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgaWYgbGV0IHJhcml0eSA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICAgIH0KCiAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICAgIH0KCiAgICBpZiBsZXQgZWRpdGlvbnMgPSBNZXRhZGF0YVZpZXdzLmdldEVkaXRpb25zKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgICB9CgogICAgaWYgbGV0IHNlcmlhbCA9IE1ldGFkYXRhVmlld3MuZ2V0U2VyaWFsKHJlc29sdmVyKSB7CiAgICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICAgIH0KCiAgICBpZiBsZXQgcm95YWx0aWVzID0gTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHRpZXMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogICAgfQoKICAgIGlmIGxldCBsaWNlbnNlID0gTWV0YWRhdGFWaWV3cy5nZXRMaWNlbnNlKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogICAgfQoKICAgIGlmIGxldCBtZWRpYXMgPSBNZXRhZGF0YVZpZXdzLmdldE1lZGlhcyhyZXNvbHZlcikgewogICAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgICB9CgogICAgaWYgbGV0IGV4dGVybmFsVVJMID0gTWV0YWRhdGFWaWV3cy5nZXRFeHRlcm5hbFVSTChyZXNvbHZlcikgewogICAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogICAgfQoKICAgIGlmIGxldCB0cmFpdHMgPSBNZXRhZGF0YVZpZXdzLmdldFRyYWl0cyhyZXNvbHZlcikgewogICAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogICAgfQoKICAgIGlmIGxldCBjb2xsZWN0aW9uRGF0YSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRhdGEocmVzb2x2ZXIpIHsKICAgICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgICBzdG9yYWdlUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgsCiAgICAgICAgcHVibGljUGF0aDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCwKICAgICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICAgIHB1YmxpY0xpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0xpbmtlZFR5cGUsCiAgICAgICkKICAgICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogICAgfQogIH0KICByZXNbInRva2VuSWQiXSA9IHRva2VuSUQKCiAgcmV0dXJuIHJlcwp9",
              "getNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayPageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KICBhY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHN0YXJ0OiBJbnQsIGVuZDogSW50KToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhICAKICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KHB1YmxpY1BhdGgpIQogIHZhciB0b2tlbklEcyA9IGNvbGxlY3Rpb25DYXAuZ2V0SURzKCkKICBsZXQgbGVuID0gdG9rZW5JRHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiByZXMKICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVtID0gbGVuCiAgICAgIH0KICAgIH0KICB0b2tlbklEcyA9IHRva2VuSURzLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW0gKQogIAogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIAogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KICBhY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcpOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEgIAogIGxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHVibGljUGF0aCkhCiAgbGV0IHRva2VuSURzID0gY29sbGVjdGlvbkNhcC5nZXRJRHMoKQogIAogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIAogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsMetadataViewPageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0NvbGxlY3Rpb246IFR5cGUKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHB1YmxpY0NvbGxlY3Rpb246IFR5cGUsCiAgICBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlLAogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnB1YmxpY0NvbGxlY3Rpb24gPSBwdWJsaWNDb2xsZWN0aW9uCiAgICBzZWxmLnB1YmxpY0xpbmtlZFR5cGUgPSBwdWJsaWNMaW5rZWRUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgc3RhcnQ6IEludCwgZW5kOiBJbnQpOiBbe1N0cmluZzogQW55U3RydWN0fV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBuZnRzOiBbe1N0cmluZzogQW55U3RydWN0fV0gPSBbXQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiBuZnRzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKIAogIGxldCB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYhLmdldElEcygpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB8fCB0b2tlbklEcy5sZW5ndGggPT0gMCkgewogICAgICByZXR1cm4gbmZ0cwogICAgfQoKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CgogICAgbGV0IHJlczp7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KICAgIAogICAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKSEKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICAgICAgfQoKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICAgICAgfQoKICAgICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgICAgIH0KCiAgICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICAgICAgfQoKICAgICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogICAgICB9CgogICAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogICAgICB9CgogICAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgICAgIH0KCiAgICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogICAgICB9CgogICAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICApCiAgICAgICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogICAgICB9CiAgICB9CiAgICByZXNbInRva2VuSWQiXSA9IHRva2VuSUQKCiAgICBuZnRzLmFwcGVuZChyZXMpCiAgfQogIGxldCBsZW4gPSBuZnRzLmxlbmd0aAogIHZhciBlbmROdW0gPSBlbmQKICAgaWYgbGVuIDwgc3RhcnQgewogICAgICByZXR1cm4gW10KICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVtID0gbGVuCiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIG5mdHMuc2xpY2UoZnJvbTogc3RhcnQsIHVwVG86IGVuZE51bSApCn0=",
              "getNFTsMetadataViewTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0NvbGxlY3Rpb246IFR5cGUKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHB1YmxpY0NvbGxlY3Rpb246IFR5cGUsCiAgICBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlLAogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnB1YmxpY0NvbGxlY3Rpb24gPSBwdWJsaWNDb2xsZWN0aW9uCiAgICBzZWxmLnB1YmxpY0xpbmtlZFR5cGUgPSBwdWJsaWNMaW5rZWRUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZyk6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IG5mdHM6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSA9IFtdCgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24sIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIG5mdHMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogCiAgbGV0IHRva2VuSURzID0gY29sbGVjdGlvblJlZiEuZ2V0SURzKCkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHx8IHRva2VuSURzLmxlbmd0aCA9PSAwKSB7CiAgICAgIHJldHVybiBuZnRzCiAgICB9CgogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKCiAgICBsZXQgcmVzOntTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQogICAgCiAgICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQodG9rZW5JRCkKCiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IHJhcml0eSA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgICB9CgogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgZWRpdGlvbnMgPSBNZXRhZGF0YVZpZXdzLmdldEVkaXRpb25zKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgICAgfQoKICAgICAgaWYgbGV0IHNlcmlhbCA9IE1ldGFkYXRhVmlld3MuZ2V0U2VyaWFsKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgICB9CgogICAgICBpZiBsZXQgcm95YWx0aWVzID0gTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHRpZXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICAgIH0KCiAgICAgIGlmIGxldCBsaWNlbnNlID0gTWV0YWRhdGFWaWV3cy5nZXRMaWNlbnNlKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICAgIH0KCiAgICAgIGlmIGxldCBtZWRpYXMgPSBNZXRhZGF0YVZpZXdzLmdldE1lZGlhcyhyZXNvbHZlcikgewogICAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgICAgfQoKICAgICAgaWYgbGV0IGV4dGVybmFsVVJMID0gTWV0YWRhdGFWaWV3cy5nZXRFeHRlcm5hbFVSTChyZXNvbHZlcikgewogICAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICAgIH0KCiAgICAgIGlmIGxldCB0cmFpdHMgPSBNZXRhZGF0YVZpZXdzLmdldFRyYWl0cyhyZXNvbHZlcikgewogICAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgICAgfQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb25EaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGF0YSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRhdGEocmVzb2x2ZXIpIHsKICAgICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgICAgcHVibGljUGF0aDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCwKICAgICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICAgICkKICAgICAgICByZXNbImNvbGxlY3Rpb25EYXRhIl0gPSBkYXRhCiAgICAgIH0KICAgIH0KICAgIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICAgIG5mdHMuYXBwZW5kKHJlcykKICB9CgoKICAKCiAgcmV0dXJuIG5mdHMKfQ==",
              "getUserCollections": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKWZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbTkZUQ29sbGVjdGlvbl0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IGNvbGxlY3Rpb25QYXRoczogW1N0b3JhZ2VQYXRoXSA9IFtdCiAgbGV0IGNvbGxlY3Rpb25zOiBbTkZUQ29sbGVjdGlvbl0gPSBbXQoKICBmdW4gZWFjaFBhdGgocGF0aDogU3RvcmFnZVBhdGgsIFR5cGU6IFR5cGUpOiBCb29sIHsKICAgCiAgICBpZiBUeXBlICE9IG5pbCB7CiAgICAgIGlmIFR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgIGNvbGxlY3Rpb25QYXRocy5hcHBlbmQocGF0aCkKICAgICAgfQogICAgICAKICAgIH0KICAgCiAgICByZXR1cm4gdHJ1ZQogIH0KCiAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZWFjaFBhdGgpCgogIGZvciBwYXRoIGluIGNvbGxlY3Rpb25QYXRocyB7CiAgICBsZXQgcGF0aFN0ciA9IHBhdGgudG9TdHJpbmcoKQogICAgbGV0IHNwbGl0QXJyID0gcGF0aFN0ci5zcGxpdChzZXBhcmF0b3I6ICIvIikKICAgIGxldCBpZGVudGlmaWVyID0gc3BsaXRBcnJbMl0KICAgIGxldCBwdWJQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKICAgIGxldCBjb2xsZWN0aW9uID0gIGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KHB1YlBhdGgpIQoKICAgIGNvbGxlY3Rpb25zLmFwcGVuZCgKICAgICAgTkZUQ29sbGVjdGlvbigKICAgICAgaWQ6IGlkZW50aWZpZXIsCiAgICAgIHBhdGg6IHB1YlBhdGgudG9TdHJpbmcoKSwKICAgICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogcGF0aCwgcHVibGljUGF0aDogcHViUGF0aCksCiAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICApCiAgICApCiAgfQoKCiAgcmV0dXJuIGNvbGxlY3Rpb25zCn0=",
              "getUserCollectionsPage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCiAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCiAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogICAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwogIAogICAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICAgIHNlbGYubmFtZSA9IG5hbWUKICAgICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgICB9CiAgfQogIAogIGFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQogIAogICAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICAgIHNlbGYuaWQgPSBpZAogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICAgIH0KICB9CiAgCiAgYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCiAgCiAgICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICAKICAgICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogIAogICAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAKICAgIHJldHVybiBpdGVtCiAgfQogIAogIGFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RhcnQ6IEludCwgZW5kOiBJbnQpOiBbTkZUQ29sbGVjdGlvbl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IGNvbGxlY3Rpb25QYXRoczogW1N0b3JhZ2VQYXRoXSA9IFtdCiAgICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgCiAgICBmdW4gZWFjaFBhdGgocGF0aDogU3RvcmFnZVBhdGgsIFR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAKICAgICAgaWYgVHlwZSAhPSBuaWwgewogICAgICAgIGlmIFR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICAgIH0KICAgICAgICAKICAgICAgfQogICAgIAogICAgICByZXR1cm4gdHJ1ZQogICAgfQogIAogICAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZWFjaFBhdGgpCiAgCiAgICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgICBsZXQgcGF0aFN0ciA9IHBhdGgudG9TdHJpbmcoKQogICAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICAgIGxldCBwdWJQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKICAgICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCiAgCiAgICAgIGNvbGxlY3Rpb25zLmFwcGVuZCgKICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgIGlkOiBpZGVudGlmaWVyLAogICAgICAgIHBhdGg6IHB1YlBhdGgudG9TdHJpbmcoKSwKICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgICApCiAgICAgICkKICAgICAgCiAgICB9CgogICAgbGV0IGxlbiA9IGNvbGxlY3Rpb25zLmxlbmd0aAogICAgdmFyIGVuZE51biA9IGVuZAogICAgaWYgbGVuIDwgc3RhcnQgewogICAgICByZXR1cm4gW10KICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVuID0gbGVuCiAgICAgIH0KICAgIH0KICAgIAogICAgcmV0dXJuIGNvbGxlY3Rpb25zLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW4gKQogIH0=",
              "getUserCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIGFjY2VzcyhhbGwpIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBjb2xsZWN0aW9uUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGxldCBjb2xsZWN0aW9uczogW05GVENvbGxlY3Rpb25dID0gW10KCiAgZnVuIGVhY2hQYXRoKHBhdGg6IFN0b3JhZ2VQYXRoLCBUeXBlOiBUeXBlKTogQm9vbCB7CiAgIAogICAgaWYgVHlwZSAhPSBuaWwgewogICAgICBpZiBUeXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICBjb2xsZWN0aW9uUGF0aHMuYXBwZW5kKHBhdGgpCiAgICAgIH0KICAgICAgCiAgICB9CiAgIAogICAgcmV0dXJuIHRydWUKICB9CgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGVhY2hQYXRoKQoKICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgbGV0IHBhdGhTdHIgPSBwYXRoLnRvU3RyaW5nKCkKICAgIGxldCBzcGxpdEFyciA9IHBhdGhTdHIuc3BsaXQoc2VwYXJhdG9yOiAiLyIpCiAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICBsZXQgcHViUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCiAgICBsZXQgY29sbGVjdGlvbiA9ICBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJQYXRoKSEKCiAgICBjb2xsZWN0aW9ucy5hcHBlbmQoCiAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogcGF0aCkhLmlkZW50aWZpZXIsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogcGF0aCwgcHVibGljUGF0aDogcHViUGF0aCksCiAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICApCiAgICApCiAgICAKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5jYXBhYmlsaXRpZXMKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9",
              "sendNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1lbG9keVRpY2tldCBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgTkZUIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb206IE1lbG9keVRpY2tldC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5jYXBhYmlsaXRpZXMKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVyJ3MgY29sbGVjdGlvbiIpCgogICAgICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGRlcG9zaXRSZWYuZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICB9Cn0="
            },
            "contract": {
              "getContractByName": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgY29udHJhY3ROYW1lOiBTdHJpbmcpOiBTdHJpbmc/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgZGVwbG95ZWRDb250cmFjdCA9IGFjY291bnQuY29udHJhY3RzLmdldChuYW1lOiBjb250cmFjdE5hbWUpCgogIHJldHVybiBTdHJpbmcuZnJvbVVURjgoZGVwbG95ZWRDb250cmFjdD8uY29kZSEpCn0=",
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6ICZbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKLy8ga2V5IHdpbGwgYmUgJ0EuZjhkNmUwNTg2YjBhMjBjNy5Eb21haW5zLkNvbGxlY3Rpb24nIG9mIGEgTkZUIGNvbGxlY3Rpb24KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcsIGtleTogU3RyaW5nLCBpdGVtSWQ6IFVJbnQ2NCkgewp2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0KdmFyIGNvbGxlY3Rpb25SZWY6ICY8TkZUPi5Db2xsZWN0aW9uCnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKICAgIHZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfT8gPSBuaWwKICAgIGxldCBjb2xsZWN0aW9uUHJpdmF0ZSA9IGFjY291bnQuYm9ycm93PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHJpdmF0ZX0+KGZyb206IERvbWFpbnMuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA/PyBwYW5pYygiQ291bGQgbm90IGZpbmQgeW91ciBkb21haW4gY29sbGVjdGlvbiBjYXAiKQoKICAgIGxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCiAgICBpZiBpZCAhPW5pbCB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQoKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBhY2NvdW50Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pPz8gcGFuaWMoIkNhbiBub3QgYm9ycm93IGNvbGxlY3Rpb24iKQogICAgfSBlbHNlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGNvbGxlY3Rpb25SZWYhCiAgICB9Cgp9CmV4ZWN1dGUgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3TkZUKGtleToga2V5LCBpdGVtSWQ6IGl0ZW1JZCkpCn0KfQ==",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpOiBBZGRyZXNzPyB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldEFkZHJlc3NPZkRvbWFpbihuYW1lOiBuYW1lLCByb290OiByb290KQp9",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFN0cmluZ30gewogIHJldHVybiBEb21haW5VdGlscy5nZXREZWZhdWx0RG9tYWluc09mQWRkcmVzcyhhZGRyZXNzKQp9",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIGdldERldGFpbChuYW1lSGFzaDogU3RyaW5nKTogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IGFkZHJlc3MgPSBEb21haW5zLmdldFJlY29yZHMobmFtZUhhc2gpID8/IHBhbmljKCJEb21haW4gbm90IGV4aXN0IikKbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCmxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQp2YXIgZGV0YWlsOiBEb21haW5zLkRvbWFpbkRldGFpbD8gPSBuaWwKCmxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCmlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkISkKICAgIGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQp9CgpyZXR1cm4gZGV0YWlsCn0KCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQpyZXR1cm4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBuYW1lSGFzaCkKfQ==",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgbGV0IHJlY2lwaWVudFJlZiA9IHJlY2lwaWVudAogICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgIGlmIHJlY2lwaWVudFJlZiA9PSBuaWwgewogICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluIAogICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgfQogICAgbGV0IHR5cGVLZXkgPSBjb2xsZWN0aW9uUmVmLmdldFR5cGUoKS5pZGVudGlmaWVyCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCiAgICBpZiBkZWZhdWx0RG9tYWluIS5jaGVja0NvbGxlY3Rpb24oa2V5OiB0eXBlS2V5KSA9PSBmYWxzZSB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBkZWZhdWx0RG9tYWluIS5hZGRDb2xsZWN0aW9uKGNvbGxlY3Rpb246IDwtIGNvbGxlY3Rpb24pCiAgICB9CiAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0TkZUKGtleTogdHlwZUtleSwgdG9rZW46IDwtIG5mdCwgc2VuZGVyUmVmOiBzZW5kZXJSZWYgKQogICAgfSBlbHNlIHsKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
            },
            "evm": {
              "call": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkRGF0YTogU3RyaW5nLCBoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oQWRkcmVzcygweENPQSkpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCgogICAgbGV0IGNhbGxSZXN1bHQgPSBjb2EuY2FsbCgKICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgZGF0YTogaGV4RW5jb2RlZERhdGEuZGVjb2RlSGV4KCksCiAgICAgICAgZ2FzTGltaXQ6IDE1MDAwMDAwLCAvLyB0b2RvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBtYXggZm9yIG5vdwogICAgICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICkKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChjYWxsUmVzdWx0LmRhdGEpCn0K",
              "callContract": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKLy8vIFRyYW5zZmVycyAkRkxPVyBmcm9tIHRoZSBzaWduZXIncyBhY2NvdW50IENhZGVuY2UgRmxvdyBiYWxhbmNlIHRvIHRoZSByZWNpcGllbnQncyBoZXgtZW5jb2RlZCBFVk0gYWRkcmVzcy4KLy8vIE5vdGUgdGhhdCBhIENPQSBtdXN0IGhhdmUgYSAkRkxPVyBiYWxhbmNlIGluIEVWTSBiZWZvcmUgdHJhbnNmZXJyaW5nIHZhbHVlIHRvIGFub3RoZXIgRVZNIGFkZHJlc3MuCi8vLwp0cmFuc2FjdGlvbih0b0VWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGRhdGE6IFtVSW50OF0sIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIC8vIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VVdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiB0b0VWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHRvRVZNQWRkcmVzc0hleC5kZWNvZGVIZXgoKQoKICAgICAgICBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGlmIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcy5ieXRlcyA9PSBzZWxmLmNvYS5hZGRyZXNzKCkuYnl0ZXMgewogICAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKICAgICAgICBhc3NlcnQoY2FsbFJlc3VsdC5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiVHJhbnNmZXIgdG8gcmVjaXBpZW50IGZhaWxlZCIpCiAgICB9Cn0=",
              "callTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZERhdGE6IFN0cmluZywgaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZywgYWRkcmVzczogQWRkcmVzcyk6IFN0cmluZyB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCgogICAgbGV0IGNhbGxSZXN1bHQgPSBjb2EuY2FsbCgKICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgZGF0YTogaGV4RW5jb2RlZERhdGEuZGVjb2RlSGV4KCksCiAgICAgICAgZ2FzTGltaXQ6IDE1MDAwMDAwLCAvLyB0b2RvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBtYXggZm9yIG5vdwogICAgdmFsdWU6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGNhbGxSZXN1bHQuZGF0YSkKfQo=",
              "createAccountCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAg",
              "createCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKCi8vLyBDcmVhdGVzIGEgQ09BIGFuZCBzYXZlcyBpdCBpbiB0aGUgc2lnbmVyJ3MgRmxvdyBhY2NvdW50ICYgcGFzc2luZyB0aGUgZ2l2ZW4gdmFsdWUgb2YgRmxvdyBpbnRvIEZsb3dFVk0KdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgY29hIDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBjb2EuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coY29hLmJhbGFuY2UoKS5pbkZMT1coKSkKICAgICAgICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1jb2EsIHRvOiBzdG9yYWdlUGF0aCkKICAgICAgICBsZXQgYWRkcmVzc2FibGVDYXAgPSBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PihzdG9yYWdlUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnVucHVibGlzaChwdWJsaWNQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMucHVibGlzaChhZGRyZXNzYWJsZUNhcCwgYXQ6IHB1YmxpY1BhdGgpCiAgICB9Cn0=",
              "createCoaEmpty": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKCi8vLyBDcmVhdGVzIGEgQ09BIGFuZCBzYXZlcyBpdCBpbiB0aGUgc2lnbmVyJ3MgRmxvdyBhY2NvdW50ICYgcGFzc2luZyB0aGUgZ2l2ZW4gdmFsdWUgb2YgRmxvdyBpbnRvIEZsb3dFVk0KdHJhbnNhY3Rpb24oKSB7CiAgICBsZXQgYXV0aDogYXV0aChJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgY29hIDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1jb2EsIHRvOiBzdG9yYWdlUGF0aCkKICAgICAgICBsZXQgYWRkcmVzc2FibGVDYXAgPSBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PihzdG9yYWdlUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnVucHVibGlzaChwdWJsaWNQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMucHVibGlzaChhZGRyZXNzYWJsZUNhcCwgYXQ6IHB1YmxpY1BhdGgpCiAgICB9Cn0=",
              "createCoaEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKCi8vLyBDcmVhdGVzIGEgQ09BIGFuZCBzYXZlcyBpdCBpbiB0aGUgc2lnbmVyJ3MgRmxvdyBhY2NvdW50ICYgcGFzc2luZyB0aGUgZ2l2ZW4gdmFsdWUgb2YgRmxvdyBpbnRvIEZsb3dFVk0KdHJhbnNhY3Rpb24oKSB7CiAgICBsZXQgYXV0aDogYXV0aChJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgY29hIDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1jb2EsIHRvOiBzdG9yYWdlUGF0aCkKICAgICAgICBsZXQgYWRkcmVzc2FibGVDYXAgPSBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PihzdG9yYWdlUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnVucHVibGlzaChwdWJsaWNQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMucHVibGlzaChhZGRyZXNzYWJsZUNhcCwgYXQ6IHB1YmxpY1BhdGgpCiAgICB9Cn0=",
              "createCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "deployContract": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKCnRyYW5zYWN0aW9uKGNvZGU6IFN0cmluZykgewogICAgbGV0IGNvYTogYXV0aChFVk0uRGVwbG95KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkRlcGxveSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0pID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICBzZWxmLmNvYS5kZXBsb3koY29kZTogY29kZS5kZWNvZGVIZXgoKSwgIGdhc0xpbWl0OiAxNTAwMDAwMCwgdmFsdWU6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKSkKICAgIH0KfQo=",
              "estimateGas": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkVHg6IFN0cmluZywgYWRkcmVzczogQWRkcmVzcyk6IFtVSW50NjQ7IDJdIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgbGV0IHR4UmVzdWx0ID0gRVZNLnJ1bih0eDogaGV4RW5jb2RlZFR4LmRlY29kZUhleCgpLCBjb2luYmFzZTogY29hLmFkZHJlc3MoKSkKCiAgICByZXR1cm4gW3R4UmVzdWx0LmVycm9yQ29kZSwgdHhSZXN1bHQuZ2FzVXNlZF0KfQo=",
              "estimateGasTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkVHg6IFN0cmluZywgYWRkcmVzczogQWRkcmVzcyk6IFtVSW50NjQ7IDJdIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgbGV0IHR4UmVzdWx0ID0gRVZNLnJ1bih0eDogaGV4RW5jb2RlZFR4LmRlY29kZUhleCgpLCBjb2luYmFzZTogY29hLmFkZHJlc3MoKSkKCiAgICByZXR1cm4gW3R4UmVzdWx0LmVycm9yQ29kZSwgdHhSZXN1bHQuZ2FzVXNlZF0KfQo=",
              "fundCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgoKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICAgICAgc2VsZi5jb2EgPSBjb2EKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "fundCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKICAgIGxldCBjb2E6ICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCgogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgICAgICBzZWxmLmNvYSA9IGNvYQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuY29hLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "fundEvmAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oZXZtQWRkcjogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KDxUb2tlblJlY2VpdmVyUGF0aD4pIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
              "fundEvmAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIC8vIGxldCBhZGRyZXNzQnl0ZXM6IFtVSW50ODsgMjBdCiAgICBsZXQgYWRkcmVzczogRVZNLkVWTUFkZHJlc3MKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIAogICAgICAgIGxldCBhZGRyZXNzQnl0ZXMgPSAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDIsIDIzOSwgMTU1LCA3LCA1MCwgMjM4LCAxNzAsIDEwMSwgMjIwXQogICAgICAgIC8vIHNlbGYuYWRkcmVzc0J5dGVzID0gIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAyLCAyMzksIDE1NSwgNywgNTAsIDIzOCwgMTcwLCAxMDEsIDIyMF0KCiAgICAgICAgc2VsZi5hZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBJbnRlcm5hbEVWTS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQsIHRvOiBzZWxmLmFkZHJlc3MuYnl0ZXMpCgogICAgfQp9",
              "getAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZmxvd0FkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmc/IHsKICAgIGlmIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IGdldEF1dGhBY2NvdW50PGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50PihmbG93QWRkcmVzcykKICAgICAgICAuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pPy5hZGRyZXNzKCkgewogICAgICAgIGxldCBieXRlczogW1VJbnQ4XSA9IFtdCiAgICAgICAgZm9yIGJ5dGUgaW4gYWRkcmVzcy5ieXRlcyB7CiAgICAgICAgICAgIGJ5dGVzLmFwcGVuZChieXRlKQogICAgICAgIH0KICAgICAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChieXRlcykKICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLmJhbGFuY2UoKS5pbkF0dG9GTE9XKCkKfQo=",
              "getBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gYWRkcmVzcy5iYWxhbmNlKCkuaW5BdHRvRkxPVygpCn0K",
              "getCoaAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICBsZXQgY29hQWRkciA9IGNvYS5hZGRyZXNzKCkgCgogICAgbGV0IGFkZHJCeXRlOiBbVUludDhdID0gW10KCiAgICBmb3IgYnl0ZSBpbiBjb2FBZGRyLmJ5dGVzIHsKICAgICAgICBhZGRyQnl0ZS5hcHBlbmQoYnl0ZSkKICAgIH0KCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyQnl0ZSkKfQo=",
              "getCoaAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFN0cmluZyB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgbGV0IGNvYUFkZHIgPSBjb2EuYWRkcmVzcygpIAoKICAgIGxldCBhZGRyQnl0ZTogW1VJbnQ4XSA9IFtdCgogICAgZm9yIGJ5dGUgaW4gY29hQWRkci5ieXRlcyB7CiAgICAgICAgYWRkckJ5dGUuYXBwZW5kKGJ5dGUpCiAgICB9CgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkckJ5dGUpCn0K",
              "getCoaBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgcmV0dXJuIGNvYS5iYWxhbmNlKCkuaW5GTE9XKCkKfQo=",
              "getCoaBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAKICAgIHJldHVybiBjb2EuYmFsYW5jZSgpLmluRkxPVygpCn0K",
              "getCode": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkcmVzcy5jb2RlKCkpCn0K",
              "getCodeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFN0cmluZyB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJlc3MuY29kZSgpKQp9Cg==",
              "getNonce": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludDY0IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3Mubm9uY2UoKQp9Cg==",
              "getNonceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQ2NCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLm5vbmNlKCkKfQo=",
              "newAccountAndCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "newAccountAndCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKHB1YmxpY0tleTogU3RyaW5nLCBzaWduYXR1cmVBbGdvcml0aG06IFVJbnQ4LCBoYXNoQWxnb3JpdGhtOiBVSW50OCwgd2VpZ2h0OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXksIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwgd2VpZ2h0OiB3ZWlnaHQpCgkJCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wMDA1KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQogICAgICAgIGFjY291bnQuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coYWNjb3VudC5iYWxhbmNlKCkpCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0K",
              "newAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "run": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihoZXhFbmNvZGVkVHg6IFN0cmluZykgewogICAgbGV0IGNvYTogJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IHR4UmVzdWx0ID0gRVZNLnJ1bih0eDogaGV4RW5jb2RlZFR4LmRlY29kZUhleCgpLCBjb2luYmFzZTogc2VsZi5jb2EuYWRkcmVzcygpKQogICAgICAgIC8vIHRvZG8gb25seSB0ZW1wb3JhcnkgdW50aWwgd2UgY29ycmVjdGx5IGhhbmRsZSBmYWlsdXJlIGV2ZW50cwogICAgICAgIGFzc2VydCgKICAgICAgICAgICAgdHhSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwKICAgICAgICAgICAgbWVzc2FnZTogImZhaWxlZCB0byBleGVjdXRlIGV2bSB0cmFuc2FjdGlvbjogIi5jb25jYXQodHhSZXN1bHQuZXJyb3JDb2RlLnRvU3RyaW5nKCkpCiAgICAgICAgKQogICAgfQp9Cg==",
              "runTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24oaGV4VHJ4RGF0YTogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBFVk0ucnVuKAogICAgICAgICAgICB0eDogaGV4VHJ4RGF0YS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgY29pbmJhc2U6IHNlbGYuY29hLmFkZHJlc3MoKQogICAgICAgICkgCgogICAgfQp9Cg==",
              "transferCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSBjb2Eud2l0aGRyYXcoYmFsYW5jZTogRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IFVJbnQoYW1vdW50KSAqIDEwMDAwMDAwMDAwMDAwMDAwMCkpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "transferCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgcmV2aWV2ZXI6IEFkZHJlc3MpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgbGV0IHJldmlldmVyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQ+KHJldmlldmVyKQogICAgICAgIC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICAKICAgICAgICByZXZpZXZlci5kZXBvc2l0KGZyb206IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogVUludChhbW91bnQpICogMTAwMDAwMDAwMDAwMDAwMDAwKSkgYXMhIEBGbG93VG9rZW4uVmF1bHQpCgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgCiAgICB9Cn0K",
              "transferFlowFromCoaToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAgICAgbGV0IHdpdGhkcmF3QmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHdpdGhkcmF3QmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSBjb2Eud2l0aGRyYXcoYmFsYW5jZTogd2l0aGRyYXdCYWxhbmNlKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "transferFlowFromCoaToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAgICAgbGV0IHdpdGhkcmF3QmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHdpdGhkcmF3QmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSBjb2Eud2l0aGRyYXcoYmFsYW5jZTogd2l0aGRyYXdCYWxhbmNlKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "transferFlowToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKLy8vIFRyYW5zZmVycyAkRkxPVyBmcm9tIHRoZSBzaWduZXIncyBhY2NvdW50IENhZGVuY2UgRmxvdyBiYWxhbmNlIHRvIHRoZSByZWNpcGllbnQncyBoZXgtZW5jb2RlZCBFVk0gYWRkcmVzcy4KLy8vIE5vdGUgdGhhdCBhIENPQSBtdXN0IGhhdmUgYSAkRkxPVyBiYWxhbmNlIGluIEVWTSBiZWZvcmUgdHJhbnNmZXJyaW5nIHZhbHVlIHRvIGFub3RoZXIgRVZNIGFkZHJlc3MuCi8vLwp0cmFuc2FjdGlvbihyZWNpcGllbnRFVk1BZGRyZXNzSGV4OiBTdHJpbmcsIGFtb3VudDogVUZpeDY0LCBnYXNMaW1pdDogVUludDY0KSB7CgogICAgbGV0IGNvYTogYXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCByZWNpcGllbnRFVk1BZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwogICAgdmFyIHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogL3N0b3JhZ2UvZXZtKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKSwgdG86IC9zdG9yYWdlL2V2bSkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBicmlkZ2VkIGFjY291bnQiKQoKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CgogICAgICAgIC8vIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VVdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiByZWNpcGllbnRFVk1BZGRyZXNzSGV4KQogICAgICAgIC8vICAgICA/PyBwYW5pYygiSW52YWxpZCByZWNpcGllbnQgRVZNIGFkZHJlc3MiKQogICAgICAgIHZhciBhZGRyZXNzQnl0ZXM6IFtVSW50OF0gPSByZWNpcGllbnRFVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgICAgIAogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB2YWx1ZUJhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLAogICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQogICAgICAgIGFzc2VydChjYWxsUmVzdWx0LnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJUcmFuc2ZlciB0byByZWNpcGllbnQgZmFpbGVkIikKICAgIH0KfQ==",
              "transferFlowToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "withdrawCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIGxldCB3aXRoZHJhd0JhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB3aXRoZHJhd0JhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IHdpdGhkcmF3QmFsYW5jZSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "withdrawCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgppbXBvcnQgRVZNIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICAgICAgbGV0IHdpdGhkcmF3QmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHdpdGhkcmF3QmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSBjb2Eud2l0aGRyYXcoYmFsYW5jZTogd2l0aGRyYXdCYWxhbmNlKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K"
            },
            "ft": {
              "addToken": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&<Token>.Vault>(from: <TokenStoragePath> ) == nil {\n            signer.storage.save(<- <Token>.createEmptyVault(vaultType: Type<@<Token>.Vault>()), to: <TokenStoragePath>)\n        }\n\n        if signer.capabilities.exists(<TokenReceiverPath>) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(receiverCapability, at: <TokenReceiverPath>)\n        \n        }\n       \n        if signer.capabilities.exists(<TokenBalancePath>) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(balanceCapability, at: <TokenBalancePath>)\n        }\n    \n    }\n}",
              "enableTokenStorage": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&<Token>.Vault>(from: <TokenStoragePath> ) == nil {\n            signer.storage.save(<- <Token>.createEmptyVault(vaultType: Type<@<Token>.Vault>()), to: <TokenStoragePath>)\n        }\n\n        if signer.capabilities.exists(<TokenReceiverPath>) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(receiverCapability, at: <TokenReceiverPath>)\n        \n        }\n       \n        if signer.capabilities.exists(<TokenBalancePath>) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&<Token>.Vault>(<TokenStoragePath>)\n            signer.capabilities.publish(balanceCapability, at: <TokenBalancePath>)\n        }\n    \n    }\n}",
              "enableTokenStorageTest": "import FungibleToken from 0xee82856bf20e2aa6\nimport FlowToken from 0x0ae53cb6e3f42a79\n\ntransaction {\n\n    prepare(signer: auth(Storage, Capabilities) &Account) {\n\n        if signer.storage.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault ) == nil {\n            signer.storage.save(<- FlowToken.createEmptyVault(), to: /storage/flowTokenVault)\n        }\n\n        if signer.capabilities.exists(/public/flowTokenReceiver) == false {\n            let receiverCapability = signer.capabilities.storage.issue<&FlowToken.Vault>(/storage/flowTokenVault)\n            signer.capabilities.publish(receiverCapability, at: /public/flowTokenReceiver)\n        \n        }\n       \n        if signer.capabilities.exists(/public/flowTokenBalance) == false {\n            let balanceCapability = signer.capabilities.storage.issue<&FlowToken.Vault>(/storage/flowTokenVault)\n            signer.capabilities.publish(balanceCapability, at: /public/flowTokenBalance)\n        }\n    \n    }\n}",
              "transferEvmTokens": "import EVM from 0xEVM\n\n/// Transfers $FLOW from the signer's account Cadence Flow balance to the recipient's hex-encoded EVM address.\n/// Note that a COA must have a $FLOW balance in EVM before transferring value to another EVM address.\n///\ntransaction(toEVMAddressHex: String, amount: UInt256, gasLimit: UInt64) {\n\n    let coa: auth(EVM.Withdraw, EVM.Call) &EVM.CadenceOwnedAccount\n    let recipientEVMAddress: EVM.EVMAddress\n\n    prepare(signer: auth(BorrowValue, SaveValue) &Account) {\n        if signer.storage.type(at: /storage/evm) == nil {\n            signer.storage.save(<-EVM.createCadenceOwnedAccount(), to: /storage/evm)\n        }\n        self.coa = signer.storage.borrow<auth(EVM.Withdraw, EVM.Call) &EVM.CadenceOwnedAccount>(from: /storage/evm)\n            ?? panic(\"Could not borrow reference to the signer's bridged account\")\n\n        var addressBytes: [UInt8] = toEVMAddressHex.decodeHex()\n\n        self.recipientEVMAddress = EVM.EVMAddress(bytes: [\n            addressBytes[0], addressBytes[1], addressBytes[2], addressBytes[3],\n            addressBytes[4], addressBytes[5], addressBytes[6], addressBytes[7],\n            addressBytes[8], addressBytes[9], addressBytes[10], addressBytes[11],\n            addressBytes[12], addressBytes[13], addressBytes[14], addressBytes[15],\n            addressBytes[16], addressBytes[17], addressBytes[18], addressBytes[19]\n        ])\n    }\n\n    execute {\n        // if self.recipientEVMAddress.bytes == self.coa.address().bytes {\n        //     return\n        // }\n        let data = \"\"\n        let callResult = self.coa.call(\n            to: self.recipientEVMAddress,\n            data: data,\n            gasLimit: gasLimit,\n            value: valueBalance\n        )\n        assert(callResult.status == EVM.Status.successful, message: \"Transfer to recipient failed\")\n    }\n}",
              "transferFlowTest": "import FungibleToken from 0xa0225e7000ac82a9\nimport ExampleToken from 0x9f749ae0417287cb\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &ExampleToken.Vault>(from: /storage/exampleTokenVault)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(/public/exampleTokenReceiver)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "transferTokens": "import FungibleToken from 0xFungibleToken\nimport <Token> from <TokenAddress>\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &<Token>.Vault>(from: <TokenStoragePath>)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(<TokenReceiverPath>)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "transferTokensTest": "import FungibleToken from 0xa0225e7000ac82a9\nimport ExampleToken from 0x9f749ae0417287cb\n\ntransaction(amount: UFix64, recipient: Address) {\n\n    // The Vault resource that holds the tokens that are being transfered\n    let sentVault: @{FungibleToken.Vault}\n\n    prepare(signer: auth(Storage, BorrowValue) &Account) {\n         // Get a reference to the signer's stored vault\n        let vaultRef = signer.storage.borrow<auth(FungibleToken.Withdraw) &ExampleToken.Vault>(from: /storage/exampleTokenVault)\n            ?? panic(\"Could not borrow reference to the owner's Vault!\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: amount)\n    }\n\n    execute {\n        // Get the recipient's public account object\n        let recipientAccount = getAccount(recipient)\n\n        // Get a reference to the recipient's Receiver\n        let receiverRef = recipientAccount.capabilities.borrow<&{FungibleToken.Receiver}>(/public/exampleTokenReceiver)!\n            \n        // Deposit the withdrawn tokens in the recipient's receiver\n        receiverRef.deposit(from: <-self.sentVault)\n    }\n}",
              "isTokenListEnabled": "CiAgICAvLyBGbG93IFdhbGxldCAtIHYxLjc3CiAgICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikKCiAgICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlICAgICAgCgogICAgICAgcmV0dXJuIGZsYWcKICAgIH0KICAgIAoKICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDoge1N0cmluZzogQm9vbH0gewogICAgICByZXR1cm4gewogICAgIkEuN2U2MGRmMDQyYTljMDg2OC5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgIH0KICAgIH0KICA=",
              "getTokenListBalance": "CiAgICAvLyBGbG93IFdhbGxldCAtIHYxLjc3CiAgICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0Zsb3dUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkgPz8gbmlsCiAgICAgIAogICAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIAogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgICB9CiAgICAgIAogICAgICByZXR1cm4gMC4wCiAgICAgIAogICAgfQogICAgCgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiB7U3RyaW5nOiBVRml4NjR9IHsKICAgICAgcmV0dXJuIHsKICAgICAgIkEuN2U2MGRmMDQyYTljMDg2OC5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA=="
            },
            "hybridCustody": {
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFRva2VuSW5mbyB7CnB1YiBsZXQgaWQ6IFN0cmluZwpwdWIgbGV0IGJhbGFuY2U6IFVGaXg2NAoKaW5pdChpZDogU3RyaW5nLCBiYWxhbmNlOiBVRml4NjQpIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQp9Cn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IFtUb2tlbkluZm9dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICB2YXIgY29pbkluZm9MaXN0OiBbVG9rZW5JbmZvXSA9IFtdCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvaW5JbmZvTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiBjb2luSW5mb0xpc3QKfQo=",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFtVSW50NjRdfSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIG5mdHMKfQ==",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNvbGxlY3Rpb25MaXN0OiBbTkZUQ29sbGVjdGlvbl0gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBzY3JpcHQgeW91IGNhbiBleGVjdXRlIG9uIEZsb3cgTmV0d29yawppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiB7U3RyaW5nOiBbVUludDY0XX19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKICAgIHZhciBhY2Nlc3NpYmxlTkZUczoge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIGFjY2Vzc2libGVORlRzW2FkZHJlc3NdID0gbmZ0cwogICAgfQogICAgcmV0dXJuIGFjY2Vzc2libGVORlRzCn0=",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFVGaXg2NH0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRCYWxhbmNlcy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIHZhdWx0LmJhbGFuY2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgCiAgICByZXR1cm4gdmF1bHRCYWxhbmNlcwp9",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgcmV0dXJuIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9Cg==",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiB7QWRkcmVzczogQW55U3RydWN0fSB7CmxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQpsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBjID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBub3QgZm91bmQiKQogICAgbGV0IGQgPSBjLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKQogICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQp9CnJldHVybiBkYXRhCn0=",
              "getChildAccountNFT": "",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnRyYW5zYWN0aW9uKGNoaWxkOiBBZGRyZXNzKSB7CiAgICBwcmVwYXJlIChhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgbWFuYWdlci5yZW1vdmVDaGlsZChhZGRyOiBjaGlsZCkKICAgIH0KfQ=="
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "checkSetupTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gRGV0ZXJtaW5lcyBpZiBhbiBhY2NvdW50IGlzIHNldCB1cCB3aXRoIGEgU3Rha2luZyBDb2xsZWN0aW9uCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICByZXR1cm4gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlZ2lzdGVycyBhIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uIHJlc291cmNlCi8vLyBmb3IgdGhlIHNwZWNpZmllZCBub2RlSUQgYW5kIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGNvbW1pdAoKdHJhbnNhY3Rpb24oaWQ6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVnaXN0ZXJEZWxlZ2F0b3Iobm9kZUlEOiBpZCwgYW1vdW50OiBhbW91bnQpICAgICAgCiAgICB9Cn0=",
              "createDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6ICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VOZXdUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "createStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjphdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgLyA3LjAgKiAzNjUuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
              "getAprTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getDelegatesInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgpwdWIgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBwdWIgbGV0IGRlbGVnYXRvcklEOiBVSW50MzIKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgcHViIGxldCByZXN0YWthYmxlVW5zdGFrZWRUb2tlbnM6IFVGaXg2NAoKICAgIGluaXQoZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8pIHsKICAgICAgICBzZWxmLmRlbGVnYXRvcklEID0gZGVsZWdhdG9ySW5mby5pZAogICAgICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgICAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCiAgICAgICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9ySW5mby5ub2RlSUQpCiAgICAgICAgc2VsZi5kZWxlZ2F0ZWROb2RlSW5mbyA9IG5vZGVJbmZvCiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYudW5zdGFrYWJsZVRva2VucyA9IHNlbGYudG9rZW5zU3Rha2VkICsgc2VsZi50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
              "getDelegatesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCi8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
              "getDelegatorInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YT8gewogIHJldHVybiBGbG93RXBvY2guZ2V0RXBvY2hNZXRhZGF0YShlcG9jaENvdW50ZXIpCn0=",
              "getEpochMetadataTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihlcG9jaENvdW50ZXI6IFVJbnQ2NCk6IEZsb3dFcG9jaC5FcG9jaE1ldGFkYXRhPyB7CiAgcmV0dXJuIEZsb3dFcG9jaC5nZXRFcG9jaE1ldGFkYXRhKGVwb2NoQ291bnRlcikKfQ==",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihub2RlSUQ6IFN0cmluZyk6IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKfQ==",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgcHViIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgcHViIHZhciBkZWxlZ2F0ZUNvdW50OiBVSW50NjQKCiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBpbml0KGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSwgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dKSB7CgogICAgICAgIHNlbGYubm9kZUNvdW50ID0gVUludDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gVUludDY0KDApCgogICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgICAgIHNlbGYubm9kZUNvdW50ID0gc2VsZi5ub2RlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgICAgIGZvciBkZWxlZ2F0ZUluZm8gaW4gYWxsRGVsZWdhdGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gc2VsZi5kZWxlZ2F0ZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
              "getNodesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgYWNjZXNzKGFsbCkgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVDb3VudDogVUludDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgaW5pdChhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10sIGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSkgewoKICAgICAgICBzZWxmLm5vZGVDb3VudCA9IFVJbnQ2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IFVJbnQ2NCgwKQoKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgICAgICBzZWxmLm5vZGVDb3VudCA9IHNlbGYubm9kZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgICAgICBmb3IgZGVsZWdhdGVJbmZvIGluIGFsbERlbGVnYXRlSW5mbyB7CiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IHNlbGYuZGVsZWdhdGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
              "getStakeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
              "getStakingInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "restakeRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgdW5zdGFrZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gc2V0cyB1cCBhbiBhY2NvdW50IHRvIHVzZSBhIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gSXQgd2lsbCB3b3JrIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgYSByZWd1bGFyIGFjY291bnQsIGEgdHdvLWFjY291bnQgbG9ja2VkIHRva2VucyBzZXR1cCwKLy8vIG9yIHN0YWtpbmcgb2JqZWN0cyBzdG9yZWQgaW4gdGhlIHVubG9ja2VkIGFjY291bnQKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPT0gbmlsIHsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBwcml2YXRlIGNhcGFiaWxpdGllcyBmb3IgdGhlIHRva2VuIGhvbGRlciBhbmQgdW5sb2NrZWQgdmF1bHQKICAgICAgICAgICAgbGV0IGxvY2tlZEhvbGRlciA9IHNpZ25lci5saW5rPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KC9wcml2YXRlL2Zsb3dUb2tlbkhvbGRlciwgdGFyZ2V0OiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIubGluazwmRmxvd1Rva2VuLlZhdWx0PigvcHJpdmF0ZS9mbG93VG9rZW5WYXVsdCwgdGFyZ2V0OiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBuaWwpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBsaW5rIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICAgICAgc2lnbmVyLmxpbms8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgICAgIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY1BhdGgsCiAgICAgICAgICAgICAgICB0YXJnZXQ6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBzdGFraW5nIGNvbGxlY3Rpb24gcmVmZXJlbmNlIikKCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBub2RlIHN0YWtlciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3IgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
              "setupTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gVGhpcyB0cmFuc2FjdGlvbiBzZXRzIHVwIGFuIGFjY291bnQgdG8gdXNlIGEgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBJdCB3aWxsIHdvcmsgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgaGF2ZSBhIHJlZ3VsYXIgYWNjb3VudCwgYSB0d28tYWNjb3VudCBsb2NrZWQgdG9rZW5zIHNldHVwLAovLy8gb3Igc3Rha2luZyBvYmplY3RzIHN0b3JlZCBpbiB0aGUgdW5sb2NrZWQgYWNjb3VudAoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdywgTG9ja2VkVG9rZW5zLlRva2VuT3BlcmF0aW9ucykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBsZXQgZmxvd1Rva2VuID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpIQogICAgICAgICAgICAKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IFN0YWtpbmcgQ29sbGVjdGlvbiBhbmQgcHV0IGl0IGluIHN0b3JhZ2UKICAgICAgICAgICAgaWYgbG9ja2VkSG9sZGVyLmNoZWNrKCkgewogICAgICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IG5pbCksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGxpbmsgdG8gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgICAgICAvLyBzaWduZXIubGluazwme0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KAogICAgICAgICAgICAvLyAgICAgRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCwKICAgICAgICAgICAgLy8gICAgIHRhcmdldDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgLy8gKQogICAgICAgICAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PihGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHN0YWtpbmdDb2xsZWN0aW9uQ2FwLCBhdDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgbm9kZSA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGREZWxlZ2F0b3JPYmplY3QoPC1kZWxlZ2F0b3IpCiAgICAgICAgfQogICAgfQp9",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZVTkdJQkxFVE9LRU5BRERSRVNTCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZMT1dUT0tFTkFERFJFU1MKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TE9DS0VEVE9LRU5BRERSRVNTCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ==",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgcmV3YXJkZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4gKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCh2YXVsdFR5cGU6IFR5cGU8QDxUb2tlbj4uVmF1bHQ+KCkpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgIH0KCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuUmVjZWl2ZXJQYXRoPikgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXBhYmlsaXR5ID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCY8VG9rZW4+LlZhdWx0Pig8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcGFiaWxpdHksIGF0OiA8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgICAgIAogICAgICAgIH0KICAgICAgIAogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlbkJhbGFuY2VQYXRoPikgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgYmFsYW5jZUNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGJhbGFuY2VDYXBhYmlsaXR5LCBhdDogPFRva2VuQmFsYW5jZVBhdGg+KQogICAgICAgIH0KICAgIAogICAgfQp9",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getBasicPublicItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgaW5pdChhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIHRhcmdldFBhdGg6IFN0cmluZz8pIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKCiAgZnVuIGVhY2hQYXRoKHBhdGg6IFB1YmxpY1BhdGgsIGNhcFR5cGU6IFR5cGUpOiBCb29sIHsKICAgIC8vIHRvZG8KICAgIGxldCBjYXAgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5nZXQ8JkFueVN0cnVjdD4ocGF0aCkKICAgIHZhciB0YXJnZXRQYXRoID0gIiIKCiAgICBpZiBjYXAgIT0gbmlsIHsKICAgICAgdGFyZ2V0UGF0aCA9ICIxMiIgCiAgICB9CiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0KICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFB1YmxpYyhlYWNoUGF0aCkKCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aAogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPrivateItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgYWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHR5cGU6IFR5cGUKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHJpdmF0ZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHJpdmF0ZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnByaXZhdGVQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicItemTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiBmYWxzZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQoKICBwdWIgbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgcHViIGxldCBpc0NvbGxlY3Rpb25DYXA6IEJvb2wKICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQoKICBwdWIgbGV0IGlzQmFsYW5jZUNhcDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/LCAKICAgIGlzQ29sbGVjdGlvbkNhcDogQm9vbCwgCiAgICB0b2tlbklEczogW1VJbnQ2NF0sCiAgICBpc0JhbGFuY2VDYXA6IEJvb2wsCiAgICBiYWxhbmNlOiBVRml4NjQ/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgICBzZWxmLmlzQ29sbGVjdGlvbkNhcCA9IGlzQ29sbGVjdGlvbkNhcAogICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICBzZWxmLmlzQmFsYW5jZUNhcCA9IGlzQmFsYW5jZUNhcAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhNYXA6IHtTdHJpbmc6IEJvb2x9KTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KICBsZXQgYmFsYW5jZUNhcFR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj4oKQoKICBhY2NvdW50LmZvckVhY2hQdWJsaWMoZnVuIChwYXRoOiBQdWJsaWNQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgdmFyIGlzQ29sbGVjdGlvbkNhcCA9IGZhbHNlCiAgICB2YXIgaXNCYWxhbmNlQ2FwID0gZmFsc2UKICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBiYWxhbmNlQ2FwVHlwZSkpIHsKICAgICAgaXNCYWxhbmNlQ2FwID0gdHJ1ZQogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKCiAgICAgIGlmIGxldCB2YXVsdCA9IHZhdWx0UmVmIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdC5iYWxhbmNlCiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSkgewogICAgICBpc0NvbGxlY3Rpb25DYXAgPSB0cnVlCiAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvblJlZiB7CiAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgIH0KICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCwKICAgICAgaXNDb2xsZWN0aW9uQ2FwOiBpc0NvbGxlY3Rpb25DYXAsCiAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgaXNCYWxhbmNlQ2FwOiBpc0JhbGFuY2VDYXAsCiAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHVibGljUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQdWJsaWNQYXRoXSA9IFtdCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RvcmFnZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnN0b3JhZ2VQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getStoredItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CgpwdWIgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBwdWIgbGV0IG5hbWU6IFN0cmluZwogIHB1YiBsZXQgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICB9Cn0KCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKICBwdWIgbGV0IGlzUmVzb3VyY2U6IEJvb2wKICBwdWIgbGV0IGlzTkZUQ29sbGVjdGlvbjogQm9vbAogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCB0b2tlbklEczogW1VJbnQ2NF0KICBwdWIgbGV0IGlzVmF1bHQ6IEJvb2wKICBwdWIgbGV0IGJhbGFuY2U6IFVGaXg2ND8KCiAgaW5pdChhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIHR5cGU6IFR5cGUsIGlzUmVzb3VyY2U6IEJvb2wsIAogICAgaXNORlRDb2xsZWN0aW9uOiBCb29sLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sCiAgICB0b2tlbklEczogW1VJbnQ2NF0sIGlzVmF1bHQ6IEJvb2wsIGJhbGFuY2U6IFVGaXg2ND8pIHsKICAgICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYudHlwZSA9IHR5cGUKICAgICAgc2VsZi5pc1Jlc291cmNlID0gaXNSZXNvdXJjZQogICAgICBzZWxmLmlzTkZUQ29sbGVjdGlvbiA9IGlzTkZUQ29sbGVjdGlvbgogICAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICAgIHNlbGYudG9rZW5JRHMgPSB0b2tlbklEcwogICAgICBzZWxmLmlzVmF1bHQgPSBpc1ZhdWx0CiAgICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWRlbnRpZmllcnM6IFtTdHJpbmddKTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IHZhdWx0VHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIGlkZW50aWZpZXIgaW4gcGF0aElkZW50aWZpZXJzIHsKICAgIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIAogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiBpc05GVENvbGxlY3Rpb24gewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXNWYXVsdCA9IHR5cGUuaXNTdWJ0eXBlKG9mOiB2YXVsdFR5cGUpIAogICAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAogICAgICBpZiBpc1ZhdWx0IHsKICAgICAgICBpZiBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0UmVmLmJhbGFuY2UKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgIGlzUmVzb3VyY2U6IGlzUmVzb3VyY2UsCiAgICAgICAgaXNORlRDb2xsZWN0aW9uOiBpc05GVENvbGxlY3Rpb24sCiAgICAgICAgZGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXksCiAgICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICAgIGlzVmF1bHQ6IGlzVmF1bHQsCiAgICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgICApCgogICAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIH0KICB9CgogIHJldHVybiBpdGVtcwp9",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlSZXNvdXJjZT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55UmVzb3VyY2U+KGZyb206IHBhdGgpCn0=",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlTdHJ1Y3Q/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVN0cnVjdD4oZnJvbTogcGF0aCkKfQ=="
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZCBmcm9tIDB4RnVuZ2libGVUb2tlblN3aXRjaGJvYXJkCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFN3aXRjaGJvYXJkSW5mbyB7CiAgcHViIGxldCB2YXVsdFR5cGVzOiBbVHlwZV0KCiAgaW5pdCh2YXVsdFR5cGVzOiBbVHlwZV0pIHsKICAgIHNlbGYudmF1bHRUeXBlcyA9IHZhdWx0VHlwZXMKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3dpdGNoYm9hcmRJbmZvPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGlmIGxldCBib2FyZCA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3dpdGNoYm9hcmQ+KGZyb206IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5TdG9yYWdlUGF0aCkgewogICAgbGV0IHR5cGVzID0gYm9hcmQuZ2V0VmF1bHRUeXBlcygpCiAgICByZXR1cm4gU3dpdGNoYm9hcmRJbmZvKHZhdWx0VHlwZXM6IHR5cGVzKQogIH0KICByZXR1cm4gbmlsCn0="
            },
            "temp": {
              "mintNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0LW1pZ3JhdGlvbiBTY3JpcHQgLSB2MS43NwogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgLy8vIFRoaXMgc2NyaXB0IHVzZXMgdGhlIE5GVE1pbnRlciByZXNvdXJjZSB0byBtaW50IGEgbmV3IE5GVAovLy8gSXQgbXVzdCBiZSBydW4gd2l0aCB0aGUgYWNjb3VudCB0aGF0IGhhcyB0aGUgbWludGVyIHJlc291cmNlCi8vLyBzdG9yZWQgaW4gL3N0b3JhZ2UvTkZUTWludGVyCgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCnRyYW5zYWN0aW9uKAogICAgcmVjaXBpZW50OiBBZGRyZXNzLAogICAgbmFtZTogU3RyaW5nLAogICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgIHRodW1ibmFpbDogU3RyaW5nLAogICAgY3V0czogW1VGaXg2NF0sCiAgICByb3lhbHR5RGVzY3JpcHRpb25zOiBbU3RyaW5nXSwKICAgIHJveWFsdHlCZW5lZmljaWFyaWVzOiBbQWRkcmVzc10KKSB7CgogICAgLy8vIGxvY2FsIHZhcmlhYmxlIGZvciBzdG9yaW5nIHRoZSBtaW50ZXIgcmVmZXJlbmNlCiAgICBsZXQgbWludGVyOiAmRXhhbXBsZU5GVC5ORlRNaW50ZXIKCiAgICAvLy8gUmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRDb2xsZWN0aW9uUmVmOiAme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiVmlld1Jlc29sdmVyIGRvZXMgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlRNaW50ZXIgcmVzb3VyY2UgaW4gc3RvcmFnZQogICAgICAgIHNlbGYubWludGVyID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFeGFtcGxlTkZULk5GVE1pbnRlcj4oZnJvbTogRXhhbXBsZU5GVC5NaW50ZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkFjY291bnQgZG9lcyBub3Qgc3RvcmUgYW4gb2JqZWN0IGF0IHRoZSBzcGVjaWZpZWQgcGF0aCIpCgogICAgICAgIC8vIEJvcnJvdyB0aGUgcmVjaXBpZW50J3MgcHVibGljIE5GVCBjb2xsZWN0aW9uIHJlZmVyZW5jZQogICAgICAgIHNlbGYucmVjaXBpZW50Q29sbGVjdGlvblJlZiA9IGdldEFjY291bnQocmVjaXBpZW50KS5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgY29sbGVjdGlvbkRhdGEucHVibGljUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgTkZUIENvbGxlY3Rpb24iKQogICAgfQoKICAgIHByZSB7CiAgICAgICAgY3V0cy5sZW5ndGggPT0gcm95YWx0eURlc2NyaXB0aW9ucy5sZW5ndGggJiYgY3V0cy5sZW5ndGggPT0gcm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoOiAiQXJyYXkgbGVuZ3RoIHNob3VsZCBiZSBlcXVhbCBmb3Igcm95YWx0eSByZWxhdGVkIGRldGFpbHMiCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIC8vIENyZWF0ZSB0aGUgcm95YWx0eSBkZXRhaWxzCiAgICAgICAgdmFyIGNvdW50ID0gMAogICAgICAgIHZhciByb3lhbHRpZXM6IFtNZXRhZGF0YVZpZXdzLlJveWFsdHldID0gW10KICAgICAgICBsb2cocm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoKQogICAgICAgIHdoaWxlIHJveWFsdHlCZW5lZmljaWFyaWVzLmxlbmd0aCA+IGNvdW50IHsKICAgICAgICAgICAgbGV0IGJlbmVmaWNpYXJ5ID0gcm95YWx0eUJlbmVmaWNpYXJpZXNbY291bnRdCiAgICAgICAgICAgIGxldCBiZW5lZmljaWFyeUNhcGFiaWxpdHkgPSBnZXRBY2NvdW50KGJlbmVmaWNpYXJ5KS5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgICAgIE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0eVJlY2VpdmVyUHVibGljUGF0aCgpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGlmICFiZW5lZmljaWFyeUNhcGFiaWxpdHkuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBwYW5pYygiQmVuZWZpY2lhcnkgZG9lcyBub3QgaGF2ZSBSZWNlaXZlciBjb25maWd1cmVkIGF0IFJveWFsdHlSZWNlaXZlclB1YmxpY1BhdGgiKQogICAgICAgICAgICB9CgogICAgICAgICAgICByb3lhbHRpZXMuYXBwZW5kKAogICAgICAgICAgICAgICAgTWV0YWRhdGFWaWV3cy5Sb3lhbHR5KAogICAgICAgICAgICAgICAgICAgIHJlY2VpdmVyOiBiZW5lZmljaWFyeUNhcGFiaWxpdHksCiAgICAgICAgICAgICAgICAgICAgY3V0OiBjdXRzW2NvdW50XSwKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogcm95YWx0eURlc2NyaXB0aW9uc1tjb3VudF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKQogICAgICAgICAgICBjb3VudCA9IGNvdW50ICsgMQogICAgICAgIH0KCgogICAgICAgIC8vIE1pbnQgdGhlIE5GVCBhbmQgZGVwb3NpdCBpdCB0byB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGxldCBtaW50ZWRORlQgPC0gc2VsZi5taW50ZXIubWludE5GVCgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IHRodW1ibmFpbCwKICAgICAgICAgICAgcm95YWx0aWVzOiByb3lhbHRpZXMKICAgICAgICApCiAgICAgICAgc2VsZi5yZWNpcGllbnRDb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtbWludGVkTkZUKQogICAgfQoKfQ=="
            },
            "nft": {}
          }
        },
        "version": "1.77"
}

