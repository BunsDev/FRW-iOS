{
    "scripts": {
          "mainnet": {
            "version": "1.0",
            "ft": {
              "isTokenListEnabled": "",
              "isLinkedAccountTokenListEnabled": "",
              "getTokenListBalance": "",
              "addToken": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkVG9rZW4gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+ICkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LSA8VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQodmF1bHRUeXBlOiBUeXBlPEA8VG9rZW4+LlZhdWx0PigpKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICB9CgogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlblJlY2VpdmVyUGF0aD4pID09IGZhbHNlIHsKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXBhYmlsaXR5LCBhdDogPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgICAgICAKICAgICAgICB9CiAgICAgICAKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5CYWxhbmNlUGF0aD4pID09IGZhbHNlIHsKICAgICAgICAgICAgbGV0IGJhbGFuY2VDYXBhYmlsaXR5ID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCY8VG9rZW4+LlZhdWx0Pig8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlbkJhbGFuY2VQYXRoPikKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPiApID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KHZhdWx0VHlwZTogVHlwZTxAPFRva2VuPi5WYXVsdD4oKSksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goYmFsYW5jZUNhcGFiaWxpdHksIGF0OiA8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAgICAgfQogICAgCiAgICB9Cn0=",
              "enableTokenStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0ICkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LSBGbG93VG9rZW4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcGFiaWxpdHksIGF0OiAvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQogICAgICAgIAogICAgICAgIH0KICAgICAgIAogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgYmFsYW5jZUNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
              "transferEvmTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJFdm1Ub2tlbnMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKLy8vIFRyYW5zZmVycyAkRkxPVyBmcm9tIHRoZSBzaWduZXIncyBhY2NvdW50IENhZGVuY2UgRmxvdyBiYWxhbmNlIHRvIHRoZSByZWNpcGllbnQncyBoZXgtZW5jb2RlZCBFVk0gYWRkcmVzcy4KLy8vIE5vdGUgdGhhdCBhIENPQSBtdXN0IGhhdmUgYSAkRkxPVyBiYWxhbmNlIGluIEVWTSBiZWZvcmUgdHJhbnNmZXJyaW5nIHZhbHVlIHRvIGFub3RoZXIgRVZNIGFkZHJlc3MuCi8vLwp0cmFuc2FjdGlvbih0b0VWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCBnYXNMaW1pdDogVUludDY0KSB7CgogICAgbGV0IGNvYTogYXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCByZWNpcGllbnRFVk1BZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogL3N0b3JhZ2UvZXZtKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKSwgdG86IC9zdG9yYWdlL2V2bSkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBicmlkZ2VkIGFjY291bnQiKQoKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gdG9FVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gaWYgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLmJ5dGVzID09IHNlbGYuY29hLmFkZHJlc3MoKS5ieXRlcyB7CiAgICAgICAgLy8gICAgIHJldHVybgogICAgICAgIC8vIH0KICAgICAgICBsZXQgZGF0YSA9ICIiCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "transferFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZFeGFtcGxlVG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2V4YW1wbGVUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2V4YW1wbGVUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "transferTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJUb2tlbnMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCByZWNpcGllbnQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "transferTokensTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJUb2tlbnNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRXhhbXBsZVRva2VuIGZyb20gMHgzOTBiNDcwNWRhNjMwNWMzCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgcmVjaXBpZW50OiBBZGRyZXNzKSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcmVkCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkV4YW1wbGVUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZXhhbXBsZVRva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZXhhbXBsZVRva2VuUmVjZWl2ZXIpIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ=="
            },
            "nft": {
              "checkNFTListEnabled": ""
            },
            "swap": {
              "DeployPairTemplate": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgRGVwbG95UGFpclRlbXBsYXRlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKdHJhbnNhY3Rpb24ocGFpclRlbXBsYXRlQ29kZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGRlcGxveUFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IHRva2VuMFZhdWx0IDwtIEZsb3dUb2tlbi5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBsZXQgdG9rZW4xVmF1bHQgPC0gRmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGRlcGxveUFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiAiU3dhcFBhaXIiLCBjb2RlOiBwYWlyVGVtcGxhdGVDb2RlLnV0ZjgsIHRva2VuMFZhdWx0OiA8LXRva2VuMFZhdWx0LCB0b2tlbjFWYXVsdDogPC10b2tlbjFWYXVsdCkKICAgIH0KfQ==",
              "CreatePairTemplate": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgQ3JlYXRlUGFpclRlbXBsYXRlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBUb2tlbjBOYW1lIGZyb20gVG9rZW4wQWRkcgppbXBvcnQgVG9rZW4xTmFtZSBmcm9tIFRva2VuMUFkZHIKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQppbXBvcnQgU3dhcEZhY3RvcnkgZnJvbSAweGIwNjNjMTZjYWM4NWRiZDEKdHJhbnNhY3Rpb24oKSB7CiAgICBwcmVwYXJlKHVzZXJBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBmbG93VmF1bHRSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpIQogICAgICAgIGFzc2VydChmbG93VmF1bHRSZWYuYmFsYW5jZSA+PSAwLjAwMiwgbWVzc2FnZTogIkluc3VmZmljaWVudCBiYWxhbmNlIHRvIGNyZWF0ZSBwYWlyLCBtaW5pbXVtIGJhbGFuY2UgcmVxdWlyZW1lbnQ6IDAuMDAyIGZsb3ciKQogICAgICAgIGxldCBhY2NvdW50Q3JlYXRpb25GZWVWYXVsdCA8LSBmbG93VmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjAwMSkKICAgICAgICBsZXQgdG9rZW4wVmF1bHQgPC0gVG9rZW4wTmFtZS5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBsZXQgdG9rZW4xVmF1bHQgPC0gVG9rZW4xTmFtZS5jcmVhdGVFbXB0eVZhdWx0KCkKICAgICAgICBTd2FwRmFjdG9yeS5jcmVhdGVQYWlyKHRva2VuMFZhdWx0OiA8LXRva2VuMFZhdWx0LCB0b2tlbjFWYXVsdDogPC10b2tlbjFWYXVsdCwgYWNjb3VudENyZWF0aW9uRmVlOiA8LWFjY291bnRDcmVhdGlvbkZlZVZhdWx0KQogICAgfQp9",
              "AddLiquidity": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgQWRkTGlxdWlkaXR5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBTd2FwRmFjdG9yeSBmcm9tIDB4YjA2M2MxNmNhYzg1ZGJkMQppbXBvcnQgU3dhcEludGVyZmFjZXMgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKaW1wb3J0IFN3YXBDb25maWcgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKaW1wb3J0IFN3YXBFcnJvciBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgp0cmFuc2FjdGlvbigKICAgIHRva2VuMEtleTogU3RyaW5nLAogICAgdG9rZW4xS2V5OiBTdHJpbmcsCiAgICB0b2tlbjBJbkRlc2lyZWQ6IFVGaXg2NCwKICAgIHRva2VuMUluRGVzaXJlZDogVUZpeDY0LAogICAgdG9rZW4wSW5NaW46IFVGaXg2NCwKICAgIHRva2VuMUluTWluOiBVRml4NjQsCiAgICBkZWFkbGluZTogVUZpeDY0LAogICAgdG9rZW4wVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuMVZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCikgewogICAgcHJlcGFyZSh1c2VyQWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBhc3NlcnQoZGVhZGxpbmUgPj0gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJBZGRMaXF1aWRpdHk6IGV4cGlyZWQgIi5jb25jYXQoZGVhZGxpbmUudG9TdHJpbmcoKSkuY29uY2F0KCIgPCAiKS5jb25jYXQoZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLkVYUElSRUQKICAgICAgICAgICAgKQogICAgICAgICkKICAgICAgICBsZXQgcGFpckFkZHIgPSBTd2FwRmFjdG9yeS5nZXRQYWlyQWRkcmVzcyh0b2tlbjBLZXk6IHRva2VuMEtleSwgdG9rZW4xS2V5OiB0b2tlbjFLZXkpCiAgICAgICAgICAgID8/IHBhbmljKCJBZGRMaXF1aWRpdHk6IG5vbmV4aXN0ZW50IHBhaXIgIi5jb25jYXQodG9rZW4wS2V5KS5jb25jYXQoIiA8LT4gIikuY29uY2F0KHRva2VuMUtleSkuY29uY2F0KCIsIGNyZWF0ZSBwYWlyIGZpcnN0IikpCiAgICAgICAgbGV0IHBhaXJQdWJsaWNSZWYgPSBnZXRBY2NvdW50KHBhaXJBZGRyKS5nZXRDYXBhYmlsaXR5PCZ7U3dhcEludGVyZmFjZXMuUGFpclB1YmxpY30+KFN3YXBDb25maWcuUGFpclB1YmxpY1BhdGgpLmJvcnJvdygpIQogICAgICAgIGxldCBwYWlySW5mbyA9IHBhaXJQdWJsaWNSZWYuZ2V0UGFpckluZm8oKQogICAgICAgIHZhciB0b2tlbjBJbiA9IDAuMAogICAgICAgIHZhciB0b2tlbjFJbiA9IDAuMAogICAgICAgIHZhciB0b2tlbjBSZXNlcnZlID0gMC4wCiAgICAgICAgdmFyIHRva2VuMVJlc2VydmUgPSAwLjAKICAgICAgICBpZiB0b2tlbjBLZXkgPT0gKHBhaXJJbmZvWzBdIGFzISBTdHJpbmcpIHsKICAgICAgICAgICAgdG9rZW4wUmVzZXJ2ZSA9IChwYWlySW5mb1syXSBhcyEgVUZpeDY0KQogICAgICAgICAgICB0b2tlbjFSZXNlcnZlID0gKHBhaXJJbmZvWzNdIGFzISBVRml4NjQpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdG9rZW4wUmVzZXJ2ZSA9IChwYWlySW5mb1szXSBhcyEgVUZpeDY0KQogICAgICAgICAgICB0b2tlbjFSZXNlcnZlID0gKHBhaXJJbmZvWzJdIGFzISBVRml4NjQpCiAgICAgICAgfQogICAgICAgIGlmIHRva2VuMFJlc2VydmUgPT0gMC4wICYmIHRva2VuMVJlc2VydmUgPT0gMC4wIHsKICAgICAgICAgICAgdG9rZW4wSW4gPSB0b2tlbjBJbkRlc2lyZWQKICAgICAgICAgICAgdG9rZW4xSW4gPSB0b2tlbjFJbkRlc2lyZWQKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgYW1vdW50MU9wdGltYWwgPSBTd2FwQ29uZmlnLnF1b3RlKGFtb3VudEE6IHRva2VuMEluRGVzaXJlZCwgcmVzZXJ2ZUE6IHRva2VuMFJlc2VydmUsIHJlc2VydmVCOiB0b2tlbjFSZXNlcnZlKQogICAgICAgICAgICBpZiAoYW1vdW50MU9wdGltYWwgPD0gdG9rZW4xSW5EZXNpcmVkKSB7CiAgICAgICAgICAgICAgICBhc3NlcnQoYW1vdW50MU9wdGltYWwgPj0gdG9rZW4xSW5NaW4sIG1lc3NhZ2U6CiAgICAgICAgICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgICAgICAgICBtc2c6ICJTTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFIGV4cGVjdCBtaW4iLmNvbmNhdCh0b2tlbjFJbk1pbi50b1N0cmluZygpKS5jb25jYXQoIiBnb3QgIikuY29uY2F0KGFtb3VudDFPcHRpbWFsLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHRva2VuMEluID0gdG9rZW4wSW5EZXNpcmVkCiAgICAgICAgICAgICAgICB0b2tlbjFJbiA9IGFtb3VudDFPcHRpbWFsCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YXIgYW1vdW50ME9wdGltYWwgPSBTd2FwQ29uZmlnLnF1b3RlKGFtb3VudEE6IHRva2VuMUluRGVzaXJlZCwgcmVzZXJ2ZUE6IHRva2VuMVJlc2VydmUsIHJlc2VydmVCOiB0b2tlbjBSZXNlcnZlKQogICAgICAgICAgICAgICAgYXNzZXJ0KGFtb3VudDBPcHRpbWFsIDw9IHRva2VuMEluRGVzaXJlZCkKICAgICAgICAgICAgICAgIGFzc2VydChhbW91bnQwT3B0aW1hbCA+PSB0b2tlbjBJbk1pbiwgbWVzc2FnZToKICAgICAgICAgICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZzogIlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UgZXhwZWN0IG1pbiIuY29uY2F0KHRva2VuMEluTWluLnRvU3RyaW5nKCkpLmNvbmNhdCgiIGdvdCAiKS5jb25jYXQoYW1vdW50ME9wdGltYWwudG9TdHJpbmcoKSksCiAgICAgICAgICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5TTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgdG9rZW4wSW4gPSBhbW91bnQwT3B0aW1hbAogICAgICAgICAgICAgICAgdG9rZW4xSW4gPSB0b2tlbjFJbkRlc2lyZWQKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBsZXQgdG9rZW4wVmF1bHQgPC0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbjBWYXVsdFBhdGgpIS53aXRoZHJhdyhhbW91bnQ6IHRva2VuMEluKQogICAgICAgIGxldCB0b2tlbjFWYXVsdCA8LSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuMVZhdWx0UGF0aCkhLndpdGhkcmF3KGFtb3VudDogdG9rZW4xSW4pCiAgICAgICAgbGV0IGxwVG9rZW5WYXVsdCA8LSBwYWlyUHVibGljUmVmLmFkZExpcXVpZGl0eSgKICAgICAgICAgICAgdG9rZW5BVmF1bHQ6IDwtIHRva2VuMFZhdWx0LAogICAgICAgICAgICB0b2tlbkJWYXVsdDogPC0gdG9rZW4xVmF1bHQKICAgICAgICApCiAgICAgICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGggPSBTd2FwQ29uZmlnLkxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICBsZXQgbHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoID0gU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgICAgICB2YXIgbHBUb2tlbkNvbGxlY3Rpb25SZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JlN3YXBGYWN0b3J5LkxwVG9rZW5Db2xsZWN0aW9uPihmcm9tOiBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIGlmIGxwVG9rZW5Db2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICAgICAgICAgIGRlc3Ryb3kgPC0gdXNlckFjY291bnQubG9hZDxAQW55UmVzb3VyY2U+KGZyb206IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50LnNhdmUoPC1Td2FwRmFjdG9yeS5jcmVhdGVFbXB0eUxwVG9rZW5Db2xsZWN0aW9uKCksIHRvOiBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5saW5rPCZ7U3dhcEludGVyZmFjZXMuTHBUb2tlbkNvbGxlY3Rpb25QdWJsaWN9PihscFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGgsIHRhcmdldDogbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgbHBUb2tlbkNvbGxlY3Rpb25SZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JlN3YXBGYWN0b3J5LkxwVG9rZW5Db2xsZWN0aW9uPihmcm9tOiBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICBscFRva2VuQ29sbGVjdGlvblJlZiEuZGVwb3NpdChwYWlyQWRkcjogcGFpckFkZHIsIGxwVG9rZW5WYXVsdDogPC0gbHBUb2tlblZhdWx0KQogICAgfQp9",
              "RemoveLiquidity": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgUmVtb3ZlTGlxdWlkaXR5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBTd2FwRmFjdG9yeSBmcm9tIDB4YjA2M2MxNmNhYzg1ZGJkMQppbXBvcnQgU3dhcEludGVyZmFjZXMgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKaW1wb3J0IFN3YXBDb25maWcgZnJvbSAweGI3OGVmN2FmYTUyZmY5MDYKaW1wb3J0IFN3YXBFcnJvciBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgp0cmFuc2FjdGlvbigKICAgIHRva2VuMEtleTogU3RyaW5nLAogICAgdG9rZW4xS2V5OiBTdHJpbmcsCiAgICBscFRva2VuQW1vdW50OiBVRml4NjQsCiAgICB0b2tlbjBPdXRNaW46IFVGaXg2NCwKICAgIHRva2VuMU91dE1pbjogVUZpeDY0LAogICAgZGVhZGxpbmU6IFVGaXg2NCwKICAgIHRva2VuMFZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbjFWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAopIHsKICAgIHByZXBhcmUodXNlckFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgYXNzZXJ0KGRlYWRsaW5lID49IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiUmVtb3ZlTGlxdWlkaXR5OiBleHBpcmVkICIuY29uY2F0KGRlYWRsaW5lLnRvU3RyaW5nKCkpLmNvbmNhdCgiIDwgIikuY29uY2F0KGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcC50b1N0cmluZygpKSwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5FWFBJUkVECiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgICAgbGV0IHBhaXJBZGRyID0gU3dhcEZhY3RvcnkuZ2V0UGFpckFkZHJlc3ModG9rZW4wS2V5OiB0b2tlbjBLZXksIHRva2VuMUtleTogdG9rZW4xS2V5KQogICAgICAgICAgICA/PyBwYW5pYygiUmVtb3ZlTGlxdWlkaXR5OiBub25leGlzdGVudCBwYWlyICIuY29uY2F0KHRva2VuMEtleSkuY29uY2F0KCIgPC0+ICIpLmNvbmNhdCh0b2tlbjFLZXkpLmNvbmNhdCgiLCBjcmVhdGUgcGFpciBmaXJzdCIpKQogICAgICAgIGxldCBscFRva2VuQ29sbGVjdGlvblJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmU3dhcEZhY3RvcnkuTHBUb2tlbkNvbGxlY3Rpb24+KGZyb206IFN3YXBDb25maWcuTHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIlJlbW92ZUxpcXVpZGl0eTogY2Fubm90IGJvcnJvdyByZWZlcmVuY2UgdG8gTHBUb2tlbkNvbGxlY3Rpb24iKQogICAgICAgIGxldCBscFRva2VuUmVtb3ZlIDwtIGxwVG9rZW5Db2xsZWN0aW9uUmVmLndpdGhkcmF3KHBhaXJBZGRyOiBwYWlyQWRkciwgYW1vdW50OiBscFRva2VuQW1vdW50KQogICAgICAgIGxldCB0b2tlbnMgPC0gZ2V0QWNjb3VudChwYWlyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme1N3YXBJbnRlcmZhY2VzLlBhaXJQdWJsaWN9PihTd2FwQ29uZmlnLlBhaXJQdWJsaWNQYXRoKS5ib3Jyb3coKSEucmVtb3ZlTGlxdWlkaXR5KGxwVG9rZW5WYXVsdDogPC1scFRva2VuUmVtb3ZlKQogICAgICAgIGxldCB0b2tlbjBWYXVsdCA8LSB0b2tlbnNbMF0ud2l0aGRyYXcoYW1vdW50OiB0b2tlbnNbMF0uYmFsYW5jZSkKICAgICAgICBsZXQgdG9rZW4xVmF1bHQgPC0gdG9rZW5zWzFdLndpdGhkcmF3KGFtb3VudDogdG9rZW5zWzFdLmJhbGFuY2UpCiAgICAgICAgZGVzdHJveSB0b2tlbnMKICAgICAgICBhc3NlcnQodG9rZW4wVmF1bHQuYmFsYW5jZSA+PSB0b2tlbjBPdXRNaW4gJiYgdG9rZW4xVmF1bHQuYmFsYW5jZSA+PSB0b2tlbjFPdXRNaW4sIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIlJlbW92ZUxpcXVpZGl0eTogSU5TVUZGSUNJRU5UX1JFTU9WRV9MSVFVSURJVFlfT1VUX0FNT1VOVCIsCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICApCiAgICAgICAgKQogICAgICAgIGxldCBsb2NhbFZhdWx0MFJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW4wVmF1bHRQYXRoKSEKICAgICAgICBsZXQgbG9jYWxWYXVsdDFSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuMVZhdWx0UGF0aCkhCiAgICAgICAgaWYgdG9rZW4wVmF1bHQuaXNJbnN0YW5jZShsb2NhbFZhdWx0MFJlZi5nZXRUeXBlKCkpIHsKICAgICAgICAgICAgbG9jYWxWYXVsdDBSZWYuZGVwb3NpdChmcm9tOiA8LXRva2VuMFZhdWx0KQogICAgICAgICAgICBsb2NhbFZhdWx0MVJlZi5kZXBvc2l0KGZyb206IDwtdG9rZW4xVmF1bHQpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbG9jYWxWYXVsdDBSZWYuZGVwb3NpdChmcm9tOiA8LXRva2VuMVZhdWx0KQogICAgICAgICAgICBsb2NhbFZhdWx0MVJlZi5kZXBvc2l0KGZyb206IDwtdG9rZW4wVmF1bHQpCiAgICAgICAgfQogICAgfQp9",
              "SwapExactTokensForTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgU3dhcEV4YWN0VG9rZW5zRm9yVG9rZW5zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBUb2tlbjFOYW1lIGZyb20gVG9rZW4xQWRkcgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgU3dhcFJvdXRlciBmcm9tIDB4YTY4NTA3NzZhOTRlNjU1MQppbXBvcnQgU3dhcEVycm9yIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CnRyYW5zYWN0aW9uKAogICAgdG9rZW5LZXlGbGF0U3BsaXRQYXRoOiBbU3RyaW5nXSwKICAgIGFtb3VudEluU3BsaXQ6IFtVRml4NjRdLAogICAgYW1vdW50T3V0TWluOiBVRml4NjQsCiAgICBkZWFkbGluZTogVUZpeDY0LAogICAgdG9rZW5JblZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbk91dFZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbk91dFJlY2VpdmVyUGF0aDogUHVibGljUGF0aCwKICAgIHRva2VuT3V0QmFsYW5jZVBhdGg6IFB1YmxpY1BhdGgsCikgewogICAgcHJlcGFyZSh1c2VyQWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBhc3NlcnQoZGVhZGxpbmUgPj0gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJFWFBJUkVEIiwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5FWFBJUkVECiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgICAgbGV0IGxlbiA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aC5sZW5ndGgKICAgICAgICBsZXQgdG9rZW5JbktleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFswXQogICAgICAgIGxldCB0b2tlbk91dEtleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFtsZW4tMV0KICAgICAgICB2YXIgdG9rZW5PdXRBbW91bnRUb3RhbCA9IDAuMAogICAgICAgIHZhciB0b2tlbk91dFJlY2VpdmVyUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICBpZiB0b2tlbk91dFJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgICAgIHVzZXJBY2NvdW50LnNhdmUoPC0gVG9rZW4xTmFtZS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQubGluazwmVG9rZW4xTmFtZS5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odG9rZW5PdXRSZWNlaXZlclBhdGgsIHRhcmdldDogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50Lmxpbms8JlRva2VuMU5hbWUuVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4odG9rZW5PdXRCYWxhbmNlUGF0aCwgdGFyZ2V0OiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdG9rZW5PdXRSZWNlaXZlclJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgfQogICAgICAgIHZhciBwYXRoSW5kZXggPSAwCiAgICAgICAgdmFyIGkgPSAwCiAgICAgICAgdmFyIHBhdGg6IFtTdHJpbmddID0gW10KICAgICAgICB3aGlsZShpIDwgbGVuKSB7CiAgICAgICAgICAgIHZhciBjdXJUb2tlbktleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFtpXQogICAgICAgICAgICBwYXRoLmFwcGVuZChjdXJUb2tlbktleSkKICAgICAgICAgICAgaWYgKGN1clRva2VuS2V5ID09IHRva2VuT3V0S2V5KSB7CiAgICAgICAgICAgICAgICBsZXQgdG9rZW5JbkFtb3VudCA9IGFtb3VudEluU3BsaXRbcGF0aEluZGV4XQogICAgICAgICAgICAgICAgbGV0IHRva2VuSW5WYXVsdCA8LSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuSW5WYXVsdFBhdGgpIS53aXRoZHJhdyhhbW91bnQ6IHRva2VuSW5BbW91bnQpCiAgICAgICAgICAgICAgICBsZXQgdG9rZW5PdXRWYXVsdCA8LSBTd2FwUm91dGVyLnN3YXBXaXRoUGF0aCh2YXVsdEluOiA8LSB0b2tlbkluVmF1bHQsIHRva2VuS2V5UGF0aDogcGF0aCwgZXhhY3RBbW91bnRzOiBuaWwpCiAgICAgICAgICAgICAgICB0b2tlbk91dEFtb3VudFRvdGFsID0gdG9rZW5PdXRBbW91bnRUb3RhbCArIHRva2VuT3V0VmF1bHQuYmFsYW5jZQogICAgICAgICAgICAgICAgdG9rZW5PdXRSZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSB0b2tlbk91dFZhdWx0KQogICAgICAgICAgICAgICAgcGF0aCA9IFtdCiAgICAgICAgICAgICAgICBwYXRoSW5kZXggPSBwYXRoSW5kZXggKyAxCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaSA9IGkgKyAxCiAgICAgICAgfQogICAgICAgIGFzc2VydCh0b2tlbk91dEFtb3VudFRvdGFsID49IGFtb3VudE91dE1pbiwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRSBleHBlY3QgbWluICIuY29uY2F0KGFtb3VudE91dE1pbi50b1N0cmluZygpKS5jb25jYXQoIiBnb3QgIikuY29uY2F0KHRva2VuT3V0QW1vdW50VG90YWwudG9TdHJpbmcoKSksCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICApCiAgICAgICAgKQogICAgfQp9",
              "SwapTokensForExactTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgU3dhcFRva2Vuc0ZvckV4YWN0VG9rZW5zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIGltcG9ydCBUb2tlbjFOYW1lIGZyb20gVG9rZW4xQWRkcgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgU3dhcFJvdXRlciBmcm9tIDB4YTY4NTA3NzZhOTRlNjU1MQppbXBvcnQgU3dhcEVycm9yIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CnRyYW5zYWN0aW9uKAogICAgdG9rZW5LZXlGbGF0U3BsaXRQYXRoOiBbU3RyaW5nXSwKICAgIGFtb3VudE91dFNwbGl0OiBbVUZpeDY0XSwKICAgIGFtb3VudEluTWF4OiBVRml4NjQsCiAgICBkZWFkbGluZTogVUZpeDY0LAogICAgdG9rZW5JblZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbk91dFZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCiAgICB0b2tlbk91dFJlY2VpdmVyUGF0aDogUHVibGljUGF0aCwKICAgIHRva2VuT3V0QmFsYW5jZVBhdGg6IFB1YmxpY1BhdGgsCikgewogICAgcHJlcGFyZSh1c2VyQWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBhc3NlcnQoIGRlYWRsaW5lID49IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiRVhQSVJFRCIsCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuRVhQSVJFRAogICAgICAgICAgICApCiAgICAgICAgKQogICAgICAgIGxldCBsZW4gPSB0b2tlbktleUZsYXRTcGxpdFBhdGgubGVuZ3RoCiAgICAgICAgbGV0IHRva2VuSW5LZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbMF0KICAgICAgICBsZXQgdG9rZW5PdXRLZXkgPSB0b2tlbktleUZsYXRTcGxpdFBhdGhbbGVuLTFdCiAgICAgICAgdmFyIHRva2VuT3V0QW1vdW50VG90YWwgPSAwLjAKICAgICAgICB2YXIgdG9rZW5PdXRSZWNlaXZlclJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgaWYgdG9rZW5PdXRSZWNlaXZlclJlZiA9PSBuaWwgewogICAgICAgICAgICB1c2VyQWNjb3VudC5zYXZlKDwtIFRva2VuMU5hbWUuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50Lmxpbms8JlRva2VuMU5hbWUuVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHRva2VuT3V0UmVjZWl2ZXJQYXRoLCB0YXJnZXQ6IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5saW5rPCZUb2tlbjFOYW1lLlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KHRva2VuT3V0QmFsYW5jZVBhdGgsIHRhcmdldDogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgIH0KICAgICAgICB2YXIgcGF0aEluZGV4ID0gMAogICAgICAgIHZhciBpID0gMAogICAgICAgIHZhciBwYXRoOiBbU3RyaW5nXSA9IFtdCiAgICAgICAgdmFyIGFtb3VudEluVG90YWwgPSAwLjAKICAgICAgICB3aGlsZShpIDwgbGVuKSB7CiAgICAgICAgICAgIHZhciBjdXJUb2tlbktleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFtpXQogICAgICAgICAgICBwYXRoLmFwcGVuZChjdXJUb2tlbktleSkKICAgICAgICAgICAgaWYgKGN1clRva2VuS2V5ID09IHRva2VuT3V0S2V5KSB7CiAgICAgICAgICAgICAgICBsZXQgdG9rZW5PdXRFeHBlY3RBbW91bnQgPSBhbW91bnRPdXRTcGxpdFtwYXRoSW5kZXhdCiAgICAgICAgICAgICAgICBsZXQgYW1vdW50cyA9IFN3YXBSb3V0ZXIuZ2V0QW1vdW50c0luKGFtb3VudE91dDogdG9rZW5PdXRFeHBlY3RBbW91bnQsIHRva2VuS2V5UGF0aDogcGF0aCkKICAgICAgICAgICAgICAgIGxldCB0b2tlbkluQW1vdW50ID0gYW1vdW50c1swXQogICAgICAgICAgICAgICAgYW1vdW50SW5Ub3RhbCA9IGFtb3VudEluVG90YWwgKyB0b2tlbkluQW1vdW50CiAgICAgICAgICAgICAgICBsZXQgdG9rZW5JblZhdWx0IDwtIHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW5JblZhdWx0UGF0aCkhLndpdGhkcmF3KGFtb3VudDogdG9rZW5JbkFtb3VudCkKICAgICAgICAgICAgICAgIGxldCB0b2tlbk91dFZhdWx0IDwtIFN3YXBSb3V0ZXIuc3dhcFdpdGhQYXRoKHZhdWx0SW46IDwtIHRva2VuSW5WYXVsdCwgdG9rZW5LZXlQYXRoOiBwYXRoLCBleGFjdEFtb3VudHM6IGFtb3VudHMpCiAgICAgICAgICAgICAgICB0b2tlbk91dEFtb3VudFRvdGFsID0gdG9rZW5PdXRBbW91bnRUb3RhbCArIHRva2VuT3V0VmF1bHQuYmFsYW5jZQogICAgICAgICAgICAgICAgdG9rZW5PdXRSZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSB0b2tlbk91dFZhdWx0KQogICAgICAgICAgICAgICAgcGF0aCA9IFtdCiAgICAgICAgICAgICAgICBwYXRoSW5kZXggPSBwYXRoSW5kZXggKyAxCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaSA9IGkgKyAxCiAgICAgICAgfQogICAgICAgIGFzc2VydChhbW91bnRJblRvdGFsIDw9IGFtb3VudEluTWF4LCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJTTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFIiwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5TTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFCiAgICAgICAgICAgICkKICAgICAgICApCiAgICB9Cn0=",
              "MintAllTokens": "",
              "QueryTokenNames": "cHViIGZ1biBtYWluKHF1ZXJ5QWRkcjogQWRkcmVzcyk6IFtTdHJpbmddIHsKICAgIGxldCBuYW1lcyA9IGdldEFjY291bnQocXVlcnlBZGRyKS5jb250cmFjdHMubmFtZXMKICAgIGxldCB0b2tlbk5hbWVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgY29sb246IFVJbnQ4ID0gNTgKICAgIGxldCBzcGFjZTogVUludDggPSAzMgogICAgbGV0IGJyYWNlOiBVSW50OCA9IDEyMwogICAgbGV0IHRva2VuSW5kZW50aWZpZXI6IFtVSW50OF0gPSBbNzAsIDExNywgMTEwLCAxMDMsIDEwNSwgOTgsIDEwOCwgMTAxLCA4NCwgMTExLCAxMDcsIDEwMSwgMTEwXSAKICAgIGxldCBpbmRlbnRpZmllckxlbmd0aCA9IHRva2VuSW5kZW50aWZpZXIubGVuZ3RoCiAgICBmb3IgbmFtZSBpbiBuYW1lcyB7CiAgICAgICAgbGV0IGNvZGUgPSBnZXRBY2NvdW50KHF1ZXJ5QWRkcikuY29udHJhY3RzLmdldChuYW1lOiBuYW1lKSEuY29kZQogICAgICAgIGxldCBjb2RlTGVuZ3RoID0gY29kZS5sZW5ndGgKICAgICAgICB2YXIgaXNUb2tlbiA9IGZhbHNlCiAgICAgICAgdmFyIGkgPSAxMwogICAgICAgIHdoaWxlKGkgPCBjb2RlTGVuZ3RoLTEpIHsKICAgICAgICAgICAgaWYgY29kZVtpXSA9PSBicmFjZSB7CiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGNvZGVbaV0gPT0gY29sb24gJiYgY29kZVtpKzFdID09IHNwYWNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgd2hpbGUoY29kZVtpXSA9PSBzcGFjZSAmJiBpIDwgY29kZUxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIGogPSAwCiAgICAgICAgICAgICAgICB3aGlsZShqIDwgaW5kZW50aWZpZXJMZW5ndGggJiYgaSA8IGNvZGVMZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBpZiBjb2RlW2ldID09IHRva2VuSW5kZW50aWZpZXJbal0gewogICAgICAgICAgICAgICAgICAgICAgICBpID0gaSArIDEKICAgICAgICAgICAgICAgICAgICAgICAgaiA9IGogKyAxCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBqID09IGluZGVudGlmaWVyTGVuZ3RoICYmIChjb2RlW2ldPT1zcGFjZSB8fCBjb2RlW2ldPT1icmFjZSkgewogICAgICAgICAgICAgICAgICAgIGlzVG9rZW4gPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIGlzVG9rZW4gewogICAgICAgICAgICB0b2tlbk5hbWVzLmFwcGVuZChuYW1lKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiB0b2tlbk5hbWVzCn0=",
              "QueryPairArrayAddr": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbihmcm9tOiBVSW50NjQsIHRvOiBVSW50NjQpOiBbQWRkcmVzc10gewogICAgcmV0dXJuIFN3YXBGYWN0b3J5LmdldFNsaWNlZFBhaXJzKGZyb206IGZyb20sIHRvOiB0bykKfQo=",
              "QueryPairArrayInfo": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbihmcm9tOiBVSW50NjQsIHRvOiBVSW50NjQpOiBbQW55U3RydWN0XSB7CiAgICByZXR1cm4gU3dhcEZhY3RvcnkuZ2V0U2xpY2VkUGFpckluZm9zKGZyb206IGZyb20sIHRvOiB0bykKfQo=",
              "QueryPairInfoByAddrs": "aW1wb3J0IFN3YXBJbnRlcmZhY2VzIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CnB1YiBmdW4gbWFpbihwYWlyQWRkcnM6IFtBZGRyZXNzXSk6IFtBbnlTdHJ1Y3RdIHsKICAgIHZhciByZXM6IFtBbnlTdHJ1Y3RdID0gW10KICAgIHZhciBpID0gMAogICAgdmFyIGxlbiA9IHBhaXJBZGRycy5sZW5ndGgKICAgIHdoaWxlKGkgPCBsZW4pIHsKICAgICAgICByZXMuYXBwZW5kKAogICAgICAgICAgICBnZXRBY2NvdW50KHBhaXJBZGRyc1tpXSkuZ2V0Q2FwYWJpbGl0eTwme1N3YXBJbnRlcmZhY2VzLlBhaXJQdWJsaWN9PihTd2FwQ29uZmlnLlBhaXJQdWJsaWNQYXRoKS5ib3Jyb3coKSEuZ2V0UGFpckluZm8oKQogICAgICAgICkKICAgICAgICBpID0gaSArIDEKICAgIH0KICAgIHJldHVybiByZXMKfQo=",
              "QueryPairInfoByTokenKey": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCnB1YiBmdW4gbWFpbih0b2tlbjBLZXk6U3RyaW5nICx0b2tlbjFLZXk6U3RyaW5nKTogQW55U3RydWN0PyB7CiAgICByZXR1cm4gU3dhcEZhY3RvcnkuZ2V0UGFpckluZm8odG9rZW4wS2V5OiB0b2tlbjBLZXksIHRva2VuMUtleTogdG9rZW4xS2V5KQp9",
              "QueryUserAllLiquidities": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhiMDYzYzE2Y2FjODVkYmQxCmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhiNzhlZjdhZmE1MmZmOTA2CmltcG9ydCBTd2FwSW50ZXJmYWNlcyBmcm9tIDB4Yjc4ZWY3YWZhNTJmZjkwNgpwdWIgZnVuIG1haW4odXNlckFkZHI6IEFkZHJlc3MpOiB7QWRkcmVzczogVUZpeDY0fSB7CiAgICB2YXIgbHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoID0gU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgIGxldCBscFRva2VuQ29sbGVjdGlvbkNhcCA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntTd2FwSW50ZXJmYWNlcy5McFRva2VuQ29sbGVjdGlvblB1YmxpY30+KGxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGlmIGxwVG9rZW5Db2xsZWN0aW9uQ2FwLmNoZWNrKCkgPT0gZmFsc2UgewogICAgICAgIHJldHVybiB7fQogICAgfQogICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gbHBUb2tlbkNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICBsZXQgbGlxdWlkaXR5UGFpckFkZHJzID0gbHBUb2tlbkNvbGxlY3Rpb25SZWYuZ2V0QWxsTFBUb2tlbnMoKQogICAgdmFyIHJlczoge0FkZHJlc3M6IFVGaXg2NH0gPSB7fQogICAgZm9yIHBhaXJBZGRyIGluIGxpcXVpZGl0eVBhaXJBZGRycyB7CiAgICAgICAgdmFyIGxwVG9rZW5BbW91bnQgPSBscFRva2VuQ29sbGVjdGlvblJlZi5nZXRMcFRva2VuQmFsYW5jZShwYWlyQWRkcjogcGFpckFkZHIpCiAgICAgICAgcmVzW3BhaXJBZGRyXSA9IGxwVG9rZW5BbW91bnQKICAgIH0KICAgIHJldHVybiByZXMKfQ==",
              "QueryTimestamp": "cHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICByZXR1cm4gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wCn0=",
              "QueryVaultBalanceBatched": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKcHViIGZ1biBtYWluKHVzZXJBZGRyOiBBZGRyZXNzLCB2YXVsdFBhdGhzOiBbUHVibGljUGF0aF0pOiBbVUZpeDY0XSB7CiAgICB2YXIgYmFsYW5jZXM6IFtVRml4NjRdID0gW10KICAgIGZvciB2YXVsdFBhdGggaW4gdmF1bHRQYXRocyB7CiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZSA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9Pih2YXVsdFBhdGgpCiAgICAgICAgaWYgdmF1bHRCYWxhbmNlLmNoZWNrKCkgPT0gZmFsc2UgfHwgdmF1bHRCYWxhbmNlLmJvcnJvdygpID09IG5pbCB7CiAgICAgICAgICAgIGJhbGFuY2VzLmFwcGVuZCgwLjApCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmFsYW5jZXMuYXBwZW5kKHZhdWx0QmFsYW5jZS5ib3Jyb3coKSEuYmFsYW5jZSkKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYmFsYW5jZXMKfQ==",
              "QueryTokenPathPrefix": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKcHViIGZ1biBtYWluKHRva2VuTmFtZTogU3RyaW5nLCB0b2tlbkFkZHI6IEFkZHJlc3MsIHVzZXJBZGRyOiBBZGRyZXNzKToge1N0cmluZzogQW55U3RydWN0fSB7CiAgICBsZXQgY29kZSA9IGdldEFjY291bnQodG9rZW5BZGRyKS5jb250cmFjdHMuZ2V0KG5hbWU6IHRva2VuTmFtZSkhLmNvZGUKICAgIHZhciBsb2NhbFByZWZpeCA9ICIiCiAgICB2YXIgYmFsYW5jZVBhdGggPSAvcHVibGljL1BhdGhQcmVmaXgxQmFsYW5jZQogICAgdmFyIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDFSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MSIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4MkJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDJSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MiIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4M0JhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDNSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MyIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4NEJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDRSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4NCIKICAgIH0KICAgIHJldHVybiB7CiAgICAgICAgIkxvY2FsUHJlZml4IjogbG9jYWxQcmVmaXgsCiAgICAgICAgIlRva2VuQ29kZSI6IGNvZGUKICAgIH0KfQ==",
              "CenterTokens": [
                "A.1654653399040a61.FlowToken",
                "A.3c5959b568896393.FUSD",
                "A.b19436aae4d94622.FiatToken",
                "A.cfdd90d4a00f7b5b.TeleportedTetherToken",
                "A.231cc0dbbcffc4b7.ceWETH",
                "A.231cc0dbbcffc4b7.ceWBTC"
              ]
            },
            "basic": {
              "accountStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWNjb3VudFN0b3JhZ2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgU3RvcmFnZUluZm8gewogICAgYWNjZXNzKGFsbCkgIGxldCBjYXBhY2l0eTogVUludDY0CiAgICBhY2Nlc3MoYWxsKSAgbGV0IHVzZWQ6IFVJbnQ2NAogICAgYWNjZXNzKGFsbCkgIGxldCBhdmFpbGFibGU6IFVJbnQ2NAoKICAgIGluaXQoY2FwYWNpdHk6IFVJbnQ2NCwgdXNlZDogVUludDY0LCBhdmFpbGFibGU6IFVJbnQ2NCkgewogICAgICAgIHNlbGYuY2FwYWNpdHkgPSBjYXBhY2l0eQogICAgICAgIHNlbGYudXNlZCA9IHVzZWQKICAgICAgICBzZWxmLmF2YWlsYWJsZSA9IGF2YWlsYWJsZQogICAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogU3RvcmFnZUluZm8gewogICAgbGV0IGFjY3QgPSBnZXRBY2NvdW50KGFkZHIpCiAgICByZXR1cm4gU3RvcmFnZUluZm8oY2FwYWNpdHk6IGFjY3Quc3RvcmFnZS5jYXBhY2l0eSwKICAgICAgICAgICAgdXNlZDogYWNjdC5zdG9yYWdlLnVzZWQsCiAgICAgICAgICAgIGF2YWlsYWJsZTogYWNjdC5zdG9yYWdlLmNhcGFjaXR5IC0gYWNjdC5zdG9yYWdlLnVzZWQpCn0=",
              "addContractToAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkQ29udHJhY3RUb0FjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgY29kZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb250cmFjdHMsIEFkZENvbnRyYWN0KSAmQWNjb3VudCkgewogICAgICAgIHNpZ25lci5jb250cmFjdHMuYWRkKG5hbWU6IG5hbWUsIGNvZGU6IGNvZGUudXRmOCkKICAgIH0KfQ==",
              "addContractToAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkQ29udHJhY3RUb0FjY291bnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIGNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29udHJhY3RzLCBBZGRDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLmFkZChuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkS2V5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChLZXlzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIHNpZ25lci5rZXlzLmFkZCgKICAgICAgICAgICAgcHVibGljS2V5OiBrZXksCiAgICAgICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwKICAgICAgICAgICAgd2VpZ2h0OiB3ZWlnaHQKICAgICAgICApCiAgICB9Cn0=",
              "addKeyTemp": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkS2V5VGVtcCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKCXByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlIHwgU3RvcmFnZSkgJkFjY291bnQpIHsKCgkJbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgoJCS8vIGFkZCBhbGwgdGhlIGtleXMgdG8gdGhlIGFjY291bnQKCQlmb3Iga2V5IGluIHB1YmxpY0tleXMgewoJCQlhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LnB1YmxpY0tleSwgaGFzaEFsZ29yaXRobToga2V5Lmhhc2hBbGdvcml0aG0sIHdlaWdodDoga2V5LndlaWdodCkKCQl9CgkJCgkJLy8gYWRkIGNvbnRyYWN0cyBpZiBwcm92aWRlZAoJCWZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CgkJCWFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCgkJfQoJfQp9",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCgogdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30sIGZ1bmRBbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHRva2VuUmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KICAgIGxldCBzZW50VmF1bHQ6IEBGdW5naWJsZVRva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgICAgICBzZWxmLnRva2VuUmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikgPz8gcGFuaWMoIlVuYWJsZSB0byBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIikKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcicncyBWYXVsdCEiKQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogZnVuZEFtb3VudCkKICAgIH0KICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudG9rZW5SZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9CiB9",
              "createAccountEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudEVtcHR5VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KCiAgICAgICAgZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKICAgICAgICB9CgogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQoKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQog",
              "createAccountSdk": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudFNkayAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCwgY29udHJhY3RzOiB7U3RyaW5nOiBTdHJpbmd9KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSB8IFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQoKICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgIH0KfQ==",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KCiAgICAgICAgZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKICAgICAgICB9CgogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBsZXQgZmVlVmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjAwMDEpIGFzISBARmxvd1Rva2VuLlZhdWx0CgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtIGZlZVZhdWx0KQoKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0KIA==",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjb3VudEluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIHN0cnVjdCBSZXN1bHQgewogIGFjY2VzcyhhbGwpIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgYWNjZXNzKGFsbCkgbGV0IGJhbGFuY2U6IFVGaXg2NAogIGFjY2VzcyhhbGwpIGxldCBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVVzZWQ6IFVJbnQ2NAogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlQ2FwYWNpdHk6IFVJbnQ2NAoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywKICAgIGJhbGFuY2U6IFVGaXg2NCwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NCwKICAgIHN0b3JhZ2VVc2VkOiBVSW50NjQsCiAgICBzdG9yYWdlQ2FwYWNpdHk6IFVJbnQ2NAogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogICAgc2VsZi5hdmFpbGFibGVCYWxhbmNlID0gYXZhaWxhYmxlQmFsYW5jZQogICAgc2VsZi5zdG9yYWdlVXNlZCA9IHN0b3JhZ2VVc2VkCiAgICBzZWxmLnN0b3JhZ2VDYXBhY2l0eSA9IHN0b3JhZ2VDYXBhY2l0eQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIFJlc3VsdCgKICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcywKICAgIGJhbGFuY2U6IGFjY291bnQuYmFsYW5jZSwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IGFjY291bnQuYXZhaWxhYmxlQmFsYW5jZSwKICAgIHN0b3JhZ2VVc2VkOiBhY2NvdW50LnN0b3JhZ2UudXNlZCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogYWNjb3VudC5zdG9yYWdlLmNhcGFjaXR5CiAgKQp9",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjb3VudE1pbkZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCB1c2RDYXA6IFVJbnQ2NCA9IGFjY291bnQuc3RvcmFnZS51c2VkCgogIHJldHVybiBVRml4NjQodXNkQ2FwKSAqIDAuMDAwMDAwMDIKfQ==",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsRmxvd0JhbGFuY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSEKICAgICAgLmJvcnJvdygpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKICAgICAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZSArIHVubG9ja2VkQmFsYW5jZQp9",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsTG9ja2VkRmxvd0JhbGFuY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCi8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2Ci8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPgogICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgcmV0dXJuIFVGaXg2NCgwKQogICAgfQogICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIAogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2UKfQ==",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsVW5sb2NrZWRGbG93QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldDwmRmxvd1Rva2VuLlZhdWx0PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RmluZEFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGSU5EIGZyb20gMHhGaW5kCi8vQ2hlY2sgdGhlIHN0YXR1cyBvZiBhIGZpbiB1c2VyCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcpIDogQWRkcmVzcz8gewogICAgbGV0IHN0YXR1cz1GSU5ELnN0YXR1cyhuYW1lKQogICAgcmV0dXJuIHN0YXR1cy5vd25lcgp9",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RmluZERvbWFpbkJ5QWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Rmxvd25zQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Rmxvd25zRG9tYWluc0J5QWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmFnZUluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKToge1N0cmluZzogVUludDY0fSB7CiAgICBsZXQgYWNjdCA9IGdldEFjY291bnQoYWRkcikKICAgIGxldCByZXQ6IHtTdHJpbmc6IFVJbnQ2NH0gPSB7fQogICAgcmV0WyJjYXBhY2l0eSJdID0gYWNjdC5zdG9yYWdlLmNhcGFjaXR5CiAgICByZXRbInVzZWQiXSA9IGFjY3Quc3RvcmFnZS51c2VkCiAgICByZXRbImF2YWlsYWJsZSJdID0gYWNjdC5zdG9yYWdlLmNhcGFjaXR5IC0gIGFjY3Quc3RvcmFnZS51c2VkCiAgICByZXR1cm4gcmV0Cn0=",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0VG9rZW5CYWxhbmNlV2l0aE1vZGVsIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KDxUb2tlbkJhbGFuY2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgY2FwYWJpbGl0eSIpCgogICAgcmV0dXJuIHZhdWx0UmVmLmJhbGFuY2UKfQ==",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgaXNLZXlIYXNGdWxsQXV0aCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleTogU3RyaW5nKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgdmFyIGZsYWcgPSBmYWxzZQogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5ID09IGtleSB7CiAgICAgIGZsYWcgPSBhY2NvdW50S2V5LndlaWdodCA+PSBVRml4NjQoMTAwMCkgJiYgIWFjY291bnRLZXkuaXNSZXZva2VkCiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gZmxhZwp9Cg==",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgaXNLZXlzSGFzRnVsbEF1dGggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwdWJsaWNLZXlzOiBbU3RyaW5nXSk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIHZhciB3ZWlnaHQ6IFVGaXg2NCA9IDAuMAogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5cy5jb250YWlucyhrZXkpICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZCB7CiAgICAgIHdlaWdodCA9IHdlaWdodCArIGFjY291bnRLZXkud2VpZ2h0IAogICAgfQogICAgcmV0dXJuIGZhbHNlCiAgfQogIGFjY291bnQua2V5cy5mb3JFYWNoKGFjY291bnRGbikKCiAgcmV0dXJuIHdlaWdodCA+PSBVRml4NjQoMTAwMCkKfQo=",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgaXNMb2NrZWRGbG93RW5hYmxlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgcmV0dXJuIGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyhMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQp9",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgaXNUb2tlblN0b3JhZ2VFbmFibGVkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgIAogICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICBsZXQgYmFsYW5jZSA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5CYWxhbmNlUGF0aD4pCgogICAgcmV0dXJuIHJlY2VpdmVyICYmIGJhbGFuY2UKfQ==",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcXVlcnlGbG93QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgphY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgPz8gbmlsCgogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgfQogICAgCiAgICByZXR1cm4gMC4wCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJzOiBbQWRkcmVzc10pOiBbVUZpeDY0XSB7CiAgICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgICAgICBsZXQgYmFsID0gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHIpCiAgICAgICAgYmFscy5hcHBlbmQoYmFsKQogICAgfQogICAgCiAgICByZXR1cm4gYmFscwp9",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcXVlcnlGbG93QmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCgphY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgPz8gbmlsCgogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgfQogICAgCiAgICByZXR1cm4gMC4wCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJzOiBbQWRkcmVzc10pOiBbVUZpeDY0XSB7CiAgICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgICAgICBsZXQgYmFsID0gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHIpCiAgICAgICAgYmFscy5hcHBlbmQoYmFsKQogICAgfQogICAgCiAgICByZXR1cm4gYmFscwp9",
              "removeAccountKeyByIndex": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVtb3ZlQWNjb3VudEtleUJ5SW5kZXggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKGtleUluZGV4OiBJbnQpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEtleXMpICZBY2NvdW50KSB7CiAgICAgICAgc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBrZXlJbmRleCkKICAgIH0KfQ==",
              "removeContractFromAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVtb3ZlQ29udHJhY3RGcm9tQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChSZW1vdmVDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLnJlbW92ZShuYW1lOiBuYW1lKQogICAgfQp9",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmV2b2tlS2V5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICB0cmFuc2FjdGlvbihpbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChLZXlzKSAmQWNjb3VudCkgewogICAgICAgIC8vIEdldCBhIGtleSBmcm9tIGFuIGF1dGggYWNjb3VudC4KICAgICAgICBsZXQga2V5QSA9IHNpZ25lci5rZXlzLnJldm9rZShrZXlJbmRleDogaW5kZXgpCiAgICB9Cn0=",
              "test": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "updateContractOfAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdXBkYXRlQ29udHJhY3RPZkFjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgY29kZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChVcGRhdGVDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLnVwZGF0ZShuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "verifyUserSignature": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdmVyaWZ5VXNlclNpZ25hdHVyZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oCiAgICBtZXNzYWdlOiBTdHJpbmcsCiAgICByYXdQdWJsaWNLZXlzOiBbU3RyaW5nXSwKICAgIHdlaWdodHM6IFtVRml4NjRdLAogICAgc2lnbkFsZ29zOiBbVUludDhdLAogICAgaGFzaEFsZ29zOiBbVUludDhdLAogICAgc2lnbmF0dXJlczogW1N0cmluZ10sCik6IEJvb2wgewoKICAgIGxldCBrZXlMaXN0ID0gQ3J5cHRvLktleUxpc3QoKQoKICAgIHZhciBpID0gMAogICAgZm9yIHJhd1B1YmxpY0tleSBpbiByYXdQdWJsaWNLZXlzIHsKICAgIGtleUxpc3QuYWRkKAogICAgICAgIFB1YmxpY0tleSgKICAgICAgICBwdWJsaWNLZXk6IHJhd1B1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbkFsZ29zW2ldKSEKICAgICAgICApLAogICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvc1tpXSkhLAogICAgICAgIHdlaWdodDogd2VpZ2h0c1tpXSwKICAgICkKICAgIGkgPSBpICsgMQogICAgfQoKICAgIGxldCBzaWduYXR1cmVTZXQ6IFtDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZV0gPSBbXQoKICAgIHZhciBqID0gMAogICAgZm9yIHNpZ25hdHVyZSBpbiBzaWduYXR1cmVzIHsKICAgIHNpZ25hdHVyZVNldC5hcHBlbmQoCiAgICAgICAgQ3J5cHRvLktleUxpc3RTaWduYXR1cmUoCiAgICAgICAgICAgIGtleUluZGV4OiBqLAogICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5kZWNvZGVIZXgoKQogICAgICAgICkKICAgICkKICAgICAgICBqID0gaiArIDEKICAgIH0KCiAgICBsZXQgc2lnbmVkRGF0YSA9IG1lc3NhZ2UuZGVjb2RlSGV4KCkKCiAgICByZXR1cm4ga2V5TGlzdC52ZXJpZnkoCiAgICAgICAgc2lnbmF0dXJlU2V0OiBzaWduYXR1cmVTZXQsCiAgICAgICAgc2lnbmVkRGF0YTogc2lnbmVkRGF0YSwKICAgICAgICBkb21haW5TZXBhcmF0aW9uVGFnOiAiRkxPVy1WMC4wLXVzZXIiCiAgICApCn0=",
              "verifyUserSignatureTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdmVyaWZ5VXNlclNpZ25hdHVyZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KCmFjY2VzcyhhbGwpIGZ1biBtYWluKAogICAgbWVzc2FnZTogU3RyaW5nLAogICAgcmF3UHVibGljS2V5OiBTdHJpbmcsCiAgICB3ZWlnaHQ6IFVGaXg2NCwKICAgIHNpZ25BbGdvOiBVSW50OCwKICAgIGhhc2hBbGdvOiBVSW50OCwKICAgIHNpZ25hdHVyZTogU3RyaW5nLAopOiBCb29sIHsKCiAgICBsZXQga2V5TGlzdDogQ3J5cHRvLktleUxpc3QgPSBDcnlwdG8uS2V5TGlzdCgpCgogICAga2V5TGlzdC5hZGQoCiAgICAgICAgUHVibGljS2V5KAogICAgICAgIHB1YmxpY0tleTogcmF3UHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduQWxnbykhCiAgICAgICAgKSwKICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnbykhLAogICAgICAgIHdlaWdodDogd2VpZ2h0LAogICAgKQoKICAgIGxldCBzaWduYXR1cmVTZXQ6IFtDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZV0gPSBbXQoKICAgIHNpZ25hdHVyZVNldC5hcHBlbmQoCiAgICAgICAgQ3J5cHRvLktleUxpc3RTaWduYXR1cmUoCiAgICAgICAgICAgIGtleUluZGV4OiAwLAogICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5kZWNvZGVIZXgoKQogICAgICAgICkKICAgICkKCiAgICBsZXQgc2lnbmVkRGF0YSA9IG1lc3NhZ2UuZGVjb2RlSGV4KCkKCiAgICByZXR1cm4ga2V5TGlzdC52ZXJpZnkoCiAgICAgICAgc2lnbmF0dXJlU2V0OiBzaWduYXR1cmVTZXQsCiAgICAgICAgc2lnbmVkRGF0YTogc2lnbmVkRGF0YSwKICAgICAgICBkb21haW5TZXBhcmF0aW9uVGFnOiAiRkxPVy1WMC4wLXVzZXIiCiAgICApCn0=",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdBbGxVbmxvY2tlZEZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3Cgp0cmFuc2FjdGlvbigpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGFtb3VudDogVUZpeDY0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIHNlbGYuaG9sZGVyUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCgkJCQlzZWxmLnZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IHNpZ25lcgogICAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCgogICAgICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgICAgIHBhbmljKCJDb3VsZCBub3QgZ2V0IGZsb3cgbG9ja2VkIHRva2VuIHZhdWx0IikKICAgICAgICB9CgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgICAgICAvLyBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgLy8gICAgIHBhbmljKCJOb3QgZW5vdWdoIGFtb3VudCB0byB3aXRoZHJhdyIpCiAgICAgICAgLy8gfQoKICAgICAgICBzZWxmLmFtb3VudCA9IGxvY2tlZEJhbGFuY2VVbmxvY2tlZAogICAgCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBzZWxmLmFtb3VudCkpCiAgICB9Cn0=",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdVbmxvY2tlZEZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIC8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCi8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0="
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Qm9va21hcmsgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93dmlld0FjY291bnRCb29rbWFyayBmcm9tIDB4Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsKCnB1YiBmdW4gbWFpbihvd25lcjogQWRkcmVzcywgdGFyZ2V0OiBBZGRyZXNzKTogJkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9PyB7CiAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChvd25lcikKICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtDb2xsZWN0aW9uPihmcm9tOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtDb2xsZWN0aW9uU3RvcmFnZVBhdGgpIHsKICAgIHJldHVybiBjb2xsZWN0aW9uLmJvcnJvd1B1YmxpY0FjY291bnRCb29rbWFyayhhZGRyZXNzOiB0YXJnZXQpCiAgfSAKCiAgcmV0dXJuIG5pbAp9",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Qm9va21hcmtzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MpOiAme0FkZHJlc3M6IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9fT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYWNjb3VudCBib29rbWFyayBjb2xsZWN0aW9uIikKCiAgcmV0dXJuIGNvbGxlY3Rpb24uZ2V0QWNjb3VudEJvb2ttYXJrcygpCn0="
            },
            "bridge": {
              "batchBridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRGcm9tRXZtIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZHM6IFtVSW50MjU2XSkgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKSAqIFVGaXg2NChpZHMubGVuZ3RoKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfSA8LSBzZWxmLmNvYS53aXRoZHJhd05GVCgKICAgICAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchBridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRGcm9tRXZtVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQyNTZdKSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApICogVUZpeDY0KGlkcy5sZW5ndGgpCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICAgICAgdHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgICAgIHNlbGYuY29sbGVjdGlvbi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCBORlQgaW50byB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbgogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchBridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRUb0V2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIAogICAgbGV0IG5mdHM6IEB7VUludDY0IDoge05vbkZ1bmdpYmxlVG9rZW4uTkZUfX0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICBzZWxmLm5mdHMgPC0ge30KICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgc2VsZi5uZnRzW2lkXSA8LSEgbmZ0CiAgICAgICAgfQogICAgICAgIC8vIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwICogVUZpeDY0KGlkcy5sZW5ndGgpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgdmFyIGlkeCA9IDAKICAgICAgICB3aGlsZSBpZHggPCBpZHMubGVuZ3RoIHsKICAgICAgICAgICAgbGV0IG5mdElkID0gaWRzW2lkeF0hCiAgICAgICAgICAgIGxldCBuZnQgPC0gc2VsZi5uZnRzLnJlbW92ZShrZXk6IG5mdElkKSEgYXMgQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgICAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCggCiAgICAgICAgICAgICAgICBuZnQ6IDwtIG5mdCEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgaWR4ID0gaWR4ICsgMQogICAgICAgIH0KICAgICAgIAogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYubmZ0cwogICAgfQp9Cg==",
              "batchBridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRUb0V2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIAogICAgbGV0IG5mdHM6IEB7VUludDY0IDoge05vbkZ1bmdpYmxlVG9rZW4uTkZUfX0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICBzZWxmLm5mdHMgPC0ge30KICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgc2VsZi5uZnRzW2lkXSA8LSEgbmZ0CiAgICAgICAgfQogICAgICAgIC8vIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwICogVUZpeDY0KGlkcy5sZW5ndGgpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgdmFyIGlkeCA9IDAKICAgICAgICB3aGlsZSBpZHggPCBpZHMubGVuZ3RoIHsKICAgICAgICAgICAgbGV0IG5mdElkID0gaWRzW2lkeF0hCiAgICAgICAgICAgIGxldCBuZnQgPC0gc2VsZi5uZnRzLnJlbW92ZShrZXk6IG5mdElkKSEgYXMgQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgICAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCggCiAgICAgICAgICAgICAgICBuZnQ6IDwtIG5mdCEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgaWR4ID0gaWR4ICsgMQogICAgICAgIH0KICAgICAgIAogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYubmZ0cwogICAgfQp9Cg==",
              "batchEvmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hFdm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NlczogQXJyYXkgb2YgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4IHRvIGNoZWNrIGZvcgovLy8gICAgIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vICAgICBpbmRleGVkIG9uIHRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3Qgd2l0aG91dCAweCBwcmVmaXgKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NlczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchEvmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hFdm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzZXM6IEFycmF5IG9mIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeCB0byBjaGVjayBmb3IKLy8vICAgICBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLyAgICAgaW5kZXhlZCBvbiB0aGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IHdpdGhvdXQgMHggcHJlZml4Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzZXM6IFtTdHJpbmddKToge1N0cmluZzogQm9vbD99IHsKICAgIC8vIGxldCBldm1BZGRyZXNzZXMgPSBbIjZBOWRBNWQ2M2ZGMzM1MzY2N0QzNEMwMjAyQzYyOEM3REEzYzJDMWYiXQogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchIdentifierRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hJZGVudGlmaWVyUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXJzOiBbU3RyaW5nXSk6IHtTdHJpbmc6IEJvb2w/fSB7CiAgICBsZXQgcmVzdWx0czoge1N0cmluZzogQm9vbD99ID0ge30KCiAgICBmb3IgaWRlbnRpZmllciBpbiBpZGVudGlmaWVycyB7CiAgICAgICAgaWYgcmVzdWx0c1tpZGVudGlmaWVyXSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICBsZXQgdHlwZTogVHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IGlkZW50aWZpZXIsIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSkKICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchIdentifierRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hJZGVudGlmaWVyUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CgogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgewogICAgICAgIGlmIHJlc3VsdHNbaWRlbnRpZmllcl0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgbGV0IHR5cGU6IFR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBpZGVudGlmaWVyLCBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "batchOnboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlFdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlFdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlJZGVudGlmaWVyIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KHR5cGVzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXJzIGluIGlkZW50aWZpZXJzIHsgCiAgICAgICAgICAgIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgICAgICAvLyBDb250aW51ZSBvbiBpZiB0aGUgdHlwZSBkb2VzIG5vdCByZXF1aXJlIG9uYm9hcmRpbmcKICAgICAgICAgICAgaWYgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpICE9IHRydWUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICB9CiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchOnboardByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlJZGVudGlmaWVyVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCgppbXBvcnQgRVZNIGZyb20gMHhlNDY3YjlkZDExZmEwMGRmCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KGlkZW50aWZpZXJzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgeyAKICAgICAgICAgICAgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByType": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlUeXBlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlUeXBlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchTypeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUeXBlUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKHR5cGVzOiBbVHlwZV0pOiB7VHlwZTogQm9vbD99IHsKICAgIGxldCByZXN1bHRzOiB7VHlwZTogQm9vbD99ID0ge30KICAgIGZvciB0eXBlIGluIHR5cGVzIHsKICAgICAgICBpZiByZXN1bHRzW3R5cGVdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogdHlwZSwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchTypeRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUeXBlUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgLy8gbGV0IGlkZW50aWZpZXJzID0gWyJBLjQ5ZTdhNWE0ZWRlZmU0MmUuRXhhbXBsZVRva2VuLlZhdWx0IiwiQS40OWU3YTVhNGVkZWZlNDJlLkV4YW1wbGVORlQuTkZUIl0KICAgIGxldCByZXN1bHRzOiB7U3RyaW5nOiBCb29sP30gPSB7fQoKICAgIGZvciBpZGVudGlmaWVyIGluIGlkZW50aWZpZXJzIHsKICAgICAgICBpZiByZXN1bHRzW2lkZW50aWZpZXJdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIGxldCB0eXBlOiBUeXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogaWRlbnRpZmllciwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "bridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NikgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NikgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm0gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIAogICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCiAgICAgICAgCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCgKICAgICAgICAgICAgbmZ0OiA8LXNlbGYubmZ0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICAvLyBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2KSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2KSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUKICAgIGxldCByZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlJlY2VpdmVyfQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzIwIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBGdW5naWJsZVRva2VuIFZhdWx0IHR5cGUKICAgICAgICBzZWxmLnZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbkNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBWYXVsdCB0eXBlIG9mOiAiIC5jb25jYXQodG9rZW5Db250cmFjdEFkZHJlc3MudG9TdHJpbmcoKSkuY29uY2F0KCIuIikuY29uY2F0KHRva2VuQ29udHJhY3ROYW1lKS5jb25jYXQoIi5WYXVsdCIpKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBWYXVsdCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdCwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgLy8gSWYgdGhlIHZhdWx0IGRvZXMgbm90IGV4aXN0LCBjcmVhdGUgaXQgYW5kIHB1Ymxpc2ggYWNjb3JkaW5nIHRvIHRoZSBjb250cmFjdCdzIGRlZmluZWQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC12YXVsdERhdGEuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKCiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxldCBtZXRhZGF0YUNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXAsIGF0OiB2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gobWV0YWRhdGFDYXAsIGF0OiB2YXVsdERhdGEubWV0YWRhdGFQYXRoKQogICAgICAgIH0KICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLnJlY2VpdmVyID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmF1bHQgcmVjZWl2ZXIgY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlIHJlcXVlc3QKICAgICAgICBsZXQgdmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdUb2tlbnMoCiAgICAgICAgICAgIHR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIHRva2VuIGludG8gdGhlIHNpZ25lcidzIHZhdWx0CiAgICAgICAgc2VsZi5yZWNlaXZlci5kZXBvc2l0KGZyb206IDwtdmF1bHQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGZ1bmdpYmxlIHRva2VucyBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZQovLy8gRmxvd0VWTUJyaWRnZS4KLy8vCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlCiAgICBsZXQgcmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkMyMCBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gRnVuZ2libGVUb2tlbiBWYXVsdCB0eXBlCiAgICAgICAgc2VsZi52YXVsdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IHRva2VuQ29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiVmF1bHQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgVmF1bHQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQsIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIC8vIElmIHRoZSB2YXVsdCBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGl0IGFuZCBwdWJsaXNoIGFjY29yZGluZyB0byB0aGUgY29udHJhY3QncyBkZWZpbmVkIGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtdmF1bHREYXRhLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCgogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBsZXQgbWV0YWRhdGFDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwLCBhdDogdmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKG1ldGFkYXRhQ2FwLCBhdDogdmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKICAgICAgICB9CiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5yZWNlaXZlciA9IHJlY2VpdmVyQWNjdC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZhdWx0IHJlY2VpdmVyIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZSByZXF1ZXN0CiAgICAgICAgbGV0IHZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9IDwtIHNlbGYuY29hLndpdGhkcmF3VG9rZW5zKAogICAgICAgICAgICB0eXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgYW1vdW50OiBhbW91bnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCB0b2tlbiBpbnRvIHRoZSBzaWduZXIncyB2YXVsdAogICAgICAgIHNlbGYucmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXZhdWx0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensToEvm": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm0gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGEgVmF1bHQgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmFnZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEVWTS5BY2NvdW50LgovLy8KLy8vIE5PVEU6IFRoZSBWYXVsdCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgZnVuZHMgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgbGV0IHZhdWx0ID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlZhdWx0fT4oCiAgICAgICAgICAgICAgICBmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBGdW5naWJsZVRva2VuIFZhdWx0IikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBiYWxhbmNlICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdC53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGluIHN0b3JhZ2UgdXNhZ2Ugd2l0aCBzb21lIGJ1ZmZlcgogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0VG9rZW5zKAogICAgICAgICAgICB2YXVsdDogPC1zZWxmLnNlbnRWYXVsdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBsZXQgdmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCgogICAgICAgIHZhciBhZGRyZXNzQnl0ZXM6IFtVSW50OF0gPSBjb250cmFjdEVWTUFkZHJlc3MuZGVjb2RlSGV4KCkKICAgICAgICBsZXQgZXZtVG9rZW5BZGRyID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgLy8gbGV0IGRhdGEgPSBkYXRhU3RyLmRlY29kZUhleCgpCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0VG9rZW5zKAogICAgICAgICAgICB2YXVsdDogPC1zZWxmLnNlbnRWYXVsdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIGZ1bmRzIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIGxldCB2YXVsdCA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KAogICAgICAgICAgICAgICAgZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgRnVuZ2libGVUb2tlbiBWYXVsdCIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgYmFsYW5jZSAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHQud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICAvLyBBcHByb3hpbWF0ZSB0aGUgYnJpZGdlIGZlZSBiYXNlZCBvbiB0aGUgZGlmZmVyZW5jZSBpbiBzdG9yYWdlIHVzYWdlIHdpdGggc29tZSBidWZmZXIKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "calculateBridgeFee": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2FsY3VsYXRlQnJpZGdlRmVlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB0aGUgY2FsY3VsYXRlZCBmZWUgYmFzZWQgb24gdGhlIG51bWJlciBvZiBieXRlcyB1c2VkIHRvIGVzY3JvdyBhbiBhc3NldCBwbHVzIHRoZSBiYXNlIGZlZS4KLy8vCi8vLyBAcGFyYW0gYnl0ZXM6IFRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQuCi8vLwovLy8gQHJldHVybiBUaGUgY2FsY3VsYXRlZCBmZWUgdG8gYmUgcGFpZCBpbiBGbG93VG9rZW4KLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGJ5dGVzIHVzZWQ6IFVJbnQ2NCk6IFVGaXg2NCB7CiAgICByZXR1cm4gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogdXNlZCkKfQo=",
              "calculateBridgeFeeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2FsY3VsYXRlQnJpZGdlRmVlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgZmVlIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQgcGx1cyB0aGUgYmFzZSBmZWUuCi8vLwovLy8gQHBhcmFtIGJ5dGVzOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHVzZWQgdG8gZXNjcm93IGFuIGFzc2V0LgovLy8KLy8vIEByZXR1cm4gVGhlIGNhbGN1bGF0ZWQgZmVlIHRvIGJlIHBhaWQgaW4gRmxvd1Rva2VuCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihieXRlcyB1c2VkOiBVSW50NjQpOiBVRml4NjQgewogICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IHVzZWQpCn0K",
              "evmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzSGV4OiBUaGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4Ci8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NIZXg6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogZXZtQWRkcmVzc0hleCkgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgIH0KICAgIHJldHVybiBuaWwKfQo=",
              "evmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZ1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk1VdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgd2hldGhlciBhIEVWTSBjb250cmFjdCBuZWVkcyB0byBiZSBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcGFyYW0gZXZtQWRkcmVzc0hleDogVGhlIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeAovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzSGV4OiBTdHJpbmcpOiBCb29sPyB7CiAgICBpZiBsZXQgYWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGV2bUFkZHJlc3NIZXgpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3MpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K",
              "getAssociatedEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QXNzb2NpYXRlZEV2bUFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB0aGUgRVZNIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBnaXZlbiBDYWRlbmNlIHR5cGUgKGFzIGl0cyBpZGVudGlmaWVyIFN0cmluZykKLy8vCi8vLyBAcGFyYW0gdHlwZUlkZW50aWZpZXIgVGhlIENhZGVuY2UgdHlwZSBpZGVudGlmaWVyIFN0cmluZwovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzIGEgaGV4IHN0cmluZyBpZiB0aGUgdHlwZSBoYXMgYW4gYXNzb2NpYXRlZCBFVk1BZGRyZXNzLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihpZGVudGlmaWVyOiBTdHJpbmcpOiBTdHJpbmc/IHsKICAgIGlmIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSB7CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBGbG93RVZNQnJpZGdlQ29uZmlnLmdldEVWTUFkZHJlc3NBc3NvY2lhdGVkKHdpdGg6IHR5cGUpIHsKICAgICAgICAgICAgcmV0dXJuIEVWTVV0aWxzLmdldEVWTUFkZHJlc3NBc0hleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getAssociatedEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QXNzb2NpYXRlZEV2bUFkZHJlc3NUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhlNDY3YjlkZDExZmEwMGRmCgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQoKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuIENhZGVuY2UgdHlwZSAoYXMgaXRzIGlkZW50aWZpZXIgU3RyaW5nKQovLy8KLy8vIEBwYXJhbSB0eXBlSWRlbnRpZmllciBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgU3RyaW5nCi8vLwovLy8gQHJldHVybiBUaGUgRVZNIGFkZHJlc3MgYXMgYSBoZXggc3RyaW5nIGlmIHRoZSB0eXBlIGhhcyBhbiBhc3NvY2lhdGVkIEVWTUFkZHJlc3MsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IFN0cmluZz8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICBpZiBsZXQgYWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VDb25maWcuZ2V0RVZNQWRkcmVzc0Fzc29jaWF0ZWQod2l0aDogdHlwZSkgewogICAgICAgICAgICByZXR1cm4gYWRkcmVzcy50b1N0cmluZygpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIG5pbAp9",
              "getBridgeCoaAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QnJpZGdlQ29hQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcmV0dXJuIFRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UncyBjb29yZGluYXRpbmcgQ2FkZW5jZU93bmVkQWNjb3VudAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2UuZ2V0QnJpZGdlQ09BRVZNQWRkcmVzcygpCiAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "getBridgeCoaAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QnJpZGdlQ29hQWRkcmVzc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgdGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZSdzIGNvb3JkaW5hdGluZyBDYWRlbmNlT3duZWRBY2NvdW50Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZS5nZXRCcmlkZ2VDT0FFVk1BZGRyZXNzKCkKICAgIHJldHVybiBFVk1VdGlscy5nZXRFVk1BZGRyZXNzQXNIZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzcykKfQ==",
              "onboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5RXZtQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgTkZUIHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIE5GVHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIE5GVCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gY29udHJhY3RBZGRyZXNzSGV4OiBUaGUgRVZNIGFkZHJlc3Mgb2YgdGhlIGNvbnRyYWN0IChhcyBoZXggc3RyaW5nIHdpdGhvdXQgMHggcHJlZml4KSBkZWZpbmluZyB0aGUgCi8vLyAgICAgYnJpZGdlYWJsZSBhc3NldCB0byBiZSBvbmJvYXJkZWQKLy8vCnRyYW5zYWN0aW9uKGNvbnRyYWN0QWRkcmVzc0hleDogU3RyaW5nKSB7CgogICAgbGV0IGNvbnRyYWN0QWRkcmVzczogRVZNLkVWTUFkZHJlc3MKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIENvbnN0cnVjdCBFVk1BZGRyZXNzIGZyb20gaGV4IHN0cmluZyAobm8gbGVhZGluZyBgIjB4ImApIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi5jb250cmFjdEFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBjb250cmFjdEFkZHJlc3NIZXgpCiAgICAgICAgICAgID8/IHBhbmljKCJJbnZhbGlkIEVWTSBhZGRyZXNzIHN0cmluZyBwcm92aWRlZCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgRVZNIGNvbnRyYWN0CiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlFVk1BZGRyZXNzKAogICAgICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5RXZtQWRkcmVzc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBjb250cmFjdEFkZHJlc3NIZXg6IFRoZSBFVk0gYWRkcmVzcyBvZiB0aGUgY29udHJhY3QgKGFzIGhleCBzdHJpbmcgd2l0aG91dCAweCBwcmVmaXgpIGRlZmluaW5nIHRoZSAKLy8vICAgICBicmlkZ2VhYmxlIGFzc2V0IHRvIGJlIG9uYm9hcmRlZAovLy8KdHJhbnNhY3Rpb24oY29udHJhY3RBZGRyZXNzSGV4OiBTdHJpbmcpIHsKCiAgICBsZXQgY29udHJhY3RBZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gQ29uc3RydWN0IEVWTUFkZHJlc3MgZnJvbSBoZXggc3RyaW5nIChubyBsZWFkaW5nIGAiMHgiYCkgLS0tICovCiAgICAgICAgLy8KICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc0hleCkKICAgICAgICAgICAgPz8gcGFuaWMoIkludmFsaWQgRVZNIGFkZHJlc3Mgc3RyaW5nIHByb3ZpZGVkIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBFVk0gY29udHJhY3QKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgIHNlbGYuY29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "onboardByType": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSB0eXBlIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZTogVHlwZSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZUlkZW50aWZpZXIgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmVyOiBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXI6IFN0cmluZykgewoKICAgIGxldCB0eXBlOiBUeXBlCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgdGhlIHR5cGUgZnJvbSBpZGVudGlmaWVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi50eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHNlbGYudHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZUlkZW50aWZpZXJUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDFlNGFhMGI4N2QxMGIxNDEKCmltcG9ydCBFVk0gZnJvbSAweGU0NjdiOWRkMTFmYTAwZGYKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmVyOiBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXI6IFN0cmluZykgewoKICAgIGxldCB0eXBlOiBUeXBlCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgdGhlIHR5cGUgZnJvbSBpZGVudGlmaWVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi50eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHNlbGYudHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSB0eXBlIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZTogVHlwZSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "typeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4odHlwZTogVHlwZSk6IEJvb2w/IHsKICAgIHJldHVybiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkKfQo=",
              "typeRequiresOnboardingByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZ0J5SWRlbnRpZmllciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBpZGVudGlmaWVyOiBUaGUgaWRlbnRpZmllciBvZiB0aGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K",
              "typeRequiresOnboardingByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZ0J5SWRlbnRpZmllclRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgdHlwZSBuZWVkcyB0byBiZSBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmllcjogVGhlIGlkZW50aWZpZXIgb2YgdGhlIENhZGVuY2UgVHlwZSBpbiBxdWVzdGlvbgovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSB7CiAgICAgICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKQogICAgfQogICAgcmV0dXJuIG5pbAp9Cg=="
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tORlRDb2xsZWN0aW9uIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKICAgIC8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KICAgIC8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdCg8VG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICByZXR1cm4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgIH0=",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZW5hYmxlTkZUU3RvcmFnZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pID09IG5pbCB7CiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbihuZnRUeXBlOiBUeXBlPEA8TkZUPi5ORlQ+KCkpCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPikgPT0gbmlsKSB7CiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIGxldCBjYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSAgICAgICAgICAgIAogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY2FwLCBhdDogPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKCiAgICAgICAgfQogICAgfQp9",
              "enableNFTStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZW5hYmxlTkZUU3RvcmFnZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZWxvZHlUaWNrZXQgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENhcGFiaWxpdGllcywgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuYm9ycm93PCZNZWxvZHlUaWNrZXQuQ29sbGVjdGlvbj4oTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBNZWxvZHlUaWNrZXQuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb24sIHRvOiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICBpZiAoc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpID09IG5pbCkgewogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSAgICAgICAgICAgIAogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY2FwLCBhdDogTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIH0KICAgIH0KfQ==",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2F0YWxvZ1R5cGVEYXRhIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oKToge1N0cmluZyA6IHtTdHJpbmcgOiBCb29sfX0gewogIGxldCBjYXRhbG9nID0gTkZUQ2F0YWxvZy5nZXRDYXRhbG9nVHlwZURhdGEoKQogIHJldHVybiBjYXRhbG9nCn0=",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCgoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICAgICkKICAgICAgfSAKICAgIH0KICAgZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJZCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUQ2F0YWxvZ0J5Q29sbGVjdGlvbklkcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUQ29sbGVjdGlvbiAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogc3RvcmFnZVBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBwdWJsaWNQYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUQ29sbGVjdGlvblRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZyk6IE5GVENvbGxlY3Rpb24gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkhCiAgcmV0dXJuIE5GVENvbGxlY3Rpb24oCiAgICBpZDogYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSEuaWRlbnRpZmllciwKICAgIHBhdGg6IHN0b3JhZ2VQYXRoLnRvU3RyaW5nKCksCiAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBzdG9yYWdlUGF0aCwgcHVibGljUGF0aDogcHVibGljUGF0aCksCiAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICApCn0=",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZURGlzcGxheXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CmFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwphY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/Cgppbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/LCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgICBzZWxmLmNvbGxlY3Rpb25EaXNwbGF5ID0gY29sbGVjdGlvbkRpc3BsYXkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTDisplaysTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZURGlzcGxheXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUTWV0YWRhdGFWaWV3cyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViewsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUTWV0YWRhdGFWaWV3c1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljUGF0aDogUHVibGljUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkOiBTdHJpbmcsIHRva2VuSUQ6IFVJbnQ2NCk6IHtTdHJpbmc6IEFueVN0cnVjdH0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cykgewogICAgcmV0dXJuIHJlcwogIH0KCiAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkhCiAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICByZXNbInJhcml0eSJdID0gcmFyaXR5CiAgICB9CgogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJkaXNwbGF5Il0gPSBkaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICByZXNbImVkaXRpb25zIl0gPSBlZGl0aW9ucwogICAgfQoKICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICByZXNbInNlcmlhbCJdID0gc2VyaWFsCiAgICB9CgogICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sicm95YWx0aWVzIl0gPSByb3lhbHRpZXMKICAgIH0KCiAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICByZXNbImxpY2Vuc2UiXSA9IGxpY2Vuc2UKICAgIH0KCiAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJtZWRpYXMiXSA9IG1lZGlhcwogICAgfQoKICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJleHRlcm5hbFVSTCJdID0gZXh0ZXJuYWxVUkwKICAgIH0KCiAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJ0cmFpdHMiXSA9IHRyYWl0cwogICAgfQoKICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJjb2xsZWN0aW9uRGlzcGxheSJdID0gY29sbGVjdGlvbkRpc3BsYXkKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgIGxldCBkYXRhID0gQ29sbGVjdGlvbkRhdGEoCiAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "getNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayPageTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUc0Rpc3BsYXlQYWdlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KICBhY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHN0YXJ0OiBJbnQsIGVuZDogSW50KToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhICAKICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KHB1YmxpY1BhdGgpIQogIHZhciB0b2tlbklEcyA9IGNvbGxlY3Rpb25DYXAuZ2V0SURzKCkKICBsZXQgbGVuID0gdG9rZW5JRHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiByZXMKICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVtID0gbGVuCiAgICAgIH0KICAgIH0KICB0b2tlbklEcyA9IHRva2VuSURzLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW0gKQogIAogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIAogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUc0Rpc3BsYXlUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZyk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpISAgCiAgbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJsaWNQYXRoKSEKICBsZXQgdG9rZW5JRHMgPSBjb2xsZWN0aW9uQ2FwLmdldElEcygpCiAgCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTsMetadataViewPageTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUc01ldGFkYXRhVmlld1BhZ2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCBzdGFydDogSW50LCBlbmQ6IEludCk6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IG5mdHM6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSA9IFtdCgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24sIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIG5mdHMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogCiAgbGV0IHRva2VuSURzID0gY29sbGVjdGlvblJlZiEuZ2V0SURzKCkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHx8IHRva2VuSURzLmxlbmd0aCA9PSAwKSB7CiAgICAgIHJldHVybiBuZnRzCiAgICB9CgogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKCiAgICBsZXQgcmVzOntTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQogICAgCiAgICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQodG9rZW5JRCkKCiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IHJhcml0eSA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgICB9CgogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgZWRpdGlvbnMgPSBNZXRhZGF0YVZpZXdzLmdldEVkaXRpb25zKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgICAgfQoKICAgICAgaWYgbGV0IHNlcmlhbCA9IE1ldGFkYXRhVmlld3MuZ2V0U2VyaWFsKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgICB9CgogICAgICBpZiBsZXQgcm95YWx0aWVzID0gTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHRpZXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICAgIH0KCiAgICAgIGlmIGxldCBsaWNlbnNlID0gTWV0YWRhdGFWaWV3cy5nZXRMaWNlbnNlKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICAgIH0KCiAgICAgIGlmIGxldCBtZWRpYXMgPSBNZXRhZGF0YVZpZXdzLmdldE1lZGlhcyhyZXNvbHZlcikgewogICAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgICAgfQoKICAgICAgaWYgbGV0IGV4dGVybmFsVVJMID0gTWV0YWRhdGFWaWV3cy5nZXRFeHRlcm5hbFVSTChyZXNvbHZlcikgewogICAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICAgIH0KCiAgICAgIGlmIGxldCB0cmFpdHMgPSBNZXRhZGF0YVZpZXdzLmdldFRyYWl0cyhyZXNvbHZlcikgewogICAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgICAgfQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb25EaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGF0YSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRhdGEocmVzb2x2ZXIpIHsKICAgICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgICAgcHVibGljUGF0aDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCwKICAgICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICAgICkKICAgICAgICByZXNbImNvbGxlY3Rpb25EYXRhIl0gPSBkYXRhCiAgICAgIH0KICAgIH0KICAgIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICAgIG5mdHMuYXBwZW5kKHJlcykKICB9CiAgbGV0IGxlbiA9IG5mdHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiBbXQogICAgfSBlbHNlIHsKICAgICAgaWYgbGVuIDwgZW5kIHsKICAgICAgICBlbmROdW0gPSBsZW4KICAgICAgfQogICAgfQoKICByZXR1cm4gbmZ0cy5zbGljZShmcm9tOiBzdGFydCwgdXBUbzogZW5kTnVtICkKfQ==",
              "getNFTsMetadataViewTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0TkZUc01ldGFkYXRhVmlld1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljUGF0aDogUHVibGljUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkOiBTdHJpbmcpOiBbe1N0cmluZzogQW55U3RydWN0fV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBuZnRzOiBbe1N0cmluZzogQW55U3RydWN0fV0gPSBbXQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiBuZnRzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKIAogIGxldCB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYhLmdldElEcygpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB8fCB0b2tlbklEcy5sZW5ndGggPT0gMCkgewogICAgICByZXR1cm4gbmZ0cwogICAgfQoKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CgogICAgbGV0IHJlczp7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KICAgIAogICAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKSEKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICAgICAgfQoKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICAgICAgfQoKICAgICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgICAgIH0KCiAgICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICAgICAgfQoKICAgICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogICAgICB9CgogICAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogICAgICB9CgogICAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgICAgIH0KCiAgICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogICAgICB9CgogICAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICApCiAgICAgICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogICAgICB9CiAgICB9CiAgICByZXNbInRva2VuSWQiXSA9IHRva2VuSUQKCiAgICBuZnRzLmFwcGVuZChyZXMpCiAgfQoKCiAgCgogIHJldHVybiBuZnRzCn0=",
              "getUserCollections": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgY29sbGVjdGlvblBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCgogIGZ1biBlYWNoUGF0aChwYXRoOiBTdG9yYWdlUGF0aCwgVHlwZTogVHlwZSk6IEJvb2wgewogICAKICAgIGlmIFR5cGUgIT0gbmlsIHsKICAgICAgaWYgVHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICB9CiAgICAgIAogICAgfQogICAKICAgIHJldHVybiB0cnVlCiAgfQoKICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChlYWNoUGF0aCkKCiAgZm9yIHBhdGggaW4gY29sbGVjdGlvblBhdGhzIHsKICAgIGxldCBwYXRoU3RyID0gcGF0aC50b1N0cmluZygpCiAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgbGV0IGlkZW50aWZpZXIgPSBzcGxpdEFyclsyXQogICAgbGV0IHB1YlBhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQogICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCgogICAgY29sbGVjdGlvbnMuYXBwZW5kKAogICAgICBORlRDb2xsZWN0aW9uKAogICAgICBpZDogaWRlbnRpZmllciwKICAgICAgcGF0aDogcHViUGF0aC50b1N0cmluZygpLAogICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICkKICAgICkKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "getUserCollectionsPage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zUGFnZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCiAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCiAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogICAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwogIAogICAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICAgIHNlbGYubmFtZSA9IG5hbWUKICAgICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgICB9CiAgfQogIAogIGFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQogIAogICAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICAgIHNlbGYuaWQgPSBpZAogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICAgIH0KICB9CiAgCiAgYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCiAgCiAgICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICAKICAgICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogIAogICAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAKICAgIHJldHVybiBpdGVtCiAgfQogIAogIGFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RhcnQ6IEludCwgZW5kOiBJbnQpOiBbTkZUQ29sbGVjdGlvbl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IGNvbGxlY3Rpb25QYXRoczogW1N0b3JhZ2VQYXRoXSA9IFtdCiAgICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgCiAgICBmdW4gZWFjaFBhdGgocGF0aDogU3RvcmFnZVBhdGgsIFR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAKICAgICAgaWYgVHlwZSAhPSBuaWwgewogICAgICAgIGlmIFR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICAgIH0KICAgICAgICAKICAgICAgfQogICAgIAogICAgICByZXR1cm4gdHJ1ZQogICAgfQogIAogICAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZWFjaFBhdGgpCiAgCiAgICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgICBsZXQgcGF0aFN0ciA9IHBhdGgudG9TdHJpbmcoKQogICAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICAgIGxldCBwdWJQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKICAgICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCiAgCiAgICAgIGNvbGxlY3Rpb25zLmFwcGVuZCgKICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgIGlkOiBpZGVudGlmaWVyLAogICAgICAgIHBhdGg6IHB1YlBhdGgudG9TdHJpbmcoKSwKICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgICApCiAgICAgICkKICAgICAgCiAgICB9CgogICAgbGV0IGxlbiA9IGNvbGxlY3Rpb25zLmxlbmd0aAogICAgdmFyIGVuZE51biA9IGVuZAogICAgaWYgbGVuIDwgc3RhcnQgewogICAgICByZXR1cm4gW10KICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVuID0gbGVuCiAgICAgIH0KICAgIH0KICAgIAogICAgcmV0dXJuIGNvbGxlY3Rpb25zLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW4gKQogIH0=",
              "getUserCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIGFjY2VzcyhhbGwpIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBjb2xsZWN0aW9uUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGxldCBjb2xsZWN0aW9uczogW05GVENvbGxlY3Rpb25dID0gW10KCiAgZnVuIGVhY2hQYXRoKHBhdGg6IFN0b3JhZ2VQYXRoLCBUeXBlOiBUeXBlKTogQm9vbCB7CiAgIAogICAgaWYgVHlwZSAhPSBuaWwgewogICAgICBpZiBUeXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICBjb2xsZWN0aW9uUGF0aHMuYXBwZW5kKHBhdGgpCiAgICAgIH0KICAgICAgCiAgICB9CiAgIAogICAgcmV0dXJuIHRydWUKICB9CgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGVhY2hQYXRoKQoKICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgbGV0IHBhdGhTdHIgPSBwYXRoLnRvU3RyaW5nKCkKICAgIGxldCBzcGxpdEFyciA9IHBhdGhTdHIuc3BsaXQoc2VwYXJhdG9yOiAiLyIpCiAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICBsZXQgcHViUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCiAgICBsZXQgY29sbGVjdGlvbiA9ICBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJQYXRoKSEKCiAgICBjb2xsZWN0aW9ucy5hcHBlbmQoCiAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogcGF0aCkhLmlkZW50aWZpZXIsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogcGF0aCwgcHVibGljUGF0aDogcHViUGF0aCksCiAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICApCiAgICApCiAgICAKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZE5iYU5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5jYXBhYmlsaXRpZXMKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9",
              "sendNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZE5GVFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZWxvZHlUaWNrZXQgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCi8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgoKdHJhbnNhY3Rpb24ocmVjaXBpZW50OiBBZGRyZXNzLCB3aXRoZHJhd0lEOiBVSW50NjQpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IHJlY2lwaWVudAogICAgICAgICAgICAuY2FwYWJpbGl0aWVzCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9"
            },
            "contract": {
              "getContractByName": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29udHJhY3RCeU5hbWUgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIGNvbnRyYWN0TmFtZTogU3RyaW5nKTogU3RyaW5nPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGRlcGxveWVkQ29udHJhY3QgPSBhY2NvdW50LmNvbnRyYWN0cy5nZXQobmFtZTogY29udHJhY3ROYW1lKQoKICByZXR1cm4gU3RyaW5nLmZyb21VVEY4KGRlcGxveWVkQ29udHJhY3Q/LmNvZGUhKQp9",
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29udHJhY3ROYW1lcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6ICZbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2xhaW1GVEZyb21JbmJveCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2xhaW1ORlRGcm9tSW5ib3ggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCmltcG9ydCBGbG93bnMgZnJvbSAweEZsb3ducwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCi8vIGtleSB3aWxsIGJlICdBLmY4ZDZlMDU4NmIwYTIwYzcuRG9tYWlucy5Db2xsZWN0aW9uJyBvZiBhIE5GVCBjb2xsZWN0aW9uCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDogU3RyaW5nLCBrZXk6IFN0cmluZywgaXRlbUlkOiBVSW50NjQpIHsKdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9CnZhciBjb2xsZWN0aW9uUmVmOiAmPE5GVD4uQ29sbGVjdGlvbgpwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICBsZXQgcHJlZml4ID0gIjB4IgogICAgbGV0IHJvb3RIYWhzaCA9IEZsb3ducy5oYXNoKG5vZGU6ICIiLCBsYWJsZTogcm9vdCkKICAgIGxldCBuYW1lSGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCiAgICB2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0/ID0gbmlsCiAgICBsZXQgY29sbGVjdGlvblByaXZhdGUgPSBhY2NvdW50LmJvcnJvdzwme0RvbWFpbnMuQ29sbGVjdGlvblByaXZhdGV9Pihmcm9tOiBEb21haW5zLkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBmaW5kIHlvdXIgZG9tYWluIGNvbGxlY3Rpb24gY2FwIikKCiAgICBsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQogICAgaWYgaWQgIT1uaWwgewogICAgZG9tYWluID0gY29sbGVjdGlvblByaXZhdGUuYm9ycm93RG9tYWluUHJpdmF0ZShpZCEpCiAgICB9CiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIGFjY291bnQuc2F2ZSg8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgYWNjb3VudC5saW5rPCY8Q29sbGVjdGlvblB1YmxpY1R5cGU+Pig8Q29sbGVjdGlvblB1YmxpY1BhdGg+LCB0YXJnZXQ6IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgc2VsZi5jb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KT8/IHBhbmljKCJDYW4gbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKICAgIH0gZWxzZSB7CiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBjb2xsZWN0aW9uUmVmIQogICAgfQoKfQpleGVjdXRlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZi5kZXBvc2l0KHRva2VuOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd05GVChrZXk6IGtleSwgaXRlbUlkOiBpdGVtSWQpKQp9Cn0=",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWRkcmVzc09mRG9tYWluIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZyk6IEFkZHJlc3M/IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0QWRkcmVzc09mRG9tYWluKG5hbWU6IG5hbWUsIHJvb3Q6IHJvb3QpCn0=",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVmYXVsdERvbWFpbnNPZkFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBEb21haW5VdGlscyBmcm9tIDB4Rmxvd2JveAoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdHJpbmd9IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0RGVmYXVsdERvbWFpbnNPZkFkZHJlc3MoYWRkcmVzcykKfQ==",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Rmxvd25zSW5ib3ggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93bnMgZnJvbSAweEZsb3ducwppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwoKcHViIGZ1biBnZXREZXRhaWwobmFtZUhhc2g6IFN0cmluZyk6IERvbWFpbnMuRG9tYWluRGV0YWlsPyB7CmxldCBhZGRyZXNzID0gRG9tYWlucy5nZXRSZWNvcmRzKG5hbWVIYXNoKSA/PyBwYW5pYygiRG9tYWluIG5vdCBleGlzdCIpCmxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQpsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCmxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKdmFyIGRldGFpbDogRG9tYWlucy5Eb21haW5EZXRhaWw/ID0gbmlsCgpsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQppZiBpZCAhPSBuaWwgJiYgIURvbWFpbnMuaXNEZXByZWNhdGVkKG5hbWVIYXNoOiBuYW1lSGFzaCwgZG9tYWluSWQ6IGlkISkgewogICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCEpCiAgICBkZXRhaWwgPSBkb21haW4uZ2V0RGV0YWlsKCkKfQoKcmV0dXJuIGRldGFpbAp9CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IHByZWZpeCA9ICIweCIKbGV0IHJvb3RIYWhzaCA9IEZsb3ducy5oYXNoKG5vZGU6ICIiLCBsYWJsZTogcm9vdCkKbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKcmV0dXJuIGdldERldGFpbChuYW1lSGFzaDogbmFtZUhhc2gpCn0=",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZEluYm94TkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgIGxldCBzZW5kZXJSZWYgPSBzaWduZXIKICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgaWYgcmVjaXBpZW50UmVmID09IG5pbCB7CiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgIGRlZmF1bHREb21haW4gPSBkb21haW4KICAgICAgICB9CiAgICB9CiAgICBsZXQgdHlwZUtleSA9IGNvbGxlY3Rpb25SZWYuZ2V0VHlwZSgpLmlkZW50aWZpZXIKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIGRlZmF1bHREb21haW4hLmFkZENvbGxlY3Rpb24oY29sbGVjdGlvbjogPC0gY29sbGVjdGlvbikKICAgIH0KICAgIGRlZmF1bHREb21haW4hLmRlcG9zaXRORlQoa2V5OiB0eXBlS2V5LCB0b2tlbjogPC0gbmZ0LCBzZW5kZXJSZWY6IHNlbmRlclJlZiApCiAgICB9IGVsc2UgewogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJJbmJveFRva2VucyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
            },
            "evm": {
              "call": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2FsbCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkRGF0YTogU3RyaW5nLCBoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oQWRkcmVzcygweENPQSkpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCgogICAgbGV0IGNhbGxSZXN1bHQgPSBjb2EuY2FsbCgKICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgZGF0YTogaGV4RW5jb2RlZERhdGEuZGVjb2RlSGV4KCksCiAgICAgICAgZ2FzTGltaXQ6IDE1MDAwMDAwLCAvLyB0b2RvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBtYXggZm9yIG5vdwogICAgICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICkKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChjYWxsUmVzdWx0LmRhdGEpCn0K",
              "callContract": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2FsbENvbnRyYWN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHRvRVZNQWRkcmVzc0hleDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBjb2E6IGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgcmVjaXBpZW50RVZNQWRkcmVzczogRVZNLkVWTUFkZHJlc3MKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IC9zdG9yYWdlL2V2bSkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCksIHRvOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgfQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgYnJpZGdlZCBhY2NvdW50IikKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHRvRVZNQWRkcmVzc0hleCkKICAgICAgICAvLyAgICAgPz8gcGFuaWMoIkludmFsaWQgcmVjaXBpZW50IEVWTSBhZGRyZXNzIikKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gdG9FVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgaWYgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLmJ5dGVzID09IHNlbGYuY29hLmFkZHJlc3MoKS5ieXRlcyB7CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgdmFsdWVCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIGxldCBjYWxsUmVzdWx0ID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcywKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQogICAgICAgIGFzc2VydChjYWxsUmVzdWx0LnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJUcmFuc2ZlciB0byByZWNpcGllbnQgZmFpbGVkIikKICAgIH0KfQ==",
              "callTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2FsbFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWREYXRhOiBTdHJpbmcsIGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQoKICAgIGxldCBjYWxsUmVzdWx0ID0gY29hLmNhbGwoCiAgICAgICAgdG86IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpLAogICAgICAgIGRhdGE6IGhleEVuY29kZWREYXRhLmRlY29kZUhleCgpLAogICAgICAgIGdhc0xpbWl0OiAxNTAwMDAwMCwgLy8gdG9kbyBtYWtlIGl0IGNvbmZpZ3VyYWJsZSwgbWF4IGZvciBub3cKICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICkKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChjYWxsUmVzdWx0LmRhdGEpCn0K",
              "createAccountCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIA==",
              "createCoa": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQ29hIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaEmpty": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQ29hRW1wdHkgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCgovLy8gQ3JlYXRlcyBhIENPQSBhbmQgc2F2ZXMgaXQgaW4gdGhlIHNpZ25lcidzIEZsb3cgYWNjb3VudCAmIHBhc3NpbmcgdGhlIGdpdmVuIHZhbHVlIG9mIEZsb3cgaW50byBGbG93RVZNCnRyYW5zYWN0aW9uKCkgewogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGNvYSA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtY29hLCB0bzogc3RvcmFnZVBhdGgpCiAgICAgICAgbGV0IGFkZHJlc3NhYmxlQ2FwID0gc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oc3RvcmFnZVBhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy51bnB1Ymxpc2gocHVibGljUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnB1Ymxpc2goYWRkcmVzc2FibGVDYXAsIGF0OiBwdWJsaWNQYXRoKQogICAgfQp9",
              "createCoaEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQ29hRW1wdHlUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbigpIHsKICAgIGxldCBhdXRoOiBhdXRoKElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlQ29hVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQoKaW1wb3J0IEVWTSBmcm9tIDB4ZTQ2N2I5ZGQxMWZhMDBkZgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "deployContract": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZGVwbG95Q29udHJhY3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCgp0cmFuc2FjdGlvbihjb2RlOiBTdHJpbmcpIHsKICAgIGxldCBjb2E6IGF1dGgoRVZNLkRlcGxveSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5EZXBsb3kpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgc2VsZi5jb2EuZGVwbG95KGNvZGU6IGNvZGUuZGVjb2RlSGV4KCksICBnYXNMaW1pdDogMTUwMDAwMDAsIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkpCiAgICB9Cn0K",
              "estimateGas": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZXN0aW1hdGVHYXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZFR4OiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBbVUludDY0OyAyXSB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCB0eFJlc3VsdCA9IEVWTS5ydW4odHg6IGhleEVuY29kZWRUeC5kZWNvZGVIZXgoKSwgY29pbmJhc2U6IGNvYS5hZGRyZXNzKCkpCgogICAgcmV0dXJuIFt0eFJlc3VsdC5lcnJvckNvZGUsIHR4UmVzdWx0Lmdhc1VzZWRdCn0K",
              "estimateGasTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZXN0aW1hdGVHYXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRUeDogU3RyaW5nLCBhZGRyZXNzOiBBZGRyZXNzKTogW1VJbnQ2NDsgMl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBjb2EuYWRkcmVzcygpKQoKICAgIHJldHVybiBbdHhSZXN1bHQuZXJyb3JDb2RlLCB0eFJlc3VsdC5nYXNVc2VkXQp9Cg==",
              "fundCoa": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZnVuZENvYSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgoKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICAgICAgc2VsZi5jb2EgPSBjb2EKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "fundCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZnVuZENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IEVWTSBmcm9tIDB4ZTQ2N2I5ZGQxMWZhMDBkZgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgoKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICAgICAgc2VsZi5jb2EgPSBjb2EKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "fundEvmAddr": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZnVuZEV2bUFkZHIgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGV2bUFkZHI6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "fundEvmAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZnVuZEV2bUFkZHJUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgLy8gbGV0IGFkZHJlc3NCeXRlczogW1VJbnQ4OyAyMF0KICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgCiAgICAgICAgbGV0IGFkZHJlc3NCeXRlcyA9ICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMiwgMjM5LCAxNTUsIDcsIDUwLCAyMzgsIDE3MCwgMTAxLCAyMjBdCiAgICAgICAgLy8gc2VsZi5hZGRyZXNzQnl0ZXMgPSAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDIsIDIzOSwgMTU1LCA3LCA1MCwgMjM4LCAxNzAsIDEwMSwgMjIwXQoKICAgICAgICBzZWxmLmFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIEludGVybmFsRVZNLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCwgdG86IHNlbGYuYWRkcmVzcy5ieXRlcykKCiAgICB9Cn0=",
              "getAddr": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWRkciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZmxvd0FkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmc/IHsKICAgIGlmIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IGdldEF1dGhBY2NvdW50PGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50PihmbG93QWRkcmVzcykKICAgICAgICAuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pPy5hZGRyZXNzKCkgewogICAgICAgIGxldCBieXRlczogW1VJbnQ4XSA9IFtdCiAgICAgICAgZm9yIGJ5dGUgaW4gYWRkcmVzcy5ieXRlcyB7CiAgICAgICAgICAgIGJ5dGVzLmFwcGVuZChieXRlKQogICAgICAgIH0KICAgICAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChieXRlcykKICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLmJhbGFuY2UoKS5pbkF0dG9GTE9XKCkKfQo=",
              "getBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBVSW50IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3MuYmFsYW5jZSgpLmluQXR0b0ZMT1coKQp9Cg==",
              "getCoaAddr": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29hQWRkciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKQoKICAgIGlmIGNvYSA9PSBuaWwgeyAKICAgICAgICByZXR1cm4gIiIKICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IGNvYUFkZHIgPSBjb2E/LmFkZHJlc3MoKSAKCiAgICAgICAgbGV0IGFkZHJCeXRlOiBbVUludDhdID0gW10KCiAgICAgICAgZm9yIGJ5dGUgaW4gY29hQWRkcj8uYnl0ZXMhIHsKICAgICAgICAgICAgYWRkckJ5dGUuYXBwZW5kKGJ5dGUpCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyQnl0ZSkKICAgIH0KfQo=",
              "getCoaAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29hQWRkclRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweGU0NjdiOWRkMTFmYTAwZGYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApCgogICAgaWYgY29hID09IG5pbCB7IAogICAgICAgIHJldHVybiAiIgogICAgfSBlbHNlIHsKICAgICAgICBsZXQgY29hQWRkciA9IGNvYT8uYWRkcmVzcygpIAoKICAgICAgICBsZXQgYWRkckJ5dGU6IFtVSW50OF0gPSBbXQoKICAgICAgICBmb3IgYnl0ZSBpbiBjb2FBZGRyPy5ieXRlcyEgewogICAgICAgICAgICBhZGRyQnl0ZS5hcHBlbmQoYnl0ZSkKICAgICAgICB9CgogICAgICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJCeXRlKQogICAgfQp9Cg==",
              "getCoaBalance": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29hQmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgcmV0dXJuIGNvYS5iYWxhbmNlKCkuaW5GTE9XKCkKfQo=",
              "getCoaBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29hQmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICByZXR1cm4gY29hLmJhbGFuY2UoKS5pbkZMT1coKQp9Cg==",
              "getCode": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29kZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkcmVzcy5jb2RlKCkpCn0K",
              "getCodeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q29kZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyZXNzLmNvZGUoKSkKfQo=",
              "getNonce": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9uY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQ2NCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLm5vbmNlKCkKfQo=",
              "getNonceTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9uY2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludDY0IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3Mubm9uY2UoKQp9Cg==",
              "newAccountAndCoa": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgbmV3QWNjb3VudEFuZENvYSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "newAccountAndCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgbmV3QWNjb3VudEFuZENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMDAwNSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "newAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgbmV3QWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewoKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKCiAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleSwgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29yaXRobSkhLCB3ZWlnaHQ6IHdlaWdodCkKCQkKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjApIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gYWNjb3VudAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50IDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsb2coYWNjb3VudC5hZGRyZXNzKCkpCiAgICAgICAgYWNjb3VudC5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhhY2NvdW50LmJhbGFuY2UoKSkKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQo=",
              "run": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcnVuIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGhleEVuY29kZWRUeDogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBzZWxmLmNvYS5hZGRyZXNzKCkpCiAgICAgICAgLy8gdG9kbyBvbmx5IHRlbXBvcmFyeSB1bnRpbCB3ZSBjb3JyZWN0bHkgaGFuZGxlIGZhaWx1cmUgZXZlbnRzCiAgICAgICAgYXNzZXJ0KAogICAgICAgICAgICB0eFJlc3VsdC5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLAogICAgICAgICAgICBtZXNzYWdlOiAiZmFpbGVkIHRvIGV4ZWN1dGUgZXZtIHRyYW5zYWN0aW9uOiAiLmNvbmNhdCh0eFJlc3VsdC5lcnJvckNvZGUudG9TdHJpbmcoKSkKICAgICAgICApCiAgICB9Cn0K",
              "runTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcnVuVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24oaGV4VHJ4RGF0YTogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBFVk0ucnVuKAogICAgICAgICAgICB0eDogaGV4VHJ4RGF0YS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgY29pbmJhc2U6IHNlbGYuY29hLmFkZHJlc3MoKQogICAgICAgICkgCgogICAgfQp9Cg==",
              "transferCoa": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDb2EgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiBVSW50KGFtb3VudCkgKiAxMDAwMDAwMDAwMDAwMDAwMDApKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "transferCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDb2FUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCByZXZpZXZlcjogQWRkcmVzcykgewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBsZXQgcmV2aWV2ZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudD4ocmV2aWV2ZXIpCiAgICAgICAgLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIAogICAgICAgIHJldmlldmVyLmRlcG9zaXQoZnJvbTogPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiBVSW50KGFtb3VudCkgKiAxMDAwMDAwMDAwMDAwMDAwMDApKSBhcyEgQEZsb3dUb2tlbi5WYXVsdCkKCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAKICAgIH0KfQo=",
              "transferFlowFromCoaToFlow": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93RnJvbUNvYVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIGxldCB3aXRoZHJhd0JhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB3aXRoZHJhd0JhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IHdpdGhkcmF3QmFsYW5jZSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "transferFlowFromCoaToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93RnJvbUNvYVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIGxldCB3aXRoZHJhd0JhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB3aXRoZHJhd0JhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IHdpdGhkcmF3QmFsYW5jZSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "transferFlowToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "transferFlowToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "withdrawCoa": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdDb2EgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "withdrawCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdDb2FUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo="
            },
            "hybridCustody": {
              "addNFTCollectionToDelegator": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkTkZUQ29sbGVjdGlvblRvRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24ocGFyZW50OiBBZGRyZXNzLCBpc1B1YmxpYzogQm9vbCkgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgbyA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgbGV0IGNoaWxkOiAmSHlicmlkQ3VzdG9keS5DaGlsZEFjY291bnQgPSBvLmJvcnJvd0NoaWxkQWNjb3VudChwYXJlbnQ6IHBhcmVudCkKICAgICAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IGNhcCA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oRXhhbXBsZU5GVC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgby5hZGRDYXBhYmlsaXR5VG9EZWxlZ2F0b3IocGFyZW50OiBwYXJlbnQsIGNhcDogY2FwLCBpc1B1YmxpYzogaXNQdWJsaWMpCiAgICB9Cn0=",
              "addNFTCollectionToDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYWRkTkZUQ29sbGVjdGlvblRvRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg4OTIwZmZkM2Q4NzY4ZGFhCgp0cmFuc2FjdGlvbihwYXJlbnQ6IEFkZHJlc3MsIGlzUHVibGljOiBCb29sKSB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBvID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICBsZXQgY2hpbGQ6ICZIeWJyaWRDdXN0b2R5LkNoaWxkQWNjb3VudCA9IG8uYm9ycm93Q2hpbGRBY2NvdW50KHBhcmVudDogcGFyZW50KQogICAgICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQoKICAgICAgICBsZXQgY2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRXhhbXBsZU5GVC5Db2xsZWN0aW9uPigvc3RvcmFnZS9jYWRlbmNlRXhhbXBsZU5GVENvbGxlY3Rpb24pCiAgICAgICAgby5hZGRDYXBhYmlsaXR5VG9EZWxlZ2F0b3IocGFyZW50OiBwYXJlbnQsIGNhcDogY2FwLCBpc1B1YmxpYzogaXNQdWJsaWMpCiAgICB9Cn0=",
              "batchSendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgIAogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchSendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gRXhhbXBsZU5GVC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlTkZUIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgIAogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchSendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchSendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gRXhhbXBsZU5GVC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlTkZUIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchTransferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2ZlckNoaWxkTkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsICBpZHM6IFtVSW50NjRdICkgewoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxORlQ+ICIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICBmb3IgaWQgaW4gaWRzIHsgICAgIAogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchTransferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2ZlckNoaWxkTkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCAgaWRzOiBbVUludDY0XSApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQogICAgbGV0IHJlY2VpdmVyUmVmID0gIHNpZ25lci5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgZm9yIGlkIGluIGlkcyB7ICAgICAKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KICB9Cn0=",
              "batchTransferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2Zlck5GVFRvQ2hpbGQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IGNoaWxkQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4KICAgIGFzc2VydChjaGlsZENhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgbGV0IHBhcmVudFJlZiA9ICBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tIDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpIQogICAgbGV0IGNoaWxkUmVmID0gY2hpbGRDYXAuYm9ycm93KCkhCgogICAgZm9yIGlkIGluIGlkcyB7ICAgICAKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IG5mdCA8LSBwYXJlbnRSZWYhLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKSEKICAgICAgICBjaGlsZFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchTransferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2Zlck5GVFRvQ2hpbGRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsgICAgIAogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIHBhcmVudFJlZiEud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpIQogICAgICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KICB9Cn0=",
              "bridgeChildFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlQ2hpbGRGVFRvRXZtVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgoKCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY2hpbGQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICAgICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgIAogICAgICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgICAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgICAgICAKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBzZWxmLnBheW1lbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBiYWxhbmNlICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdC53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGluIHN0b3JhZ2UgdXNhZ2Ugd2l0aCBzb21lIGJ1ZmZlcgogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgKQoKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYucGF5bWVudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQog",
              "bridgeChildNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgYnJpZGdlQ2hpbGRORlRUb0V2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50NjQsIGNoaWxkOiBBZGRyZXNzKSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCgogICAgICAgICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgICAgCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "checkChildLinkedCollections": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZENvbGxlY3Rpb25zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZENvbGxlY3Rpb25zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MsIHBhdGg6IFN0cmluZyk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIAogIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhKQogIHZhciBmbGFnID0gZmFsc2UKCiAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICBjb250aW51ZQogICAgfQoKICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgY29udGludWUKICAgICAgfQoKICAgICAgZmxhZyA9IHRydWUKICAgICAgYnJlYWsKICAgIH0KICB9CgogIHJldHVybiBmbGFnCn0gCiAgICA=",
              "checkChildLinkedVaults": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZFZhdWx0cyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweENhcGFiaWxpdHlGaWx0ZXIKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MsIHBhdGg6IFN0cmluZyk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIAogIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhKQogIHZhciBmbGFnID0gZmFsc2UKCiAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICBjb250aW51ZQogICAgfQoKICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgY29udGludWUKICAgICAgfQoKICAgICAgZmxhZyA9IHRydWUKICAgICAgYnJlYWsKICAgIH0KICB9CgogIHJldHVybiBmbGFnCn0gCiAgICA=",
              "checkChildLinkedVaultsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZFZhdWx0c1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCi8vIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcpOiBCb29sIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCgogIGxldCBhZGRyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihjaGlsZCkKICAKICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQoKICBsZXQgY29udHJvbGxlcnMgPSBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGgpISkKICB2YXIgZmxhZyA9IGZhbHNlCgogIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgY29udGludWUKICAgIH0KCiAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgIGNvbnRpbnVlCiAgICAgIH0KCiAgICAgIGZsYWcgPSB0cnVlCiAgICAgIGJyZWFrCiAgICB9CiAgfQoKICByZXR1cm4gZmxhZwp9IAogICAg",
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZWRpdENoaWxkQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
              "getAccessibleChildAccountNFTs": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNoaWxkQWNjb3VudE5GVHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogQW55U3RydWN0IHsKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlciA9IHt9IGFzIHtBZGRyZXNzOiBbU3RyaW5nXX0KCiAgLy8gQWRkcmVzcyAtPiBuZnQgVVVJRCAtPiBEaXNwbGF5CiAgdmFyIG5mdFZpZXdzID0ge30gYXMge0FkZHJlc3M6IHtVSW50NjQ6IE1ldGFkYXRhVmlld3MuRGlzcGxheX19IAoKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQogICAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICAgIGxldCB2aWV3czoge1VJbnQ2NDogTWV0YWRhdGFWaWV3cy5EaXNwbGF5fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgCiAgICAvLyB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCEpCiAgICAgIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQogICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwogICAgCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmlld3MKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgCiAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgICB9CgogICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgZm9yIGlkIGluIGNvbGxlY3Rpb24uZ2V0SURzKCkgewogICAgICAgICAgICAgICAgbGV0IG5mdCA9IGNvbGxlY3Rpb24uYm9ycm93TkZUKGlkKSEKICAgICAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb24uYm9ycm93Vmlld1Jlc29sdmVyKGlkOiBpZCkhCiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IHJlc29sdmVyLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKSEgYXM/IE1ldGFkYXRhVmlld3MuRGlzcGxheSB7CiAgICAgICAgICAgICAgICAgIHZpZXdzLmluc2VydChrZXk6IG5mdC51dWlkLCBkaXNwbGF5KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSkKICAgIG5mdFZpZXdzW2FkZHJlc3NdID0gdmlld3MKICB9CiAgcmV0dXJuIG5mdFZpZXdzCn0=",
              "getAccessibleChildAccountNFTsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNoaWxkQWNjb3VudE5GVHNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI5NGU0NGUxZWM2OTkzYzYKCgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6IEFueVN0cnVjdCB7CiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXIgPSB7fSBhcyB7QWRkcmVzczogW1N0cmluZ119CgogIC8vIEFkZHJlc3MgLT4gbmZ0IFVVSUQgLT4gRGlzcGxheQogIHZhciBuZnRWaWV3cyA9IHt9IGFzIHtBZGRyZXNzOiB7VUludDY0OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXl9fSAKCiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogIGZvciBhZGRyZXNzIGluIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKSB7CiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oYWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmlld3M6IHtVSW50NjQ6IE1ldGFkYXRhVmlld3MuRGlzcGxheX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgIAogICAgLy8gdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICBsZXQgY29udHJvbGxlcnMgPSBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHBhdGghKQogICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKICAgIAoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZpZXdzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgIAogICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgcmV0dXJuIHRydWUKICAgICAgfQoKICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZS5pZGVudGlmaWVyIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgSURzICYgcmVzb2x2ZSB0aGUgdmlldwogICAgICAgICAgICAgIGZvciBpZCBpbiBjb2xsZWN0aW9uLmdldElEcygpIHsKICAgICAgICAgICAgICAgIGxldCBuZnQgPSBjb2xsZWN0aW9uLmJvcnJvd05GVChpZCkhCiAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogaWQpIQogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSByZXNvbHZlci5yZXNvbHZlVmlldyhUeXBlPE1ldGFkYXRhVmlld3MuRGlzcGxheT4oKSkhIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXkgewogICAgICAgICAgICAgICAgICB2aWV3cy5pbnNlcnQoa2V5OiBuZnQudXVpZCwgZGlzcGxheSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCiAgICBuZnRWaWV3c1thZGRyZXNzXSA9IHZpZXdzCiAgfQogIHJldHVybiBuZnRWaWV3cwp9",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvaW5JbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIHN0cnVjdCBUb2tlbkluZm8gewphY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiBbVG9rZW5JbmZvXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4gKGNoaWxkQWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCkKCiAgICAgICAgLy8gbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIAogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgCiAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgCiAgICByZXR1cm4gY29pbkluZm9MaXN0Cn0=",
              "getAccessibleCoinInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvaW5JbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDFkN2U1N2FhNTU4MTc0NDgKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmFjY2VzcyhhbGwpIHN0cnVjdCBUb2tlbkluZm8gewphY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiBbVG9rZW5JbmZvXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4gKGNoaWxkQWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCkKCiAgICAgICAgLy8gbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIAogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgCiAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgCiAgICByZXR1cm4gY29pbkluZm9MaXN0Cn0K",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBbVUludDY0XX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBY2NvdW50KQogICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBY2NvdW50KSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgIGlmIGZvdW5kVHlwZXMgPT0gbmlsIHsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIGZvdW5kVHlwZXMgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBmb3VuZFR5cGVzIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIHJldHVybiBuZnRzCn0=",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHNEaXNwbGF5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQoKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICAvLyBsZXQgdmF1bHRUeXBlID0gVHlwZTxAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIQogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9ICBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY29sbGVjdGlvbkxpc3Q6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgLy8gaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgIC8vICAgICByZXR1cm4gdHJ1ZQogICAgICAgIC8vIH0KICAgICAgICAvLyBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgLy8gICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgLy8gICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgIC8vICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAvLyAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgLy8gICAgIH0KICAgICAgICAvLyAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAvLyB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCEpCiAgICAgICAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQoKICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgIGlmIGZvdW5kVHlwZXMgPT0gbmlsIHsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIGZvdW5kVHlwZXMgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBmb3VuZFR5cGVzIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
              "getAccessibleCollectionAndIdsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHNEaXNwbGF5VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOTRlNDRlMWVjNjk5M2M2CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGFkZHJlc3MpCgogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIC8vIGxldCB2YXVsdFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkhCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICAgIGxldCBtYW5hZ2VyID0gIGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oY2hpbGRBY2NvdW50KQogICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgIGxldCBjb2xsZWN0aW9uTGlzdDogW05GVENvbGxlY3Rpb25dID0gW10KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBY2NvdW50KSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAvLyBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgLy8gICAgIHJldHVybiB0cnVlCiAgICAgICAgLy8gfQogICAgICAgIC8vIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAvLyAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAvLyAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgLy8gICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgIC8vICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAvLyAgICAgfQogICAgICAgIC8vICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIC8vIH0KCiAgICAgICAgbGV0IGNvbnRyb2xsZXJzID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBwYXRoISkKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICB9CgogICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0eXBlLmlkZW50aWZpZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogY2hpbGRBY2NvdW50LCBwYXRoOiBwYXRoKSwKICAgICAgICAgICAgICAgICAgICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gY29sbGVjdGlvbkxpc3QKfQ==",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25zQW5kSWRzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHNjcmlwdCB5b3UgY2FuIGV4ZWN1dGUgb24gRmxvdyBOZXR3b3JrCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKToge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwogICAgdmFyIGFjY2Vzc2libGVORlRzOiB7QWRkcmVzczoge1N0cmluZzogW1VJbnQ2NF19fSAgPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgYWNjZXNzaWJsZU5GVHNbYWRkcmVzc10gPSBuZnRzCiAgICB9CiAgICByZXR1cm4gYWNjZXNzaWJsZU5GVHMKfQ==",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUZ1bmdpYmxlVG9rZW4gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiB7U3RyaW5nOiBVRml4NjR9IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWx0QmFsYW5jZXMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCB2YXVsdC5iYWxhbmNlKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgIAogICAgcmV0dXJuIHZhdWx0QmFsYW5jZXMKfQ==",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKICAgIHB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0K",
              "getChildAccountAllowTypes": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50QWxsb3dUeXBlcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IFtTdHJpbmddPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgoKICAKICBsZXQgbmZ0UHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICBsZXQgZnRQcm92aWRlclR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQoKICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICBsZXQgYWRkciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oY2hpbGQpCiAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwoKICBmb3IgcyBpbiBhZGRyLnN0b3JhZ2Uuc3RvcmFnZVBhdGhzIHsKICAgIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcykKICAgIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgICAgLy8gaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAvLyAgIGNvbnRpbnVlCiAgICAgIC8vIH0KCiAgICAgIGlmIGxldCBuZnRDYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBuZnRQcm92aWRlclR5cGUpIHsKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBuZnRDYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQobmZ0Q2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIGJyZWFrCiAgICAgIH0KICAgICAgaWYgbGV0IGZ0Q2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogZnRQcm92aWRlclR5cGUpIHsKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBmdENhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoZnRDYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpLmlkZW50aWZpZXIpCiAgICAgICAgYnJlYWsKICAgICAgfQogICAgfQogIH0KCiAgcmV0dXJuIGZvdW5kVHlwZXMKfQ==",
              "getChildAccountAllowTypesTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50QWxsb3dUeXBlc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBbU3RyaW5nXT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKCiAgCiAgbGV0IG5mdFByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgbGV0IGZ0UHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKCiAgZm9yIHMgaW4gYWRkci5zdG9yYWdlLnN0b3JhZ2VQYXRocyB7CiAgICBsZXQgY29udHJvbGxlcnMgPSBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHMpCiAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgIC8vIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgLy8gICBjb250aW51ZQogICAgICAvLyB9CgogICAgICBpZiBsZXQgbmZ0Q2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogbmZ0UHJvdmlkZXJUeXBlKSB7CiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gbmZ0Q2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKG5mdENhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICBicmVhawogICAgICB9CiAgICAgIGlmIGxldCBmdENhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IGZ0UHJvdmlkZXJUeXBlKSB7CiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gZnRDYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGZ0Q2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIGJyZWFrCiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBmb3VuZFR5cGVzCn0=",
              "getChildAccountFTCapabilities": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50RlRDYXBhYmlsaXRpZXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIEZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6QW55U3RydWN0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpCiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1N0cmluZ119ID0ge30KICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBhZGRyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQogICAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwoKICAgIGZvciBzIGluIGFkZHIuc3RvcmFnZS5zdG9yYWdlUGF0aHMgewogICAgICBmb3IgYyBpbiBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHMpIHsKICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQoKICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICB9CgogICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKICAgICAgICAgIGJyZWFrCiAgICAgICAgfQogICAgICB9CiAgICB9ICAgICAgCiAgfQoKICByZXR1cm4gdHlwZUlkc1dpdGhQcm92aWRlcgp9CiA=",
              "getChildAccountFTCapabilitiesTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50RlRDYXBhYmlsaXRpZXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKLy8gVGhpcyBzY3JpcHQgaXRlcmF0ZXMgdGhyb3VnaCBhIHBhcmVudCdzIGNoaWxkIGFjY291bnRzLCAKLy8gaWRlbnRpZmllcyBwcml2YXRlIHBhdGhzIHdpdGggYW4gYWNjZXNzaWJsZSBGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBhbmQgcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyB0eXBlSWRzCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOkFueVN0cnVjdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtTdHJpbmddfSA9IHt9CiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCgogIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogIGZvciBhZGRyZXNzIGluIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKSB7CiAgICBsZXQgYWRkciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oYWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKCiAgICBmb3IgcyBpbiBhZGRyLnN0b3JhZ2Uuc3RvcmFnZVBhdGhzIHsKICAgICAgZm9yIGMgaW4gYWRkci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBzKSB7CiAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQoKICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPSBmb3VuZFR5cGVzCiAgICAgICAgICBicmVhawogICAgICAgIH0KICAgICAgfQogICAgfSAgICAgIAogIH0KCiAgcmV0dXJuIHR5cGVJZHNXaXRoUHJvdmlkZXIKfQog",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TWV0YSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG0gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgIGlmIG0gPT0gbmlsIHsKICAgICAgICByZXR1cm4ge30KICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KICAgICAgICBmb3IgYWRkcmVzcyBpbiBtPy5nZXRDaGlsZEFkZHJlc3NlcygpISB7CiAgICAgICAgICAgIGxldCBjID0gbT8uZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzKSAKICAgICAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBjKQogICAgICAgIH0KICAgICAgICByZXR1cm4gZGF0YQogICAgfQp9",
              "getChildAccountMetaTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TWV0YVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhkOGE3ZTA1YTdhYzY3MGMwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDFkN2U1N2FhNTU4MTc0NDgKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG0gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgIGlmIG0gPT0gbmlsIHsKICAgICAgICByZXR1cm4ge30KICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KICAgICAgICBmb3IgYWRkcmVzcyBpbiBtPy5nZXRDaGlsZEFkZHJlc3NlcygpISB7CiAgICAgICAgICAgIGxldCBjID0gbT8uZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzKSAKICAgICAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBjKQogICAgICAgIH0KICAgICAgICByZXR1cm4gZGF0YQogICAgfQp9",
              "getChildAccountNFT": "",
              "getChildAccountNFTCapabilitiesTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TkZUQ2FwYWJpbGl0aWVzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogQW55U3RydWN0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpCiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQogIAogIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQoKICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGFkZHJlc3MpCiAgICBsZXQgZm91bmRUeXBlczogW1N0cmluZ10gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCgogICAgZm9yIHMgaW4gYWRkci5zdG9yYWdlLnN0b3JhZ2VQYXRocyB7CiAgICAgIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcykKICAgICAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQoKICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KCiAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpLmlkZW50aWZpZXIpCiAgICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwogICAgICAgICAgYnJlYWsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiB0eXBlSWRzV2l0aFByb3ZpZGVyCn0=",
              "getChildAddresses": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBZGRyZXNzZXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgIHJldHVybiAgbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0=",
              "getChildAddressesTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Q2hpbGRBZGRyZXNzZXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9",
              "getExamplenftCollectionFromDelegator": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RXhhbXBsZW5mdENvbGxlY3Rpb25Gcm9tRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaXNQdWJsaWM6IEJvb2wpIHsKICAgIGxldCBtID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgbGV0IGFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpCiAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIGluIG1hbmFnZXIiKQoKICAgIGxldCB0ID0gVHlwZTxDYXBhYmlsaXR5PCZFeGFtcGxlTkZULkNvbGxlY3Rpb24+PigpCgogICAgbGV0IGNhcCA9IChpc1B1YmxpYyA/IGFjY3QuZ2V0UHVibGljQ2FwRnJvbURlbGVnYXRvcih0eXBlOiB0KSA6IGFjY3QuZ2V0UHJpdmF0ZUNhcEZyb21EZWxlZ2F0b3IodHlwZTogdCkpCiAgICAgICAgPz8gcGFuaWMoImNhcGFiaWxpdHkgbm90IGZvdW5kIikKICAgIAogICAgYXNzZXJ0KGNhcC5nZXRUeXBlKCkgPT0gdCwgbWVzc2FnZTogIm1pc21hdGNoZWQgY2FwYWJpbGl0eSB0eXBlcyIpCn0=",
              "getExamplenftCollectionFromDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RXhhbXBsZW5mdENvbGxlY3Rpb25Gcm9tRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg4OTIwZmZkM2Q4NzY4ZGFhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzLCBpc1B1YmxpYzogQm9vbCk6IEJvb2wgewogICAgbGV0IG0gPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICBsZXQgYWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkKICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQgaW4gbWFuYWdlciIpCgogICAgbGV0IHQgPSBUeXBlPENhcGFiaWxpdHk8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4+KCkKCiAgICBsZXQgY2FwID0gKGlzUHVibGljID8gYWNjdC5nZXRQdWJsaWNDYXBGcm9tRGVsZWdhdG9yKHR5cGU6IHQpIDogYWNjdC5nZXRQcml2YXRlQ2FwRnJvbURlbGVnYXRvcih0eXBlOiB0KSkKICAgICAgICA/PyBwYW5pYygiY2FwYWJpbGl0eSBub3QgZm91bmQiKQogICAgCiAgICBhc3NlcnQoY2FwLmdldFR5cGUoKSA9PSB0LCBtZXNzYWdlOiAibWlzbWF0Y2hlZCBjYXBhYmlsaXR5IHR5cGVzIikKCiAgICByZXR1cm4gY2FwLmdldFR5cGUoKSA9PSB0Cn0=",
              "publishToParent": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcHVibGlzaFRvUGFyZW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGYWN0b3J5IGZyb20gMHhDYXBhYmlsaXR5RmFjdG9yeQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgppbXBvcnQgQ2FwYWJpbGl0eURlbGVnYXRvciBmcm9tIDB4Q2FwYWJpbGl0eURlbGVnYXRvcgoKdHJhbnNhY3Rpb24ocGFyZW50OiBBZGRyZXNzLCBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywgZmlsdGVyQWRkcmVzczogQWRkcmVzcykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IG93bmVkID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IGZhY3RvcnkgPSBnZXRBY2NvdW50KGZhY3RvcnlBZGRyZXNzKS5jYXBhYmlsaXRpZXMuZ2V0PCZDYXBhYmlsaXR5RmFjdG9yeS5NYW5hZ2VyPihDYXBhYmlsaXR5RmFjdG9yeS5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmYWN0b3J5LmNoZWNrKCksIG1lc3NhZ2U6ICJmYWN0b3J5IGFkZHJlc3MgaXMgbm90IGNvbmZpZ3VyZWQgcHJvcGVybHkiKQoKICAgICAgICBsZXQgZmlsdGVyID0gZ2V0QWNjb3VudChmaWx0ZXJBZGRyZXNzKS5jYXBhYmlsaXRpZXMuZ2V0PCZ7Q2FwYWJpbGl0eUZpbHRlci5GaWx0ZXJ9PihDYXBhYmlsaXR5RmlsdGVyLlB1YmxpY1BhdGgpCiAgICAgICAgYXNzZXJ0KGZpbHRlci5jaGVjaygpLCBtZXNzYWdlOiAiY2FwYWJpbGl0eSBmaWx0ZXIgaXMgbm90IGNvbmZpZ3VyZWQgcHJvcGVybHkiKQoKICAgICAgICBvd25lZC5wdWJsaXNoVG9QYXJlbnQocGFyZW50QWRkcmVzczogcGFyZW50LCBmYWN0b3J5OiBmYWN0b3J5LCBmaWx0ZXI6IGZpbHRlcikKICAgIH0KfQ==",
              "publishToParentTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcHVibGlzaFRvUGFyZW50VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgI2FsbG93QWNjb3VudExpbmtpbmcKCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmFjdG9yeSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eURlbGVnYXRvciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKCnRyYW5zYWN0aW9uKHBhcmVudDogQWRkcmVzcywgZmFjdG9yeUFkZHJlc3M6IEFkZHJlc3MsIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBvd25lZCA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgb3duZWQucHVibGlzaFRvUGFyZW50KHBhcmVudEFkZHJlc3M6IHBhcmVudCwgZmFjdG9yeTogZmFjdG9yeSwgZmlsdGVyOiBmaWx0ZXIpCiAgICB9Cn0=",
              "redeemAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVkZWVtQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCgppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyZXNzOiBBZGRyZXNzLCBmaWx0ZXJBZGRyZXNzOiBBZGRyZXNzPywgZmlsdGVyUGF0aDogUHVibGljUGF0aD8pIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMsIEluYm94KSAmQWNjb3VudCkgewogICAgICAgIHZhciBmaWx0ZXI6IENhcGFiaWxpdHk8JntDYXBhYmlsaXR5RmlsdGVyLkZpbHRlcn0+PyA9IG5pbAogICAgICAgIGlmIGZpbHRlckFkZHJlc3MgIT0gbmlsICYmIGZpbHRlclBhdGggIT0gbmlsIHsKICAgICAgICAgICAgZmlsdGVyID0gZ2V0QWNjb3VudChmaWx0ZXJBZGRyZXNzISkuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oZmlsdGVyUGF0aCEpCiAgICAgICAgfQoKICAgICAgICBpZiBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgbSA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU1hbmFnZXIoZmlsdGVyOiBmaWx0ZXIpCiAgICAgICAgICAgIGFjY3Quc3RvcmFnZS5zYXZlKDwtIG0sIHRvOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIGZvciBjIGluIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgICAgIGMuZGVsZXRlKCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY1BhdGgpCgogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0h5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY30+KEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgICAgIGF0OiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQdWJsaWNQYXRoCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJntIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQcml2YXRlLCBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQdWJsaWN9PihIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICB9CgogICAgICAgIGxldCBpbmJveE5hbWUgPSBIeWJyaWRDdXN0b2R5LmdldENoaWxkQWNjb3VudElkZW50aWZpZXIoYWNjdC5hZGRyZXNzKQogICAgICAgIGxldCBjYXAgPSBhY2N0LmluYm94LmNsYWltPGF1dGgoSHlicmlkQ3VzdG9keS5DaGlsZCkgJntIeWJyaWRDdXN0b2R5LkFjY291bnRQcml2YXRlLCBIeWJyaWRDdXN0b2R5LkFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KGluYm94TmFtZSwgcHJvdmlkZXI6IGNoaWxkQWRkcmVzcykKICAgICAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgY2FwIG5vdCBmb3VuZCIpCgogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBtYW5hZ2VyLmFkZEFjY291bnQoY2FwOiBjYXApCiAgICB9Cn0=",
              "redeemAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVkZWVtQWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHJlc3M6IEFkZHJlc3MsIGZpbHRlckFkZHJlc3M6IEFkZHJlc3M/LCBmaWx0ZXJQYXRoOiBQdWJsaWNQYXRoPykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcywgSW5ib3gpICZBY2NvdW50KSB7CiAgICAgICAgdmFyIGZpbHRlcjogQ2FwYWJpbGl0eTwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4/ID0gbmlsCiAgICAgICAgaWYgZmlsdGVyQWRkcmVzcyAhPSBuaWwgJiYgZmlsdGVyUGF0aCAhPSBuaWwgewogICAgICAgICAgICBmaWx0ZXIgPSBnZXRBY2NvdW50KGZpbHRlckFkZHJlc3MhKS5jYXBhYmlsaXRpZXMuZ2V0PCZ7Q2FwYWJpbGl0eUZpbHRlci5GaWx0ZXJ9PihmaWx0ZXJQYXRoISkKICAgICAgICB9CgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBtIDwtIEh5YnJpZEN1c3RvZHkuY3JlYXRlTWFuYWdlcihmaWx0ZXI6IGZpbHRlcikKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gbSwgdG86IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgZm9yIGMgaW4gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgewogICAgICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgICAgICB9CgogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy51bnB1Ymxpc2goSHlicmlkQ3VzdG9keS5NYW5hZ2VyUHVibGljUGF0aCkKCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5NYW5hZ2VyUHVibGljfT4oSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpLAogICAgICAgICAgICAgICAgYXQ6IEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY1BhdGgKICAgICAgICAgICAgKQoKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAme0h5YnJpZEN1c3RvZHkuTWFuYWdlclByaXZhdGUsIEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY30+KEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IGluYm94TmFtZSA9IEh5YnJpZEN1c3RvZHkuZ2V0Q2hpbGRBY2NvdW50SWRlbnRpZmllcihhY2N0LmFkZHJlc3MpCiAgICAgICAgbGV0IGNhcCA9IGFjY3QuaW5ib3guY2xhaW08YXV0aChIeWJyaWRDdXN0b2R5LkNoaWxkKSAme0h5YnJpZEN1c3RvZHkuQWNjb3VudFByaXZhdGUsIEh5YnJpZEN1c3RvZHkuQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oaW5ib3hOYW1lLCBwcm92aWRlcjogY2hpbGRBZGRyZXNzKQogICAgICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBjYXAgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIG1hbmFnZXIuYWRkQWNjb3VudChjYXA6IGNhcCkKICAgIH0KfQ==",
              "sendChildFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CgovLyBIQy1vd25lZCBpbXBvcnRzCmltcG9ydCBDYXBhYmlsaXR5RmFjdG9yeSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewoKICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgbGV0IHBheW1lbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogIGxldCB2YXVsdERhdGE6IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhCgogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgIAogICAgICBzZWxmLnZhdWx0RGF0YSA9IDxUb2tlbj4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxUb2tlbj4gIikKCiAgICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogc2VsZi52YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAgIAogICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgIAogICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICBzZWxmLnBheW1lbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICB9CgogIGV4ZWN1dGUgewoKICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjZWl2ZXIpCgogICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudC5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHNlbGYudmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnBheW1lbnRWYXVsdCkKICB9Cn0KIA==",
              "sendChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRXhhbXBsZVRva2VuIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogIGxldCBwYXltZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAKICAgICAgc2VsZi52YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVUb2tlbiIpCgogICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAKICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgfQoKICBleGVjdXRlIHsKCiAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQoKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgfQp9CiA=",
              "sendChildFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogIGxldCBwYXltZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAKICAgICAgc2VsZi52YXVsdERhdGEgPSA8VG9rZW4+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8VG9rZW4+ICIpCgogICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAKICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgfQoKICBleGVjdXRlIHsKCiAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQoKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgfQp9CiA=",
              "sendChildFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgYW1vdW50OiBVRml4NjQgKSB7CgogIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJyZWQKICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgbGV0IHZhdWx0RGF0YTogRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGEKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgCiAgICAgIHNlbGYudmF1bHREYXRhID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQoKICAgICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBzZWxmLnZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgICAgCiAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgICAgCiAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgICAgbGV0IHZhdWx0UmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgIHNlbGYucGF5bWVudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogIH0KCiAgZXhlY3V0ZSB7CgogICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKCiAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50LmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc2VsZi52YXVsdERhdGEucmVjZWl2ZXJQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQoKICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYucGF5bWVudFZhdWx0KQogIH0KfQog",
              "sendChildFTWithParent": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlRXaXRoUGFyZW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgdG86IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzKSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogICAgbGV0IHBheW1lbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IHZhdWx0RGF0YTogRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGEKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgICAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgc2VsZi52YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKCiAgICAgICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogc2VsZi52YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAgIAogICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYucGF5bWVudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHRvKQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50LmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc2VsZi52YXVsdERhdGEucmVjZWl2ZXJQYXRoKSEuYm9ycm93KCkKCQkJPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYucGF5bWVudFZhdWx0KQogICAgfQp9CiA=",
              "sendChildFTWithParentTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkRlRXaXRoUGFyZW50VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCB0bzogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICBzZWxmLnZhdWx0RGF0YSA9IEV4YW1wbGVUb2tlbi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQoKICAgICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBzZWxmLnZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgICAgCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQodG8pCgogICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQoJCQk/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgICB9Cn0KIA==",
              "sendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxORlQ+ICIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVG9DaGlsZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVG9DaGlsZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKCiAgICBsZXQgcmVjZWl2ZXJDaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICBsZXQgcmVjZWl2ZXJDb250cm9sbGVySWQgPSByZWNlaXZlckNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiByZWNlaXZlckNvbnRyb2xsZXJJZCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpIAogICAgbGV0IHB1YmxpY0NhcCA9IHJlY2VpdmVyQ2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4KICAgIGxldCByZWNlaXZlclJlZiA9ICBwdWJsaWNDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgCiAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgfQp9",
              "setupOwnedAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICNhbGxvd0FjY291bnRMaW5raW5nCgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKLy8vIFRoaXMgdHJhbnNhY3Rpb24gY29uZmlndXJlcyBhbiBPd25lZEFjY291bnQgaW4gdGhlIHNpZ25lciBpZiBuZWVkZWQgYW5kIGNvbmZpZ3VyZXMgaXRzIENhcGFiaWxpdGllcyBwZXIKLy8vIEh5YnJpZEN1c3RvZHkncyBpbnRlbmRlZCBkZXNpZ24uIElmIERpc3BsYXkgdmFsdWVzIGFyZSBzcGVjaWZpZWQgKGFzIHJlY29tbWVuZGVkKSwgdGhleSB3aWxsIGJlIHNldCBvbiB0aGUKLy8vIHNpZ25lcidzIE93bmVkQWNjb3VudC4KLy8vCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZz8sIGRlc2M6IFN0cmluZz8sIHRodW1ibmFpbFVSTDogU3RyaW5nPykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgYWNjdENhcCA9IGFjY3QuY2FwYWJpbGl0aWVzLmFjY291bnQuaXNzdWU8YXV0aChTdG9yYWdlLCBDb250cmFjdHMsIEtleXMsIEluYm94LCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PigpCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgb3duZWRBY2NvdW50IDwtIEh5YnJpZEN1c3RvZHkuY3JlYXRlT3duZWRBY2NvdW50KGFjY3Q6IGFjY3RDYXApCiAgICAgICAgICAgIGFjY3Quc3RvcmFnZS5zYXZlKDwtb3duZWRBY2NvdW50LCB0bzogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICB9CgogICAgICAgIGxldCBvd25lZCA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgLy8gU2V0IHRoZSBkaXNwbGF5IG1ldGFkYXRhIGZvciB0aGUgT3duZWRBY2NvdW50CiAgICAgICAgaWYgbmFtZSAhPSBuaWwgJiYgZGVzYyAhPSBuaWwgJiYgdGh1bWJuYWlsVVJMICE9IG5pbCB7CiAgICAgICAgICAgIGxldCB0aHVtYm5haWwgPSBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsVVJMISkKICAgICAgICAgICAgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkobmFtZTogbmFtZSEsIGRlc2NyaXB0aW9uOiBkZXNjISwgdGh1bWJuYWlsOiB0aHVtYm5haWwpCiAgICAgICAgICAgIG93bmVkLnNldERpc3BsYXkoZGlzcGxheSkKICAgICAgICB9CgogICAgICAgIC8vIGNoZWNrIHRoYXQgcGF0aHMgYXJlIGFsbCBjb25maWd1cmVkIHByb3Blcmx5CiAgICAgICAgZm9yIGMgaW4gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKSB7CiAgICAgICAgICAgIGMuZGVsZXRlKCkKICAgICAgICB9CgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQogICAgfQp9CiA=",
              "setupOwnedAccountAndPublishToParent": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRBbmRQdWJsaXNoVG9QYXJlbnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICNhbGxvd0FjY291bnRMaW5raW5nCgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKCgppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweENhcGFiaWxpdHlGYWN0b3J5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhDYXBhYmlsaXR5RmlsdGVyCmltcG9ydCBDYXBhYmlsaXR5RGVsZWdhdG9yIGZyb20gMHhDYXBhYmlsaXR5RGVsZWdhdG9yCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGNvbmZpZ3VyZXMgYW4gT3duZWRBY2NvdW50IGluIHRoZSBzaWduZXIgaWYgbmVlZGVkLCBhbmQgcHJvY2VlZHMgdG8gY3JlYXRlIGEgQ2hpbGRBY2NvdW50IAovLy8gdXNpbmcgQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlciBhbmQgQ2FwYWJpbGl0eUZpbHRlci5GaWx0ZXIgQ2FwYWJpbGl0aWVzIGZyb20gdGhlIGdpdmVuIGFkZHJlc3Nlcy4gQQovLy8gQ2FwYWJpbGl0eSBvbiB0aGUgQ2hpbGRBY2NvdW50IGlzIHRoZW4gcHVibGlzaGVkIHRvIHRoZSBzcGVjaWZpZWQgcGFyZW50IGFjY291bnQuIAovLy8KdHJhbnNhY3Rpb24oCiAgICBwYXJlbnQ6IEFkZHJlc3MsCiAgICBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywKICAgIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MsCiAgICBuYW1lOiBTdHJpbmcsCiAgICBkZXNjOiBTdHJpbmcsCiAgICB0aHVtYm5haWxVUkw6IFN0cmluZwopIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgLy8gQ29uZmlndXJlIE93bmVkQWNjb3VudCBpZiBpdCBkb2Vzbid0IGV4aXN0CiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHZhciBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKICAgICAgICAgICAgbGV0IG93bmVkQWNjb3VudCA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU93bmVkQWNjb3VudChhY2N0OiBhY2N0Q2FwKQogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSg8LW93bmVkQWNjb3VudCwgdG86IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQoKICAgICAgICBsZXQgb3duZWQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5Pd25lcikgJkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygib3duZWQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgICAgIC8vIFNldCB0aGUgZGlzcGxheSBtZXRhZGF0YSBmb3IgdGhlIE93bmVkQWNjb3VudAogICAgICAgIGlmIG5hbWUgIT0gbmlsICYmIGRlc2MgIT0gbmlsICYmIHRodW1ibmFpbFVSTCAhPSBuaWwgewogICAgICAgICAgICBsZXQgdGh1bWJuYWlsID0gTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6IHRodW1ibmFpbFVSTCEpCiAgICAgICAgICAgIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5EaXNwbGF5KG5hbWU6IG5hbWUhLCBkZXNjcmlwdGlvbjogZGVzYyEsIHRodW1ibmFpbDogdGh1bWJuYWlsKQogICAgICAgICAgICBvd25lZC5zZXREaXNwbGF5KGRpc3BsYXkpCiAgICAgICAgfQoKICAgICAgICAvLyBHZXQgQ2FwYWJpbGl0eUZhY3RvcnkgJiBDYXBhYmlsaXR5RmlsdGVyIENhcGFiaWxpdGllcwogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgLy8gRmluYWxseSBwdWJsaXNoIGEgQ2hpbGRBY2NvdW50IGNhcGFiaWxpdHkgb24gdGhlIHNpZ25pbmcgYWNjb3VudCB0byB0aGUgc3BlY2lmaWVkIHBhcmVudAogICAgICAgIG93bmVkLnB1Ymxpc2hUb1BhcmVudChwYXJlbnRBZGRyZXNzOiBwYXJlbnQsIGZhY3Rvcnk6IGZhY3RvcnksIGZpbHRlcjogZmlsdGVyKQogICAgfQp9",
              "setupOwnedAccountAndPublishToParentTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRBbmRQdWJsaXNoVG9QYXJlbnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGYWN0b3J5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RGVsZWdhdG9yIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGNvbmZpZ3VyZXMgYW4gT3duZWRBY2NvdW50IGluIHRoZSBzaWduZXIgaWYgbmVlZGVkLCBhbmQgcHJvY2VlZHMgdG8gY3JlYXRlIGEgQ2hpbGRBY2NvdW50IAovLy8gdXNpbmcgQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlciBhbmQgQ2FwYWJpbGl0eUZpbHRlci5GaWx0ZXIgQ2FwYWJpbGl0aWVzIGZyb20gdGhlIGdpdmVuIGFkZHJlc3Nlcy4gQQovLy8gQ2FwYWJpbGl0eSBvbiB0aGUgQ2hpbGRBY2NvdW50IGlzIHRoZW4gcHVibGlzaGVkIHRvIHRoZSBzcGVjaWZpZWQgcGFyZW50IGFjY291bnQuIAovLy8KdHJhbnNhY3Rpb24oCiAgICBwYXJlbnQ6IEFkZHJlc3MsCiAgICBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywKICAgIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MsCiAgICBuYW1lOiBTdHJpbmcsCiAgICBkZXNjOiBTdHJpbmcsCiAgICB0aHVtYm5haWxVUkw6IFN0cmluZwopIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgLy8gQ29uZmlndXJlIE93bmVkQWNjb3VudCBpZiBpdCBkb2Vzbid0IGV4aXN0CiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHZhciBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKICAgICAgICAgICAgbGV0IG93bmVkQWNjb3VudCA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU93bmVkQWNjb3VudChhY2N0OiBhY2N0Q2FwKQogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSg8LW93bmVkQWNjb3VudCwgdG86IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQoKICAgICAgICBsZXQgb3duZWQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5Pd25lcikgJkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygib3duZWQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgICAgIC8vIFNldCB0aGUgZGlzcGxheSBtZXRhZGF0YSBmb3IgdGhlIE93bmVkQWNjb3VudAogICAgICAgIGlmIG5hbWUgIT0gbmlsICYmIGRlc2MgIT0gbmlsICYmIHRodW1ibmFpbFVSTCAhPSBuaWwgewogICAgICAgICAgICBsZXQgdGh1bWJuYWlsID0gTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6IHRodW1ibmFpbFVSTCEpCiAgICAgICAgICAgIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5EaXNwbGF5KG5hbWU6IG5hbWUhLCBkZXNjcmlwdGlvbjogZGVzYyEsIHRodW1ibmFpbDogdGh1bWJuYWlsKQogICAgICAgICAgICBvd25lZC5zZXREaXNwbGF5KGRpc3BsYXkpCiAgICAgICAgfQoKICAgICAgICAvLyBHZXQgQ2FwYWJpbGl0eUZhY3RvcnkgJiBDYXBhYmlsaXR5RmlsdGVyIENhcGFiaWxpdGllcwogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgLy8gRmluYWxseSBwdWJsaXNoIGEgQ2hpbGRBY2NvdW50IGNhcGFiaWxpdHkgb24gdGhlIHNpZ25pbmcgYWNjb3VudCB0byB0aGUgc3BlY2lmaWVkIHBhcmVudAogICAgICAgIG93bmVkLnB1Ymxpc2hUb1BhcmVudChwYXJlbnRBZGRyZXNzOiBwYXJlbnQsIGZhY3Rvcnk6IGZhY3RvcnksIGZpbHRlcjogZmlsdGVyKQogICAgfQp9",
              "setupOwnedAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQovLy8gVGhpcyB0cmFuc2FjdGlvbiBjb25maWd1cmVzIGFuIE93bmVkQWNjb3VudCBpbiB0aGUgc2lnbmVyIGlmIG5lZWRlZCBhbmQgY29uZmlndXJlcyBpdHMgQ2FwYWJpbGl0aWVzIHBlcgovLy8gSHlicmlkQ3VzdG9keSdzIGludGVuZGVkIGRlc2lnbi4gSWYgRGlzcGxheSB2YWx1ZXMgYXJlIHNwZWNpZmllZCAoYXMgcmVjb21tZW5kZWQpLCB0aGV5IHdpbGwgYmUgc2V0IG9uIHRoZQovLy8gc2lnbmVyJ3MgT3duZWRBY2NvdW50LgovLy8KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCBkZXNjOiBTdHJpbmcsIHRodW1ibmFpbFVSTDogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKCiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBvd25lZEFjY291bnQgPC0gSHlicmlkQ3VzdG9keS5jcmVhdGVPd25lZEFjY291bnQoYWNjdDogYWNjdENhcCkKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC1vd25lZEFjY291bnQsIHRvOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IG93bmVkID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICAvLyBTZXQgdGhlIGRpc3BsYXkgbWV0YWRhdGEgZm9yIHRoZSBPd25lZEFjY291bnQKICAgICAgICBpZiBuYW1lICE9IG5pbCAmJiBkZXNjICE9IG5pbCAmJiB0aHVtYm5haWxVUkwgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IHRodW1ibmFpbCA9IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiB0aHVtYm5haWxVUkwhKQogICAgICAgICAgICBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuRGlzcGxheShuYW1lOiBuYW1lISwgZGVzY3JpcHRpb246IGRlc2MhLCB0aHVtYm5haWw6IHRodW1ibmFpbCkKICAgICAgICAgICAgb3duZWQuc2V0RGlzcGxheShkaXNwbGF5KQogICAgICAgIH0KCiAgICAgICAgLy8gY2hlY2sgdGhhdCBwYXRocyBhcmUgYWxsIGNvbmZpZ3VyZWQgcHJvcGVybHkKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0h5YnJpZEN1c3RvZHkuQm9ycm93YWJsZUFjY291bnQsIEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50UHVibGljLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJ9PihIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCksCiAgICAgICAgICAgIGF0OiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpY1BhdGgKICAgICAgICApCiAgICB9Cn0KIA==",
              "transferChildFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZEZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgdmF1bHREYXRhID0gPFRva2VuPi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxUb2tlbj4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBwYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1wYXltZW50VmF1bHQpCiAgfQp9",
              "transferChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZEZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgdmF1bHREYXRhID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBwYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1wYXltZW50VmF1bHQpCiAgfQp9",
              "transferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCAgaWQ6IFVJbnQ2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSA8TkZUPi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8TkZUPiAiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgIGxldCByZWNlaXZlclJlZiA9ICBzaWduZXIuY2FwYWJpbGl0aWVzLmdldDwme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogIH0KfQ==",
              "transferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZE5GVFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsICBpZDogVUludDY0ICkgewoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgIGxldCByZWNlaXZlclJlZiA9ICBzaWduZXIuY2FwYWJpbGl0aWVzLmdldDwme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogIH0KfQ==",
              "transferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJORlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+IC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8TkZUPiAiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gcGFyZW50UmVmIS53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkhCiAgICAKICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "transferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdHJhbnNmZXJORlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gcGFyZW50UmVmIS53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkhCiAgICAKICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdW5saW5rQ2hpbGRBY2NvdW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKdHJhbnNhY3Rpb24oY2hpbGQ6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUgKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICBtYW5hZ2VyLnJlbW92ZUNoaWxkKGFkZHI6IGNoaWxkKQogICAgfQp9"
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tTZXR1cCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "checkSetupTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2hlY2tTZXR1cFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIC8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "closeStake": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2xvc2VTdGFrZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4Rmxvd1N0YWtpbmdDb2xsZWN0aW9uCgovLyBDbG9zZXMgb3V0IGEgc3Rha2luZyBvYmplY3QgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLyBUaGlzIGRvZXMgbm90IHJlbW92ZSB0aGUgcmVjb3JkIGZyb20gdGhlIGlkZW50aXR5IHRhYmxlLAovLyBidXQgaXQgZG9lcyBtZWFuIHRoYXQgdGhlIGFjY291bnQgdGhhdCBjbG9zZXMgaXQgY2Fubm90IGV2ZXIgYWNjZXNzIGl0IGFnYWluCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8pIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5jbG9zZVN0YWtlKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICB9Cn0=",
              "closeStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY2xvc2VTdGFrZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vIENsb3NlcyBvdXQgYSBzdGFraW5nIG9iamVjdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vIFRoaXMgZG9lcyBub3QgcmVtb3ZlIHRoZSByZWNvcmQgZnJvbSB0aGUgaWRlbnRpdHkgdGFibGUsCi8vIGJ1dCBpdCBkb2VzIG1lYW4gdGhhdCB0aGUgYWNjb3VudCB0aGF0IGNsb3NlcyBpdCBjYW5ub3QgZXZlciBhY2Nlc3MgaXQgYWdhaW4KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPykgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLmNsb3NlU3Rha2Uobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgIH0KfQ==",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
              "createDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlU3Rha2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIG5ldyB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBmcm9tIHRoZSBsb2NrZWQgdmF1bHQgYXJlIHVzZWQgZmlyc3QsIGlmIGl0IGV4aXN0cwovLy8gZm9sbG93ZWQgYnkgdGhlIHRva2VucyBmcm9tIHRoZSB1bmxvY2tlZCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlTmV3VG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "createStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgY3JlYXRlU3Rha2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QXByIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getAprTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QXByVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getApyWeekly": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QXB5V2Vla2x5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAqIDU0LjAgKiAoMS4wIC0gRmxvd0lEVGFibGVTdGFraW5nLmdldFJld2FyZEN1dFBlcmNlbnRhZ2UoKSkKICAgIHJldHVybiBhcHIKfQ==",
              "getDelegatesIndo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5kbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9Cg==",
              "getDelegatesInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
              "getDelegatesInfoArray": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mb0FycmF5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKICAgICAgICAKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxEZWxlZ2F0b3JJbmZvKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "getDelegatesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mb1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAovLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKYWNjZXNzKGFsbCkgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9ySUQ6IFVJbnQzMgogICAgYWNjZXNzKGFsbCkgbGV0IG5vZGVJRDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKCiAgICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHJvbGU6IFVJbnQ4CiAgICBhY2Nlc3MoYWxsKSBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgYWNjZXNzKGFsbCkgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgaW5pdChkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbykgewogICAgICAgIHNlbGYuZGVsZWdhdG9ySUQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICAgICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JJbmZvLm5vZGVJRCkKICAgICAgICBzZWxmLmRlbGVnYXRlZE5vZGVJbmZvID0gbm9kZUluZm8KICAgICAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYucmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zID0gc2VsZi50b2tlbnNVbnN0YWtlZCArIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBkZWxlZ2F0b3JJRHM6IFtGbG93U3Rha2luZ0NvbGxlY3Rpb24uRGVsZWdhdG9ySURzXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXREZWxlZ2F0b3JJRHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBsZXQgZm9ybWF0dGVkRGVsZWdhdG9ySW5mbzoge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0gPSB7fQoKICAgIGZvciBkZWxlZ2F0b3JJRCBpbiBkZWxlZ2F0b3JJRHMgewogICAgICAgIGlmIGxldCBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mbyA9IGZvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlEXSB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQpCiAgICAgICAgICAgIF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvcklEXSA9IERlbGVnYXRlSW5mbyhkZWxlZ2F0b3JJbmZvOiBkZWxlZ2F0b3JJbmZvKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQpCiAgICAgICAgICAgIGZvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlEXSA9IHsgZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQ6IERlbGVnYXRlSW5mbyhkZWxlZ2F0b3JJbmZvOiBkZWxlZ2F0b3JJbmZvKX0KICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZvcm1hdHRlZERlbGVnYXRvckluZm8KfQ==",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdG9ySW5mbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getDelegatorInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RGVsZWdhdG9ySW5mb1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RXBvY2hNZXRhZGF0YSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YSB7CiAgICByZXR1cm4gRmxvd0Vwb2NoLmdldEVwb2NoTWV0YWRhdGEoZXBvY2hDb3VudGVyKSEKfQ==",
              "getEpochMetadataTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0RXBvY2hNZXRhZGF0YVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihlcG9jaENvdW50ZXI6IFVJbnQ2NCk6IEZsb3dFcG9jaC5FcG9jaE1ldGFkYXRhPyB7CiAgcmV0dXJuIEZsb3dFcG9jaC5nZXRFcG9jaE1ldGFkYXRhKGVwb2NoQ291bnRlcikKfQ==",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9kZUluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9kZUluZm9UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9kZXNJbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIHN0cnVjdCBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8gewoKICAgIGFjY2VzcyhhbGwpIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlQ291bnQ6IFVJbnQ2NAoKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGluaXQoYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dLCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10pIHsKCiAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBVSW50NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBVSW50NjQoMCkKCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBzZWxmLm5vZGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICAgICAgZm9yIGRlbGVnYXRlSW5mbyBpbiBhbGxEZWxlZ2F0ZUluZm8gewogICAgICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBzZWxmLmRlbGVnYXRlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKTogU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvPyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxOb2RlSW5mbyhhZGRyZXNzOiBhY2NvdW50KQogICAgbGV0IGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxEZWxlZ2F0b3JJbmZvKGFkZHJlc3M6IGFjY291bnQpCgogICAgcmV0dXJuIFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyhhbGxOb2RlSW5mbzogYWxsTm9kZUluZm8sIGFsbERlbGVnYXRlSW5mbzogYWxsRGVsZWdhdGVJbmZvKQp9Cg==",
              "getNodesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0Tm9kZXNJbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgYWNjZXNzKGFsbCkgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVDb3VudDogVUludDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgaW5pdChhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10sIGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSkgewoKICAgICAgICBzZWxmLm5vZGVDb3VudCA9IFVJbnQ2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IFVJbnQ2NCgwKQoKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgICAgICBzZWxmLm5vZGVDb3VudCA9IHNlbGYubm9kZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgICAgICBmb3IgZGVsZWdhdGVJbmZvIGluIGFsbERlbGVnYXRlSW5mbyB7CiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IHNlbGYuZGVsZWdhdGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3Rha2VJbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCmFjY2VzcyhhbGwpIHN0cnVjdCBTdGFrZUluZm8gewogICAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCByb2xlOiBVSW50OAogICAgYWNjZXNzKGFsbCkgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBuZXR3b3JraW5nS2V5OiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9yc0NudDogSW50CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIGFjY2VzcyhhbGwpIGxldCBub2RlSUQ6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSBsZXQgbWFjaGluZUFjY291bnRBZGRyZXNzOiBBZGRyZXNzPwogICAgYWNjZXNzKGFsbCkgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzQ250ID0gbm9kZUluZm8uZGVsZWdhdG9ycy5sZW5ndGggCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFN0YWtlSW5mb30/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZm9ybWF0dGVkTm9kZUluZm86IHtTdHJpbmc6IFN0YWtlSW5mb30gPSB7fQogICAgbGV0IGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxOb2RlSW5mbyhhZGRyZXNzOiBhY2NvdW50KQogICAgbGV0IG1hY2hpbmVBY2NvdW50czoge1N0cmluZzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLk1hY2hpbmVBY2NvdW50SW5mb30gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0TWFjaGluZUFjY291bnRzKGFkZHJlc3M6IGFjY291bnQpCgogICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICBmb3JtYXR0ZWROb2RlSW5mb1tub2RlSW5mby5pZF0gPSBTdGFrZUluZm8obm9kZUluZm86IG5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IG1hY2hpbmVBY2NvdW50c1tub2RlSW5mby5pZF0pCiAgICB9CgogICAgcmV0dXJuIGZvcm1hdHRlZE5vZGVJbmZvCn0K",
              "getStakeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3Rha2VJbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3Rha2luZ0luZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IEVwb2NoSW5mbyB7CiAgcHViIGxldCBjdXJyZW50RXBvY2hDb3VudGVyOiBVSW50NjQKICBwdWIgbGV0IGN1cnJlbnRFcG9jaFBoYXNlOiBVSW50OAoKICBpbml0KAogICAgICBjdXJyZW50RXBvY2hDb3VudGVyOiBVSW50NjQsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBVSW50OAogICkgewogICAgICBzZWxmLmN1cnJlbnRFcG9jaENvdW50ZXIgPSBjdXJyZW50RXBvY2hDb3VudGVyCiAgICAgIHNlbGYuY3VycmVudEVwb2NoUGhhc2UgPSBjdXJyZW50RXBvY2hQaGFzZQogIH0KfQoKcHViIHN0cnVjdCBSZXN1bHQgewogIHB1YiBsZXQgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPwoKICBpbml0KHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8pIHsKICAgIHNlbGYuc3Rha2luZ0luZm8gPSBzdGFraW5nSW5mbwogIH0KfQoKcHViIHN0cnVjdCBTdGFraW5nSW5mbyB7CiAgcHViIGxldCBlcG9jaEluZm86IEVwb2NoSW5mbwogIHB1YiBsZXQgbG9ja2VkQWRkcmVzczogQWRkcmVzcyAgIAogIHB1YiBsZXQgbG9ja2VkQmFsYW5jZTogVUZpeDY0CiAgcHViIGxldCB1bmxvY2tMaW1pdDogVUZpeDY0CiAgcHViIGxldCBub2RlSW5mbzogTm9kZUluZm8/CiAgcHViIGxldCBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/CiAgcHViIGxldCBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPwoKICBpbml0KAogICAgZXBvY2hJbmZvOiBFcG9jaEluZm8sCiAgICBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzLAogICAgbG9ja2VkQmFsYW5jZTogVUZpeDY0LAogICAgdW5sb2NrTGltaXQ6IFVGaXg2NCwKICAgIG5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8sCiAgKSB7CiAgICBzZWxmLmVwb2NoSW5mbyA9IGVwb2NoSW5mbwogICAgc2VsZi5sb2NrZWRBZGRyZXNzID0gbG9ja2VkQWRkcmVzcwogICAgc2VsZi5sb2NrZWRCYWxhbmNlID0gbG9ja2VkQmFsYW5jZQogICAgc2VsZi51bmxvY2tMaW1pdCA9IHVubG9ja0xpbWl0CiAgICBzZWxmLm5vZGVJbmZvID0gbm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9yTm9kZUluZm8gPSBkZWxlZ2F0b3JOb2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JJbmZvID0gZGVsZWdhdG9ySW5mbwogIH0KfQoKcHViIHN0cnVjdCBOb2RlSW5mbyB7CiAgcHViIGxldCBpZDogU3RyaW5nCiAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgcHViIGxldCByb2xlOiBVSW50OAogIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIAogIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgcHViIGxldCBpbml0aWFsV2VpZ2h0OiBVSW50NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZykgewogICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKSAKCiAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgc2VsZi5pbml0aWFsV2VpZ2h0ID0gbm9kZUluZm8uaW5pdGlhbFdlaWdodAogIH0KfQoKcHViIHN0cnVjdCBEZWxlZ2F0b3JJbmZvIHsKICBwdWIgbGV0IGlkOiBVSW50MzIKICBwdWIgbGV0IG5vZGVJRDogU3RyaW5nCiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKSB7CiAgICBsZXQgZGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCgogICAgc2VsZi5pZCA9IGRlbGVnYXRvckluZm8uaWQKICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBSZXN1bHQgewogIGxldCB0b2tlbkhvbGRlclJlZiA9IAogICAgICBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogICAgICAgICAgLmJvcnJvdzwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKCiAgdmFyIHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8gPSBuaWwKICBpZiBsZXQgdG9rZW5Ib2xkZXIgPSB0b2tlbkhvbGRlclJlZiB7CiAgICBsZXQgbG9ja2VkQWRkcmVzcyA9IHRva2VuSG9sZGVyLmdldExvY2tlZEFjY291bnRBZGRyZXNzKCkgICAgICAgCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IHRva2VuSG9sZGVyLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIGxldCB1bmxvY2tMaW1pdCA9IHRva2VuSG9sZGVyLmdldFVubG9ja0xpbWl0KCkKICAgIAogICAgdmFyIG5vZGVJbmZvOiBOb2RlSW5mbz8gPSBuaWwKICAgIGlmIGxldCBub2RlSUQgPSB0b2tlbkhvbGRlci5nZXROb2RlSUQoKSB7CiAgICAgIG5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBub2RlSUQpCiAgICB9CgogICAgdmFyIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8gPSBuaWwKICAgIHZhciBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPyA9IG5pbAogICAgaWYgbGV0IGRlbGVnYXRvck5vZGVJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvck5vZGVJRCgpIHsKICAgICAgaWYgbGV0IGRlbGVnYXRvcklEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9ySUQoKSB7CiAgICAgICAgZGVsZWdhdG9yTm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvck5vZGVJRCkKICAgICAgICBkZWxlZ2F0b3JJbmZvID0gRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQogICAgICB9IAogICAgfSAKCiAgICBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
              "getStakingInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3Rha2luZ0luZm9UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVzdGFrZVJld2FyZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "restakeRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVzdGFrZVJld2FyZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyByZXdhcmRlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgcmVzdGFrZVVuc3Rha2VkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyB1bnN0YWtlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXAgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIHNldHMgdXAgYW4gYWNjb3VudCB0byB1c2UgYSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIEl0IHdpbGwgd29yayByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGEgcmVndWxhciBhY2NvdW50LCBhIHR3by1hY2NvdW50IGxvY2tlZCB0b2tlbnMgc2V0dXAsCi8vLyBvciBzdGFraW5nIG9iamVjdHMgc3RvcmVkIGluIHRoZSB1bmxvY2tlZCBhY2NvdW50Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdywgTG9ja2VkVG9rZW5zLlRva2VuT3BlcmF0aW9ucykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBsZXQgZmxvd1Rva2VuID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpIQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IFN0YWtpbmcgQ29sbGVjdGlvbiBhbmQgcHV0IGl0IGluIHN0b3JhZ2UKICAgICAgICAgICAgaWYgbG9ja2VkSG9sZGVyLmNoZWNrKCkgewogICAgICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSgKICAgICAgICAgICAgICAgICAgICA8LSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uY3JlYXRlU3Rha2luZ0NvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlcgogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgdG86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKAogICAgICAgICAgICAgICAgICAgIDwtIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgdW5sb2NrZWRWYXVsdDogZmxvd1Rva2VuLAogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbkhvbGRlcjogbmlsCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gUHVibGlzaCBhIGNhcGFiaWxpdHkgdG8gdGhlIGNyZWF0ZWQgc3Rha2luZyBjb2xsZWN0aW9uLgogICAgICAgICAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oCiAgICAgICAgICAgICAgICBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgICAgICApCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgICAgICBzdGFraW5nQ29sbGVjdGlvbkNhcCwKICAgICAgICAgICAgICAgIGF0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgbm9kZSA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGREZWxlZ2F0b3JPYmplY3QoPC1kZWxlZ2F0b3IpCiAgICAgICAgfQogICAgfQp9",
              "setupTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQovLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIHNldHMgdXAgYW4gYWNjb3VudCB0byB1c2UgYSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIEl0IHdpbGwgd29yayByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGEgcmVndWxhciBhY2NvdW50LCBhIHR3by1hY2NvdW50IGxvY2tlZCB0b2tlbnMgc2V0dXAsCi8vLyBvciBzdGFraW5nIG9iamVjdHMgc3RvcmVkIGluIHRoZSB1bmxvY2tlZCBhY2NvdW50Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMsIFNhdmVWYWx1ZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpID09IG5pbCB7CgogICAgICAgICAgICAvLyBDcmVhdGUgcHJpdmF0ZSBjYXBhYmlsaXRpZXMgZm9yIHRoZSB0b2tlbiBob2xkZXIgYW5kIHVubG9ja2VkIHZhdWx0CiAgICAgICAgICAgIGxldCBsb2NrZWRIb2xkZXIgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3LCBMb2NrZWRUb2tlbnMuVG9rZW5PcGVyYXRpb25zKSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pigvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1GbG93U3Rha2luZ0NvbGxlY3Rpb24uY3JlYXRlU3Rha2luZ0NvbGxlY3Rpb24odW5sb2NrZWRWYXVsdDogZmxvd1Rva2VuLCB0b2tlbkhvbGRlcjogbmlsKSwgdG86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDcmVhdGUgYSBwdWJsaWMgbGluayB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgICAgIC8vIHNpZ25lci5saW5rPCZ7Rmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljfT4oCiAgICAgICAgICAgIC8vICAgICBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoLAogICAgICAgICAgICAvLyAgICAgdGFyZ2V0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgICAgICAvLyApCiAgICAgICAgICAgIGxldCBzdGFraW5nQ29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goc3Rha2luZ0NvbGxlY3Rpb25DYXAsIGF0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgc3Rha2luZyBjb2xsZWN0aW9uIHJlZmVyZW5jZSIpCgogICAgICAgIC8vIElmIHRoZXJlIGlzIGEgbm9kZSBzdGFrZXIgb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9yIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdW5zdGFrZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlcXVlc3RVbnN0YWtpbmcobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "unstakeTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgdW5zdGFrZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdHMgdW5zdGFraW5nIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdMb2NrZWQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGVU5HSUJMRVRPS0VOQUREUkVTUwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGTE9XVE9LRU5BRERSRVNTCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExPQ0tFRFRPS0VOQUREUkVTUwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKExvY2tlZFRva2Vucy5Ub2tlbk9wZXJhdGlvbnMsIEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKExvY2tlZFRva2Vucy5Ub2tlbk9wZXJhdGlvbnMsIEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiVGhlIHByaW1hcnkgdXNlciBhY2NvdW50IGRvZXMgbm90IGhhdmUgYW4gYXNzb2NpYXRlZCBsb2NrZWQgYWNjb3VudCIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0=",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdSZXdhcmQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHJld2FyZGVkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Jld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdSZXdhcmRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyByZXdhcmRlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdVbnN0YWtlZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Vuc3Rha2VkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawUnstakedTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgd2l0aGRyYXdVbnN0YWtlZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyB1bnN0YWtlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0IGlmIGl0IGlzIHRoZXJlCgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPiApID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KHZhdWx0VHlwZTogVHlwZTxAPFRva2VuPi5WYXVsdD4oKSksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goYmFsYW5jZUNhcGFiaWxpdHksIGF0OiA8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAgICAgfQogICAgCiAgICB9Cn0=",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QmFzaWNQdWJsaWNJdGVtcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getBasicPublicItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0QmFzaWNQdWJsaWNJdGVtc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpc3RydWN0IEl0ZW0gewogIGFjY2VzcyhhbGwpbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBhY2Nlc3MoYWxsKWxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0YXJnZXRQYXRoOiBTdHJpbmc/KSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgphY2Nlc3MoYWxsKWZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCgogIGZ1biBlYWNoUGF0aChwYXRoOiBQdWJsaWNQYXRoLCBjYXBUeXBlOiBUeXBlKTogQm9vbCB7CiAgICAvLyB0b2RvCiAgICBsZXQgY2FwID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZ2V0PCZBbnlTdHJ1Y3Q+KHBhdGgpCiAgICB2YXIgdGFyZ2V0UGF0aCA9ICIiCgogICAgaWYgY2FwICE9IG5pbCB7CiAgICAgIHRhcmdldFBhdGggPSAiMTIiIAogICAgfQogICAgbGV0IGl0ZW0gPSBJdGVtKGFkZHJlc3M6IGFkZHJlc3MsIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCkKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9CiAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hQdWJsaWMoZWFjaFBhdGgpCgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZUl0ZW1zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZUl0ZW1zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHR5cGU6IFR5cGUKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZVBhdGhzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQcml2YXRlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQcml2YXRlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHJpdmF0ZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicItemTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIHB1YiBsZXQgaXNDb2xsZWN0aW9uQ2FwOiBCb29sCiAgcHViIGxldCB0b2tlbklEczogW1VJbnQ2NF0KCiAgcHViIGxldCBpc0JhbGFuY2VDYXA6IEJvb2wKICBwdWIgbGV0IGJhbGFuY2U6IFVGaXg2ND8KCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsIAogICAgcGF0aDogU3RyaW5nLCAKICAgIHR5cGU6IFR5cGUsIAogICAgdGFyZ2V0UGF0aDogU3RyaW5nPywgCiAgICBpc0NvbGxlY3Rpb25DYXA6IEJvb2wsIAogICAgdG9rZW5JRHM6IFtVSW50NjRdLAogICAgaXNCYWxhbmNlQ2FwOiBCb29sLAogICAgYmFsYW5jZTogVUZpeDY0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50eXBlID0gdHlwZQogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogICAgc2VsZi5pc0NvbGxlY3Rpb25DYXAgPSBpc0NvbGxlY3Rpb25DYXAKICAgIHNlbGYudG9rZW5JRHMgPSB0b2tlbklEcwogICAgc2VsZi5pc0JhbGFuY2VDYXAgPSBpc0JhbGFuY2VDYXAKICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgbGV0IGJhbGFuY2VDYXBUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtGdW5naWJsZVRva2VuLkJhbGFuY2V9Pj4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwmQW55UmVzb3VyY2V7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4+KCkKCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIHZhciBpc0NvbGxlY3Rpb25DYXAgPSBmYWxzZQogICAgdmFyIGlzQmFsYW5jZUNhcCA9IGZhbHNlCiAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGlmICh0eXBlLmlzU3VidHlwZShvZjogYmFsYW5jZUNhcFR5cGUpKSB7CiAgICAgIGlzQmFsYW5jZUNhcCA9IHRydWUKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgICAgLmdldENhcGFiaWxpdHkocGF0aCkKICAgICAgICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCgogICAgICBpZiBsZXQgdmF1bHQgPSB2YXVsdFJlZiB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHQuYmFsYW5jZQogICAgICB9CiAgICB9IGVsc2UgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkpIHsKICAgICAgaXNDb2xsZWN0aW9uQ2FwID0gdHJ1ZQogICAgICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25SZWYgewogICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICB9CiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgsCiAgICAgIGlzQ29sbGVjdGlvbkNhcDogaXNDb2xsZWN0aW9uQ2FwLAogICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgIGlzQmFsYW5jZUNhcDogaXNCYWxhbmNlQ2FwLAogICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0UHVibGljUGF0aHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW1B1YmxpY1BhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHVibGljUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgY2xlYW5kUGF0aHMuYXBwZW5kKHBhdGgpCiAgfQogIHJldHVybiBjbGVhbmRQYXRocwp9",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmFnZVBhdGhzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdG9yYWdlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQuc3RvcmFnZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmVkSXRlbXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCgpwdWIgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBwdWIgbGV0IG5hbWU6IFN0cmluZwogIHB1YiBsZXQgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICB9Cn0KCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKICBwdWIgbGV0IGlzUmVzb3VyY2U6IEJvb2wKICBwdWIgbGV0IGlzTkZUQ29sbGVjdGlvbjogQm9vbAogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCB0b2tlbklEczogW1VJbnQ2NF0KICBwdWIgbGV0IGlzVmF1bHQ6IEJvb2wKICBwdWIgbGV0IGJhbGFuY2U6IFVGaXg2ND8KCiAgaW5pdChhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIHR5cGU6IFR5cGUsIGlzUmVzb3VyY2U6IEJvb2wsIAogICAgaXNORlRDb2xsZWN0aW9uOiBCb29sLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sCiAgICB0b2tlbklEczogW1VJbnQ2NF0sIGlzVmF1bHQ6IEJvb2wsIGJhbGFuY2U6IFVGaXg2ND8pIHsKICAgICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYudHlwZSA9IHR5cGUKICAgICAgc2VsZi5pc1Jlc291cmNlID0gaXNSZXNvdXJjZQogICAgICBzZWxmLmlzTkZUQ29sbGVjdGlvbiA9IGlzTkZUQ29sbGVjdGlvbgogICAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICAgIHNlbGYudG9rZW5JRHMgPSB0b2tlbklEcwogICAgICBzZWxmLmlzVmF1bHQgPSBpc1ZhdWx0CiAgICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWRlbnRpZmllcnM6IFtTdHJpbmddKTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IHZhdWx0VHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIGlkZW50aWZpZXIgaW4gcGF0aElkZW50aWZpZXJzIHsKICAgIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIAogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiBpc05GVENvbGxlY3Rpb24gewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXNWYXVsdCA9IHR5cGUuaXNTdWJ0eXBlKG9mOiB2YXVsdFR5cGUpIAogICAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAogICAgICBpZiBpc1ZhdWx0IHsKICAgICAgICBpZiBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0UmVmLmJhbGFuY2UKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgIGlzUmVzb3VyY2U6IGlzUmVzb3VyY2UsCiAgICAgICAgaXNORlRDb2xsZWN0aW9uOiBpc05GVENvbGxlY3Rpb24sCiAgICAgICAgZGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXksCiAgICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICAgIGlzVmF1bHQ6IGlzVmF1bHQsCiAgICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgICApCgogICAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIH0KICB9CgogIHJldHVybiBpdGVtcwp9",
              "getStoredItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmVkSXRlbXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmVkUmVzb3VyY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoU3RyOiBTdHJpbmcpOiAmQW55UmVzb3VyY2U/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVJlc291cmNlPihmcm9tOiBwYXRoKQp9",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3RvcmVkU3RydWN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVN0cnVjdD8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55U3RydWN0Pihmcm9tOiBwYXRoKQp9"
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgZ2V0U3dpdGNoYm9hcmQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQgZnJvbSAweEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKcHViIHN0cnVjdCBTd2l0Y2hib2FyZEluZm8gewogIHB1YiBsZXQgdmF1bHRUeXBlczogW1R5cGVdCgogIGluaXQodmF1bHRUeXBlczogW1R5cGVdKSB7CiAgICBzZWxmLnZhdWx0VHlwZXMgPSB2YXVsdFR5cGVzCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFN3aXRjaGJvYXJkSW5mbz8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBpZiBsZXQgYm9hcmQgPSBhY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkLlN3aXRjaGJvYXJkPihmcm9tOiBGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3RvcmFnZVBhdGgpIHsKICAgIGxldCB0eXBlcyA9IGJvYXJkLmdldFZhdWx0VHlwZXMoKQogICAgcmV0dXJuIFN3aXRjaGJvYXJkSW5mbyh2YXVsdFR5cGVzOiB0eXBlcykKICB9CiAgcmV0dXJuIG5pbAp9"
            },
            "temp": {
              "mintNFT": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgbWludE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8vIFRoaXMgc2NyaXB0IHVzZXMgdGhlIE5GVE1pbnRlciByZXNvdXJjZSB0byBtaW50IGEgbmV3IE5GVAovLy8gSXQgbXVzdCBiZSBydW4gd2l0aCB0aGUgYWNjb3VudCB0aGF0IGhhcyB0aGUgbWludGVyIHJlc291cmNlCi8vLyBzdG9yZWQgaW4gL3N0b3JhZ2UvTkZUTWludGVyCgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDM5MGI0NzA1ZGE2MzA1YzMKCnRyYW5zYWN0aW9uKAogICAgcmVjaXBpZW50OiBBZGRyZXNzLAogICAgbmFtZTogU3RyaW5nLAogICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgIHRodW1ibmFpbDogU3RyaW5nLAogICAgY3V0czogW1VGaXg2NF0sCiAgICByb3lhbHR5RGVzY3JpcHRpb25zOiBbU3RyaW5nXSwKICAgIHJveWFsdHlCZW5lZmljaWFyaWVzOiBbQWRkcmVzc10KKSB7CgogICAgLy8vIGxvY2FsIHZhcmlhYmxlIGZvciBzdG9yaW5nIHRoZSBtaW50ZXIgcmVmZXJlbmNlCiAgICBsZXQgbWludGVyOiAmRXhhbXBsZU5GVC5ORlRNaW50ZXIKCiAgICAvLy8gUmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRDb2xsZWN0aW9uUmVmOiAme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiVmlld1Jlc29sdmVyIGRvZXMgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlRNaW50ZXIgcmVzb3VyY2UgaW4gc3RvcmFnZQogICAgICAgIHNlbGYubWludGVyID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFeGFtcGxlTkZULk5GVE1pbnRlcj4oZnJvbTogRXhhbXBsZU5GVC5NaW50ZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkFjY291bnQgZG9lcyBub3Qgc3RvcmUgYW4gb2JqZWN0IGF0IHRoZSBzcGVjaWZpZWQgcGF0aCIpCgogICAgICAgIC8vIEJvcnJvdyB0aGUgcmVjaXBpZW50J3MgcHVibGljIE5GVCBjb2xsZWN0aW9uIHJlZmVyZW5jZQogICAgICAgIHNlbGYucmVjaXBpZW50Q29sbGVjdGlvblJlZiA9IGdldEFjY291bnQocmVjaXBpZW50KS5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgY29sbGVjdGlvbkRhdGEucHVibGljUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgTkZUIENvbGxlY3Rpb24iKQogICAgfQoKICAgIHByZSB7CiAgICAgICAgY3V0cy5sZW5ndGggPT0gcm95YWx0eURlc2NyaXB0aW9ucy5sZW5ndGggJiYgY3V0cy5sZW5ndGggPT0gcm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoOiAiQXJyYXkgbGVuZ3RoIHNob3VsZCBiZSBlcXVhbCBmb3Igcm95YWx0eSByZWxhdGVkIGRldGFpbHMiCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIC8vIENyZWF0ZSB0aGUgcm95YWx0eSBkZXRhaWxzCiAgICAgICAgdmFyIGNvdW50ID0gMAogICAgICAgIHZhciByb3lhbHRpZXM6IFtNZXRhZGF0YVZpZXdzLlJveWFsdHldID0gW10KICAgICAgICBsb2cocm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoKQogICAgICAgIHdoaWxlIHJveWFsdHlCZW5lZmljaWFyaWVzLmxlbmd0aCA+IGNvdW50IHsKICAgICAgICAgICAgbGV0IGJlbmVmaWNpYXJ5ID0gcm95YWx0eUJlbmVmaWNpYXJpZXNbY291bnRdCiAgICAgICAgICAgIGxldCBiZW5lZmljaWFyeUNhcGFiaWxpdHkgPSBnZXRBY2NvdW50KGJlbmVmaWNpYXJ5KS5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgICAgIE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0eVJlY2VpdmVyUHVibGljUGF0aCgpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGlmICFiZW5lZmljaWFyeUNhcGFiaWxpdHkuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBwYW5pYygiQmVuZWZpY2lhcnkgZG9lcyBub3QgaGF2ZSBSZWNlaXZlciBjb25maWd1cmVkIGF0IFJveWFsdHlSZWNlaXZlclB1YmxpY1BhdGgiKQogICAgICAgICAgICB9CgogICAgICAgICAgICByb3lhbHRpZXMuYXBwZW5kKAogICAgICAgICAgICAgICAgTWV0YWRhdGFWaWV3cy5Sb3lhbHR5KAogICAgICAgICAgICAgICAgICAgIHJlY2VpdmVyOiBiZW5lZmljaWFyeUNhcGFiaWxpdHksCiAgICAgICAgICAgICAgICAgICAgY3V0OiBjdXRzW2NvdW50XSwKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogcm95YWx0eURlc2NyaXB0aW9uc1tjb3VudF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKQogICAgICAgICAgICBjb3VudCA9IGNvdW50ICsgMQogICAgICAgIH0KCgogICAgICAgIC8vIE1pbnQgdGhlIE5GVCBhbmQgZGVwb3NpdCBpdCB0byB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGxldCBtaW50ZWRORlQgPC0gc2VsZi5taW50ZXIubWludE5GVCgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IHRodW1ibmFpbCwKICAgICAgICAgICAgcm95YWx0aWVzOiByb3lhbHRpZXMKICAgICAgICApCiAgICAgICAgc2VsZi5yZWNpcGllbnRDb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtbWludGVkTkZUKQogICAgfQoKfQ==",
              "setupFTFullTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBGVEZ1bGxUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IG1kID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSEgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhCiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IEV4YW1wbGVUb2tlbiBWYXVsdCBhbmQgcHV0IGl0IGluIHN0b3JhZ2UgaWYgb25lIGRvZXNuJ3QgZXhpc3QKICAgICAgICBpZiBhY2N0LnN0b3JhZ2UuYm9ycm93PCZFeGFtcGxlVG9rZW4uVmF1bHQ+KGZyb206IG1kLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSgKICAgICAgICAgICAgICAgIDwtRXhhbXBsZVRva2VuLmNyZWF0ZUVtcHR5VmF1bHQodmF1bHRUeXBlOiBUeXBlPEBFeGFtcGxlVG9rZW4uVmF1bHQ+KCkpLAogICAgICAgICAgICAgICAgdG86IG1kLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBjYXBhYmlsaXR5IHRvIHRoZSBWYXVsdCB0aGF0IG9ubHkgZXhwb3NlcwogICAgICAgIC8vIHRoZSBkZXBvc2l0IGZ1bmN0aW9uIHRocm91Z2ggdGhlIFJlY2VpdmVyIGludGVyZmFjZQogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnVucHVibGlzaChtZC5yZWNlaXZlclBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaCgKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXIsIEZ1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KG1kLnN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgYXQ6IG1kLnJlY2VpdmVyUGF0aAogICAgICAgICkKCiAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGNhcGFiaWxpdHkgdG8gdGhlIFZhdWx0IHRoYXQgZXhwb3NlcyB0aGUgQmFsYW5jZSBhbmQgUmVzb2x2ZXIgaW50ZXJmYWNlcwogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnVucHVibGlzaChtZC5tZXRhZGF0YVBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaCgKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KG1kLnN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgYXQ6IG1kLm1ldGFkYXRhUGF0aAogICAgICAgICkKCiAgICB9Cn0KIA==",
              "setupFTProvider": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBGVFByb3ZpZGVyIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IEV4YW1wbGVUb2tlbi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQogICAgCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgIH0KfQog",
              "setupFTProviderTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBGVFByb3ZpZGVyVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKICAgIAogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICB9Cn0KIA==",
              "setupNFTFull": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBORlRGdWxsIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgZCA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkhIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oZnJvbTogZC5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gRXhhbXBsZU5GVC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IEV4YW1wbGVORlQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGQucHVibGljUGF0aCkKICAgICAgICBsZXQgY2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0V4YW1wbGVORlQuRXhhbXBsZU5GVENvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGQuc3RvcmFnZVBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaChjYXAsIGF0OiBkLnB1YmxpY1BhdGgpCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0V4YW1wbGVORlQuRXhhbXBsZU5GVENvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGQuc3RvcmFnZVBhdGgpCiAgICB9Cn0K",
              "setupNFTFullTest": "Ly8gRmxvdyBXYWxsZXQgLSBtYWlubmV0IFNjcmlwdCAgc2V0dXBORlRGdWxsVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgZCA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkhIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oZnJvbTogZC5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gZC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGQuc3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy51bnB1Ymxpc2goZC5wdWJsaWNQYXRoKQogICAgICAgIGxldCBjYXAgPSBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZC5zdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKGNhcCwgYXQ6IGQucHVibGljUGF0aCkKCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcixOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PihkLnN0b3JhZ2VQYXRoKQogICAgfQp9Cg==",
              "test": ""
            }
          },
          "testnet": {
            "version": "1.0",
            "ft": {
              "isTokenListEnabled": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0ICBpc1Rva2VuTGlzdEVuYWJsZWQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgCiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IEZpYXRUb2tlbiBmcm9tIDB4YTk4M2ZlY2JlZDYyMTE2Mw0KaW1wb3J0IEZsb3ZhdGFyRHVzdFRva2VuIGZyb20gMHg5MzkyYTRhN2MzZjQ5YTBiDQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4DQppbXBvcnQgVVNEQ0Zsb3cgZnJvbSAweDY0YWRmMzljYmMzNTRmY2IKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9VU0RDVmF1bHRSZWNlaXZlcikKCiAgICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9VU0RDVmF1bHRCYWxhbmNlKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlICAgICAgCgogICAgICAgcmV0dXJuIGZsYWcKICAgIH0KICAgIA0KCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG92YXRhckR1c3RUb2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9GbG92YXRhckR1c3RUb2tlblJlY2VpdmVyKQoKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL0Zsb3ZhdGFyRHVzdFRva2VuQmFsYW5jZSkKCiAgICAgIGxldCBmbGFnID0gcmVjZWl2ZXIgJiYgYmFsYW5jZSAgICAgIAoKICAgICAgIHJldHVybiBmbGFnCiAgICB9CiAgICANCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrRmxvd1Rva2VuVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQoKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UgICAgICAKCiAgICAgICByZXR1cm4gZmxhZwogICAgfQogICAgDQoKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja1VTRENGbG93VmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL3VzZGNGbG93UmVjZWl2ZXIpCgogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvdXNkY0Zsb3dNZXRhZGF0YSkKCiAgICAgIGxldCBmbGFnID0gcmVjZWl2ZXIgJiYgYmFsYW5jZSAgICAgIAoKICAgICAgIHJldHVybiBmbGFnCiAgICB9CiAgICAKCiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IHtTdHJpbmc6IEJvb2x9IHsKICAgICAgcmV0dXJuIHsKICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS45MzkyYTRhN2MzZjQ5YTBiLkZsb3ZhdGFyRHVzdFRva2VuIiA6CiAgICBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLjdlNjBkZjA0MmE5YzA4NjguRmxvd1Rva2VuIiA6CiAgICBjaGVja0Zsb3dUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS42NGFkZjM5Y2JjMzU0ZmNiLlVTRENGbG93IiA6CiAgICBjaGVja1VTRENGbG93VmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgIH0KICAgIH0KICA=",
              "getTokenListBalance": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0ICBnZXRUb2tlbkxpc3RCYWxhbmNlU3RhYmxlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIAogICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGaWF0VG9rZW4gZnJvbSAweGE5ODNmZWNiZWQ2MjExNjMNCmltcG9ydCBGbG92YXRhckR1c3RUb2tlbiBmcm9tIDB4OTM5MmE0YTdjM2Y0OWEwYg0KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OA0KaW1wb3J0IFVTRENGbG93IGZyb20gMHg2NGFkZjM5Y2JjMzU0ZmNiCgogICAgCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2tGaWF0VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgLmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL1VTRENWYXVsdEJhbGFuY2UpID8/IG5pbAogICAgICAKICAgICAgaWYgdmF1bHRSZWYgIT0gbmlsIHsKICAgICAgICAKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgICAgfQogICAgICAKICAgICAgcmV0dXJuIDAuMAogICAgICAKICAgIH0KICAgIA0KCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG92YXRhckR1c3RUb2tlbkJhbGFuY2UoYWRkcmVzczogQWRkcmVzcykgOiBVRml4NjQgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5CYWxhbmNlKSA/PyBuaWwKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSA/PyBuaWwKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrVVNEQ0Zsb3dCYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgLmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL3VzZGNGbG93TWV0YWRhdGEpID8/IG5pbAogICAgICAKICAgICAgaWYgdmF1bHRSZWYgIT0gbmlsIHsKICAgICAgICAKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgICAgfQogICAgICAKICAgICAgcmV0dXJuIDAuMAogICAgICAKICAgIH0KICAgIAoKICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDoge1N0cmluZzogVUZpeDY0fSB7CiAgICAgIHJldHVybiB7CiAgICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuOTM5MmE0YTdjM2Y0OWEwYi5GbG92YXRhckR1c3RUb2tlbiIgOgogICAgY2hlY2tGbG92YXRhckR1c3RUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuN2U2MGRmMDQyYTljMDg2OC5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgLAogICAgICAiQS42NGFkZjM5Y2JjMzU0ZmNiLlVTRENGbG93IiA6CiAgICBjaGVja1VTRENGbG93QmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA==",
              "addToken": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkVG9rZW4gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+ICkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LSA8VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQodmF1bHRUeXBlOiBUeXBlPEA8VG9rZW4+LlZhdWx0PigpKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICB9CgogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlblJlY2VpdmVyUGF0aD4pID09IGZhbHNlIHsKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXBhYmlsaXR5LCBhdDogPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgICAgICAKICAgICAgICB9CiAgICAgICAKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5CYWxhbmNlUGF0aD4pID09IGZhbHNlIHsKICAgICAgICAgICAgbGV0IGJhbGFuY2VDYXBhYmlsaXR5ID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCY8VG9rZW4+LlZhdWx0Pig8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlbkJhbGFuY2VQYXRoPikKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPiApID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KHZhdWx0VHlwZTogVHlwZTxAPFRva2VuPi5WYXVsdD4oKSksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goYmFsYW5jZUNhcGFiaWxpdHksIGF0OiA8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAgICAgfQogICAgCiAgICB9Cn0=",
              "enableTokenStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0ICkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LSBGbG93VG9rZW4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcGFiaWxpdHksIGF0OiAvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQogICAgICAgIAogICAgICAgIH0KICAgICAgIAogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgYmFsYW5jZUNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
              "transferEvmTokens": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJFdm1Ub2tlbnMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKLy8vIFRyYW5zZmVycyAkRkxPVyBmcm9tIHRoZSBzaWduZXIncyBhY2NvdW50IENhZGVuY2UgRmxvdyBiYWxhbmNlIHRvIHRoZSByZWNpcGllbnQncyBoZXgtZW5jb2RlZCBFVk0gYWRkcmVzcy4KLy8vIE5vdGUgdGhhdCBhIENPQSBtdXN0IGhhdmUgYSAkRkxPVyBiYWxhbmNlIGluIEVWTSBiZWZvcmUgdHJhbnNmZXJyaW5nIHZhbHVlIHRvIGFub3RoZXIgRVZNIGFkZHJlc3MuCi8vLwp0cmFuc2FjdGlvbih0b0VWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCBnYXNMaW1pdDogVUludDY0KSB7CgogICAgbGV0IGNvYTogYXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCByZWNpcGllbnRFVk1BZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogL3N0b3JhZ2UvZXZtKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKSwgdG86IC9zdG9yYWdlL2V2bSkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcsIEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBicmlkZ2VkIGFjY291bnQiKQoKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gdG9FVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gaWYgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLmJ5dGVzID09IHNlbGYuY29hLmFkZHJlc3MoKS5ieXRlcyB7CiAgICAgICAgLy8gICAgIHJldHVybgogICAgICAgIC8vIH0KICAgICAgICBsZXQgZGF0YSA9ICIiCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "transferFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZFeGFtcGxlVG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2V4YW1wbGVUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2V4YW1wbGVUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "transferTokens": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJUb2tlbnMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCByZWNpcGllbnQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "transferTokensTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJUb2tlbnNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRXhhbXBsZVRva2VuIGZyb20gMHgzOTBiNDcwNWRhNjMwNWMzCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgcmVjaXBpZW50OiBBZGRyZXNzKSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcmVkCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkV4YW1wbGVUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZXhhbXBsZVRva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZXhhbXBsZVRva2VuUmVjZWl2ZXIpIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ=="
            },
            "nft": {
              "checkNFTListEnabledNew": "CiAgICAvLyBGbG93IFdhbGxldCAtIHRlc3RuZXQgU2NyaXB0ICBjaGVja05GVExpc3RFbmFibGVkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgIAogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCBGUkMyMFNlbWlORlQgZnJvbSAweGI3MjQ4YmFhMjRhOTVjM2YNCmltcG9ydCBuYmFfTkZUIGZyb20gMHgwNDYyNWMyODU5M2Q5NDA4DQppbXBvcnQgTW9uc3Rlck1ha2VyIGZyb20gMHg3MjRhOWRhMDAzNDBmMTRjDQppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4MzkwYjQ3MDVkYTYzMDVjMw0KaW1wb3J0IEZsb3d0eVRlc3RORlQgZnJvbSAweGQ5YzAyY2RhY2NjYjI1YWIKCiAgICAKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0ZSQzIwU2VtaU5GVFZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL0ZSQzIwU2VtaU5GVF8weGI3MjQ4YmFhMjRhOTVjM2Zjb2xsZWN0aW9uKQoKICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CiAgICANCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrbmJhX05GVFZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL25iYV9ORlRDb2xsZWN0aW9uKQoKICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CiAgICANCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrTW9uc3Rlck1ha2VyVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvTW9uc3Rlck1ha2VyQ29sbGVjdGlvbikKCiAgICAgIHJldHVybiB2YXVsdFJlZgogICAgfQogICAgDQoKICAgIGFjY2VzcyhhbGwpIGZ1biBjaGVja0V4YW1wbGVORlRWYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5leGlzdHMoL3B1YmxpYy9jYWRlbmNlRXhhbXBsZU5GVENvbGxlY3Rpb24pCgogICAgICByZXR1cm4gdmF1bHRSZWYKICAgIH0KICAgIA0KCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93dHlUZXN0TkZUVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvRmxvd3R5VGVzdE5GVENvbGxlY3Rpb24pCgogICAgICByZXR1cm4gdmF1bHRSZWYKICAgIH0KICAgIAoKICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDoge1N0cmluZzogQm9vbH0gewogICAgICByZXR1cm4gewogICAgIkEuYjcyNDhiYWEyNGE5NWMzZi5GUkMyMFNlbWlORlQiIDoKICAgIGNoZWNrRlJDMjBTZW1pTkZUVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLjA0NjI1YzI4NTkzZDk0MDgubmJhX05GVCIgOgogICAgY2hlY2tuYmFfTkZUVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLjcyNGE5ZGEwMDM0MGYxNGMuTW9uc3Rlck1ha2VyIiA6CiAgICBjaGVja01vbnN0ZXJNYWtlclZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS4zOTBiNDcwNWRhNjMwNWMzLkV4YW1wbGVORlQiIDoKICAgIGNoZWNrRXhhbXBsZU5GVFZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS5kOWMwMmNkYWNjY2IyNWFiLkZsb3d0eVRlc3RORlQiIDoKICAgIGNoZWNrRmxvd3R5VGVzdE5GVFZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg"
            },
            "basic": {
              "accountStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWNjb3VudFN0b3JhZ2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgU3RvcmFnZUluZm8gewogICAgYWNjZXNzKGFsbCkgIGxldCBjYXBhY2l0eTogVUludDY0CiAgICBhY2Nlc3MoYWxsKSAgbGV0IHVzZWQ6IFVJbnQ2NAogICAgYWNjZXNzKGFsbCkgIGxldCBhdmFpbGFibGU6IFVJbnQ2NAoKICAgIGluaXQoY2FwYWNpdHk6IFVJbnQ2NCwgdXNlZDogVUludDY0LCBhdmFpbGFibGU6IFVJbnQ2NCkgewogICAgICAgIHNlbGYuY2FwYWNpdHkgPSBjYXBhY2l0eQogICAgICAgIHNlbGYudXNlZCA9IHVzZWQKICAgICAgICBzZWxmLmF2YWlsYWJsZSA9IGF2YWlsYWJsZQogICAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogU3RvcmFnZUluZm8gewogICAgbGV0IGFjY3QgPSBnZXRBY2NvdW50KGFkZHIpCiAgICByZXR1cm4gU3RvcmFnZUluZm8oY2FwYWNpdHk6IGFjY3Quc3RvcmFnZS5jYXBhY2l0eSwKICAgICAgICAgICAgdXNlZDogYWNjdC5zdG9yYWdlLnVzZWQsCiAgICAgICAgICAgIGF2YWlsYWJsZTogYWNjdC5zdG9yYWdlLmNhcGFjaXR5IC0gYWNjdC5zdG9yYWdlLnVzZWQpCn0=",
              "addContractToAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkQ29udHJhY3RUb0FjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgY29kZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb250cmFjdHMsIEFkZENvbnRyYWN0KSAmQWNjb3VudCkgewogICAgICAgIHNpZ25lci5jb250cmFjdHMuYWRkKG5hbWU6IG5hbWUsIGNvZGU6IGNvZGUudXRmOCkKICAgIH0KfQ==",
              "addContractToAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkQ29udHJhY3RUb0FjY291bnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICB0cmFuc2FjdGlvbihuYW1lOiBTdHJpbmcsIGNvZGU6IFN0cmluZykgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29udHJhY3RzLCBBZGRDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLmFkZChuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "addKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkS2V5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgQ3J5cHRvCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChLZXlzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIHNpZ25lci5rZXlzLmFkZCgKICAgICAgICAgICAgcHVibGljS2V5OiBrZXksCiAgICAgICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwKICAgICAgICAgICAgd2VpZ2h0OiB3ZWlnaHQKICAgICAgICApCiAgICB9Cn0=",
              "addKeyTemp": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkS2V5VGVtcCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKCXByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlIHwgU3RvcmFnZSkgJkFjY291bnQpIHsKCgkJbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgoJCS8vIGFkZCBhbGwgdGhlIGtleXMgdG8gdGhlIGFjY291bnQKCQlmb3Iga2V5IGluIHB1YmxpY0tleXMgewoJCQlhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LnB1YmxpY0tleSwgaGFzaEFsZ29yaXRobToga2V5Lmhhc2hBbGdvcml0aG0sIHdlaWdodDoga2V5LndlaWdodCkKCQl9CgkJCgkJLy8gYWRkIGNvbnRyYWN0cyBpZiBwcm92aWRlZAoJCWZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CgkJCWFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCgkJfQoJfQp9",
              "createAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCgogdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30sIGZ1bmRBbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHRva2VuUmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KICAgIGxldCBzZW50VmF1bHQ6IEBGdW5naWJsZVRva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgICAgICBzZWxmLnRva2VuUmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikgPz8gcGFuaWMoIlVuYWJsZSB0byBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIikKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcicncyBWYXVsdCEiKQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogZnVuZEFtb3VudCkKICAgIH0KICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudG9rZW5SZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9CiB9",
              "createAccountEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudEVtcHR5VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KCiAgICAgICAgZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKICAgICAgICB9CgogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQoKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQog",
              "createAccountSdk": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudFNkayAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCwgY29udHJhY3RzOiB7U3RyaW5nOiBTdHJpbmd9KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSB8IFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQoKICAgICAgICBmb3IgY29udHJhY3QgaW4gY29udHJhY3RzLmtleXMgewogICAgICAgICAgICBhY2NvdW50LmNvbnRyYWN0cy5hZGQobmFtZTogY29udHJhY3QsIGNvZGU6IGNvbnRyYWN0c1tjb250cmFjdF0hLmRlY29kZUhleCgpKQogICAgICAgIH0KICAgIH0KfQ==",
              "createAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgQ3J5cHRvCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGZvciBrZXkgaW4gcHVibGljS2V5cyB7CiAgICAgICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXkucHVibGljS2V5LCBoYXNoQWxnb3JpdGhtOiBrZXkuaGFzaEFsZ29yaXRobSwgd2VpZ2h0OiBrZXkud2VpZ2h0KQogICAgICAgIH0KCiAgICAgICAgZm9yIGNvbnRyYWN0IGluIGNvbnRyYWN0cy5rZXlzIHsKICAgICAgICAgICAgYWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6IGNvbnRyYWN0LCBjb2RlOiBjb250cmFjdHNbY29udHJhY3RdIS5kZWNvZGVIZXgoKSkKICAgICAgICB9CgogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBsZXQgZmVlVmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjAwMDEpIGFzISBARmxvd1Rva2VuLlZhdWx0CgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtIGZlZVZhdWx0KQoKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0KIA==",
              "getAccountInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjb3VudEluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIHN0cnVjdCBSZXN1bHQgewogIGFjY2VzcyhhbGwpIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgYWNjZXNzKGFsbCkgbGV0IGJhbGFuY2U6IFVGaXg2NAogIGFjY2VzcyhhbGwpIGxldCBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVVzZWQ6IFVJbnQ2NAogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlQ2FwYWNpdHk6IFVJbnQ2NAoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywKICAgIGJhbGFuY2U6IFVGaXg2NCwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NCwKICAgIHN0b3JhZ2VVc2VkOiBVSW50NjQsCiAgICBzdG9yYWdlQ2FwYWNpdHk6IFVJbnQ2NAogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogICAgc2VsZi5hdmFpbGFibGVCYWxhbmNlID0gYXZhaWxhYmxlQmFsYW5jZQogICAgc2VsZi5zdG9yYWdlVXNlZCA9IHN0b3JhZ2VVc2VkCiAgICBzZWxmLnN0b3JhZ2VDYXBhY2l0eSA9IHN0b3JhZ2VDYXBhY2l0eQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIFJlc3VsdCgKICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcywKICAgIGJhbGFuY2U6IGFjY291bnQuYmFsYW5jZSwKICAgIGF2YWlsYWJsZUJhbGFuY2U6IGFjY291bnQuYXZhaWxhYmxlQmFsYW5jZSwKICAgIHN0b3JhZ2VVc2VkOiBhY2NvdW50LnN0b3JhZ2UudXNlZCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogYWNjb3VudC5zdG9yYWdlLmNhcGFjaXR5CiAgKQp9",
              "getAccountMinFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjb3VudE1pbkZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCB1c2RDYXA6IFVJbnQ2NCA9IGFjY291bnQuc3RvcmFnZS51c2VkCgogIHJldHVybiBVRml4NjQodXNkQ2FwKSAqIDAuMDAwMDAwMDIKfQ==",
              "getAccountTotalFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsRmxvd0JhbGFuY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSEKICAgICAgLmJvcnJvdygpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKICAgICAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZSArIHVubG9ja2VkQmFsYW5jZQp9",
              "getAccountTotalLockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsTG9ja2VkRmxvd0JhbGFuY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCi8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2Ci8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPgogICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgcmV0dXJuIFVGaXg2NCgwKQogICAgfQogICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIAogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2UKfQ==",
              "getAccountTotalUnlockedFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjb3VudFRvdGFsVW5sb2NrZWRGbG93QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldDwmRmxvd1Rva2VuLlZhdWx0PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
              "getFindAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RmluZEFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGSU5EIGZyb20gMHhGaW5kCi8vQ2hlY2sgdGhlIHN0YXR1cyBvZiBhIGZpbiB1c2VyCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcpIDogQWRkcmVzcz8gewogICAgbGV0IHN0YXR1cz1GSU5ELnN0YXR1cyhuYW1lKQogICAgcmV0dXJuIHN0YXR1cy5vd25lcgp9",
              "getFindDomainByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RmluZERvbWFpbkJ5QWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
              "getFlownsAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Rmxvd25zQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
              "getFlownsDomainsByAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Rmxvd25zRG9tYWluc0J5QWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
              "getStorageInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmFnZUluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKToge1N0cmluZzogVUludDY0fSB7CiAgICBsZXQgYWNjdCA9IGdldEFjY291bnQoYWRkcikKICAgIGxldCByZXQ6IHtTdHJpbmc6IFVJbnQ2NH0gPSB7fQogICAgcmV0WyJjYXBhY2l0eSJdID0gYWNjdC5zdG9yYWdlLmNhcGFjaXR5CiAgICByZXRbInVzZWQiXSA9IGFjY3Quc3RvcmFnZS51c2VkCiAgICByZXRbImF2YWlsYWJsZSJdID0gYWNjdC5zdG9yYWdlLmNhcGFjaXR5IC0gIGFjY3Quc3RvcmFnZS51c2VkCiAgICByZXR1cm4gcmV0Cn0=",
              "getTokenBalanceWithModel": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0VG9rZW5CYWxhbmNlV2l0aE1vZGVsIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KDxUb2tlbkJhbGFuY2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgY2FwYWJpbGl0eSIpCgogICAgcmV0dXJuIHZhdWx0UmVmLmJhbGFuY2UKfQ==",
              "isKeyHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgaXNLZXlIYXNGdWxsQXV0aCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHB1YmxpY0tleTogU3RyaW5nKTogQm9vbCB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgdmFyIGZsYWcgPSBmYWxzZQogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5ID09IGtleSB7CiAgICAgIGZsYWcgPSBhY2NvdW50S2V5LndlaWdodCA+PSBVRml4NjQoMTAwMCkgJiYgIWFjY291bnRLZXkuaXNSZXZva2VkCiAgICB9CiAgICByZXR1cm4gZmFsc2UKICB9CiAgYWNjb3VudC5rZXlzLmZvckVhY2goYWNjb3VudEZuKQoKICByZXR1cm4gZmxhZwp9Cg==",
              "isKeysHasFullAuth": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgaXNLZXlzSGFzRnVsbEF1dGggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwdWJsaWNLZXlzOiBbU3RyaW5nXSk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIHZhciB3ZWlnaHQ6IFVGaXg2NCA9IDAuMAogIGZ1biBhY2NvdW50Rm4oYWNjb3VudEtleTogQWNjb3VudEtleSk6IEJvb2wgewogICAgbGV0IGtleSA9IFN0cmluZy5lbmNvZGVIZXgoYWNjb3VudEtleS5wdWJsaWNLZXkucHVibGljS2V5KQogICAgaWYgcHVibGljS2V5cy5jb250YWlucyhrZXkpICYmICFhY2NvdW50S2V5LmlzUmV2b2tlZCB7CiAgICAgIHdlaWdodCA9IHdlaWdodCArIGFjY291bnRLZXkud2VpZ2h0IAogICAgfQogICAgcmV0dXJuIGZhbHNlCiAgfQogIGFjY291bnQua2V5cy5mb3JFYWNoKGFjY291bnRGbikKCiAgcmV0dXJuIHdlaWdodCA+PSBVRml4NjQoMTAwMCkKfQo=",
              "isLockedFlowEnable": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgaXNMb2NrZWRGbG93RW5hYmxlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgcmV0dXJuIGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyhMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQp9",
              "isTokenStorageEnabled": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgaXNUb2tlblN0b3JhZ2VFbmFibGVkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgIAogICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZXhpc3RzKDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICBsZXQgYmFsYW5jZSA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5CYWxhbmNlUGF0aD4pCgogICAgcmV0dXJuIHJlY2VpdmVyICYmIGJhbGFuY2UKfQ==",
              "queryFlowBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcXVlcnlGbG93QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgphY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgPz8gbmlsCgogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgfQogICAgCiAgICByZXR1cm4gMC4wCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJzOiBbQWRkcmVzc10pOiBbVUZpeDY0XSB7CiAgICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgICAgICBsZXQgYmFsID0gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHIpCiAgICAgICAgYmFscy5hcHBlbmQoYmFsKQogICAgfQogICAgCiAgICByZXR1cm4gYmFscwp9",
              "queryFlowBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcXVlcnlGbG93QmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCgphY2Nlc3MoYWxsKSBmdW4gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgPz8gbmlsCgogICAgCiAgICBpZiB2YXVsdFJlZiAhPSBuaWwgewogICAgICAgIHJldHVybiB2YXVsdFJlZiEuYmFsYW5jZQogICAgfQogICAgCiAgICByZXR1cm4gMC4wCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJzOiBbQWRkcmVzc10pOiBbVUZpeDY0XSB7CiAgICBsZXQgYmFsczogW1VGaXg2NF0gPSBbXQoKICAgIGZvciBhZGRyIGluIGFkZHJzIHsKICAgICAgICBsZXQgYmFsID0gY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHIpCiAgICAgICAgYmFscy5hcHBlbmQoYmFsKQogICAgfQogICAgCiAgICByZXR1cm4gYmFscwp9",
              "removeAccountKeyByIndex": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVtb3ZlQWNjb3VudEtleUJ5SW5kZXggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKGtleUluZGV4OiBJbnQpIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEtleXMpICZBY2NvdW50KSB7CiAgICAgICAgc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBrZXlJbmRleCkKICAgIH0KfQ==",
              "removeContractFromAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVtb3ZlQ29udHJhY3RGcm9tQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChSZW1vdmVDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLnJlbW92ZShuYW1lOiBuYW1lKQogICAgfQp9",
              "revokeKey": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmV2b2tlS2V5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICB0cmFuc2FjdGlvbihpbmRleDogSW50KSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChLZXlzKSAmQWNjb3VudCkgewogICAgICAgIC8vIEdldCBhIGtleSBmcm9tIGFuIGF1dGggYWNjb3VudC4KICAgICAgICBsZXQga2V5QSA9IHNpZ25lci5rZXlzLnJldm9rZShrZXlJbmRleDogaW5kZXgpCiAgICB9Cn0=",
              "test": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "updateContractOfAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdXBkYXRlQ29udHJhY3RPZkFjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgY29kZTogU3RyaW5nKSB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChVcGRhdGVDb250cmFjdCkgJkFjY291bnQpIHsKICAgICAgICBzaWduZXIuY29udHJhY3RzLnVwZGF0ZShuYW1lOiBuYW1lLCBjb2RlOiBjb2RlLnV0ZjgpCiAgICB9Cn0=",
              "verifyUserSignature": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdmVyaWZ5VXNlclNpZ25hdHVyZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oCiAgICBtZXNzYWdlOiBTdHJpbmcsCiAgICByYXdQdWJsaWNLZXlzOiBbU3RyaW5nXSwKICAgIHdlaWdodHM6IFtVRml4NjRdLAogICAgc2lnbkFsZ29zOiBbVUludDhdLAogICAgaGFzaEFsZ29zOiBbVUludDhdLAogICAgc2lnbmF0dXJlczogW1N0cmluZ10sCik6IEJvb2wgewoKICAgIGxldCBrZXlMaXN0ID0gQ3J5cHRvLktleUxpc3QoKQoKICAgIHZhciBpID0gMAogICAgZm9yIHJhd1B1YmxpY0tleSBpbiByYXdQdWJsaWNLZXlzIHsKICAgIGtleUxpc3QuYWRkKAogICAgICAgIFB1YmxpY0tleSgKICAgICAgICBwdWJsaWNLZXk6IHJhd1B1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbkFsZ29zW2ldKSEKICAgICAgICApLAogICAgICAgIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvc1tpXSkhLAogICAgICAgIHdlaWdodDogd2VpZ2h0c1tpXSwKICAgICkKICAgIGkgPSBpICsgMQogICAgfQoKICAgIGxldCBzaWduYXR1cmVTZXQ6IFtDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZV0gPSBbXQoKICAgIHZhciBqID0gMAogICAgZm9yIHNpZ25hdHVyZSBpbiBzaWduYXR1cmVzIHsKICAgIHNpZ25hdHVyZVNldC5hcHBlbmQoCiAgICAgICAgQ3J5cHRvLktleUxpc3RTaWduYXR1cmUoCiAgICAgICAgICAgIGtleUluZGV4OiBqLAogICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5kZWNvZGVIZXgoKQogICAgICAgICkKICAgICkKICAgICAgICBqID0gaiArIDEKICAgIH0KCiAgICBsZXQgc2lnbmVkRGF0YSA9IG1lc3NhZ2UuZGVjb2RlSGV4KCkKCiAgICByZXR1cm4ga2V5TGlzdC52ZXJpZnkoCiAgICAgICAgc2lnbmF0dXJlU2V0OiBzaWduYXR1cmVTZXQsCiAgICAgICAgc2lnbmVkRGF0YTogc2lnbmVkRGF0YSwKICAgICAgICBkb21haW5TZXBhcmF0aW9uVGFnOiAiRkxPVy1WMC4wLXVzZXIiCiAgICApCn0=",
              "verifyUserSignatureTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdmVyaWZ5VXNlclNpZ25hdHVyZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KCmFjY2VzcyhhbGwpIGZ1biBtYWluKAogICAgbWVzc2FnZTogU3RyaW5nLAogICAgcmF3UHVibGljS2V5OiBTdHJpbmcsCiAgICB3ZWlnaHQ6IFVGaXg2NCwKICAgIHNpZ25BbGdvOiBVSW50OCwKICAgIGhhc2hBbGdvOiBVSW50OCwKICAgIHNpZ25hdHVyZTogU3RyaW5nLAopOiBCb29sIHsKCiAgICBsZXQga2V5TGlzdDogQ3J5cHRvLktleUxpc3QgPSBDcnlwdG8uS2V5TGlzdCgpCgogICAga2V5TGlzdC5hZGQoCiAgICAgICAgUHVibGljS2V5KAogICAgICAgIHB1YmxpY0tleTogcmF3UHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduQWxnbykhCiAgICAgICAgKSwKICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnbykhLAogICAgICAgIHdlaWdodDogd2VpZ2h0LAogICAgKQoKICAgIGxldCBzaWduYXR1cmVTZXQ6IFtDcnlwdG8uS2V5TGlzdFNpZ25hdHVyZV0gPSBbXQoKICAgIHNpZ25hdHVyZVNldC5hcHBlbmQoCiAgICAgICAgQ3J5cHRvLktleUxpc3RTaWduYXR1cmUoCiAgICAgICAgICAgIGtleUluZGV4OiAwLAogICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5kZWNvZGVIZXgoKQogICAgICAgICkKICAgICkKCiAgICBsZXQgc2lnbmVkRGF0YSA9IG1lc3NhZ2UuZGVjb2RlSGV4KCkKCiAgICByZXR1cm4ga2V5TGlzdC52ZXJpZnkoCiAgICAgICAgc2lnbmF0dXJlU2V0OiBzaWduYXR1cmVTZXQsCiAgICAgICAgc2lnbmVkRGF0YTogc2lnbmVkRGF0YSwKICAgICAgICBkb21haW5TZXBhcmF0aW9uVGFnOiAiRkxPVy1WMC4wLXVzZXIiCiAgICApCn0=",
              "withdrawAllUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdBbGxVbmxvY2tlZEZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3Cgp0cmFuc2FjdGlvbigpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGFtb3VudDogVUZpeDY0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgIHNlbGYuaG9sZGVyUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCgkJCQlzZWxmLnZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IHNpZ25lcgogICAgICAgIC5jYXBhYmlsaXRpZXMuZ2V0PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCgogICAgICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgICAgIHBhbmljKCJDb3VsZCBub3QgZ2V0IGZsb3cgbG9ja2VkIHRva2VuIHZhdWx0IikKICAgICAgICB9CgogICAgICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgICAgICBsZXQgbG9ja2VkQmFsYW5jZVVubG9ja2VkID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0VW5sb2NrTGltaXQoKQoKICAgICAgICAvLyBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgLy8gICAgIHBhbmljKCJOb3QgZW5vdWdoIGFtb3VudCB0byB3aXRoZHJhdyIpCiAgICAgICAgLy8gfQoKICAgICAgICBzZWxmLmFtb3VudCA9IGxvY2tlZEJhbGFuY2VVbmxvY2tlZAogICAgCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBzZWxmLmFtb3VudCkpCiAgICB9Cn0=",
              "withdrawUnlockedFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdVbmxvY2tlZEZsb3cgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIC8vIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCi8vIGltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhMb2NrZWRUb2tlbnMKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhlZTgyODU2YmYyMGUyYWE2CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDBhZTUzY2I2ZTNmNDJhNzkKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0="
            },
            "account": {
              "getBookmark": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Qm9va21hcmsgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93dmlld0FjY291bnRCb29rbWFyayBmcm9tIDB4Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsKCnB1YiBmdW4gbWFpbihvd25lcjogQWRkcmVzcywgdGFyZ2V0OiBBZGRyZXNzKTogJkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9PyB7CiAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChvd25lcikKICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtDb2xsZWN0aW9uPihmcm9tOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtDb2xsZWN0aW9uU3RvcmFnZVBhdGgpIHsKICAgIHJldHVybiBjb2xsZWN0aW9uLmJvcnJvd1B1YmxpY0FjY291bnRCb29rbWFyayhhZGRyZXNzOiB0YXJnZXQpCiAgfSAKCiAgcmV0dXJuIG5pbAp9",
              "getBookmarks": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Qm9va21hcmtzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsgZnJvbSAweEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrCgpwdWIgZnVuIG1haW4ob3duZXI6IEFkZHJlc3MpOiAme0FkZHJlc3M6IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya3tGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmtQdWJsaWN9fT8gewogIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQob3duZXIpCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvbj4oZnJvbTogRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYWNjb3VudCBib29rbWFyayBjb2xsZWN0aW9uIikKCiAgcmV0dXJuIGNvbGxlY3Rpb24uZ2V0QWNjb3VudEJvb2ttYXJrcygpCn0="
            },
            "bridge": {
              "batchBridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRGcm9tRXZtIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZHM6IFtVSW50MjU2XSkgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKSAqIFVGaXg2NChpZHMubGVuZ3RoKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgICAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfSA8LSBzZWxmLmNvYS53aXRoZHJhd05GVCgKICAgICAgICAgICAgICAgIHR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgICAgICBzZWxmLmNvbGxlY3Rpb24uZGVwb3NpdCh0b2tlbjogPC1uZnQpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgTkZUIGludG8gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24KICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchBridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRGcm9tRXZtVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gYnJpZGdlcyBhbiBORlQgZnJvbSBFVk0gdG8gQ2FkZW5jZSBhc3N1bWluZyBpdCBoYXMgYWxyZWFkeSBiZWVuIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8gTk9URTogVGhlIEVSQzcyMSBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCB2aWEgdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzOiBzZWxmLmV2bUNvbnRyYWN0QWRkcmVzcykKLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgRVJDNzIxIGlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIENhZGVuY2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQyNTZdKSB7CgogICAgbGV0IG5mdFR5cGU6IFR5cGUKICAgIGxldCBjb2xsZWN0aW9uOiAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDNzIxIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBORlQgdHlwZQogICAgICAgIHNlbGYubmZ0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiBuZnRDb250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IG5mdENvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIk5GVCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBORlQgdHlwZSIpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb25EYXRhLmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjb2xsZWN0aW9uQ2FwLCBhdDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICB9CiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGNvbGxlY3Rpb24gZnJvbSBzdG9yYWdlIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApICogVUZpeDY0KGlkcy5sZW5ndGgpCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICAgICAgdHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICAgICApCiAgICAgICAgICAgIHNlbGYuY29sbGVjdGlvbi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCBORlQgaW50byB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbgogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchBridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRUb0V2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIAogICAgbGV0IG5mdHM6IEB7VUludDY0IDoge05vbkZ1bmdpYmxlVG9rZW4uTkZUfX0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICBzZWxmLm5mdHMgPC0ge30KICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgc2VsZi5uZnRzW2lkXSA8LSEgbmZ0CiAgICAgICAgfQogICAgICAgIC8vIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwICogVUZpeDY0KGlkcy5sZW5ndGgpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgdmFyIGlkeCA9IDAKICAgICAgICB3aGlsZSBpZHggPCBpZHMubGVuZ3RoIHsKICAgICAgICAgICAgbGV0IG5mdElkID0gaWRzW2lkeF0hCiAgICAgICAgICAgIGxldCBuZnQgPC0gc2VsZi5uZnRzLnJlbW92ZShrZXk6IG5mdElkKSEgYXMgQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgICAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCggCiAgICAgICAgICAgICAgICBuZnQ6IDwtIG5mdCEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgaWR4ID0gaWR4ICsgMQogICAgICAgIH0KICAgICAgIAogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYubmZ0cwogICAgfQp9Cg==",
              "batchBridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hCcmlkZ2VORlRUb0V2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICAgIAogICAgbGV0IG5mdHM6IEB7VUludDY0IDoge05vbkZ1bmdpYmxlVG9rZW4uTkZUfX0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICBzZWxmLm5mdHMgPC0ge30KICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICAgICAgc2VsZi5uZnRzW2lkXSA8LSEgbmZ0CiAgICAgICAgfQogICAgICAgIC8vIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwICogVUZpeDY0KGlkcy5sZW5ndGgpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgdmFyIGlkeCA9IDAKICAgICAgICB3aGlsZSBpZHggPCBpZHMubGVuZ3RoIHsKICAgICAgICAgICAgbGV0IG5mdElkID0gaWRzW2lkeF0hCiAgICAgICAgICAgIGxldCBuZnQgPC0gc2VsZi5uZnRzLnJlbW92ZShrZXk6IG5mdElkKSEgYXMgQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgICAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCggCiAgICAgICAgICAgICAgICBuZnQ6IDwtIG5mdCEsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICAgICAgaWR4ID0gaWR4ICsgMQogICAgICAgIH0KICAgICAgIAogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYubmZ0cwogICAgfQp9Cg==",
              "batchEvmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hFdm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSBFVk0gY29udHJhY3QgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIGV2bUFkZHJlc3NlczogQXJyYXkgb2YgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4IHRvIGNoZWNrIGZvcgovLy8gICAgIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vICAgICBpbmRleGVkIG9uIHRoZSBoZXgtZW5jb2RlZCBhZGRyZXNzIG9mIHRoZSBFVk0gY29udHJhY3Qgd2l0aG91dCAweCBwcmVmaXgKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NlczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchEvmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hFdm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzZXM6IEFycmF5IG9mIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeCB0byBjaGVjayBmb3IKLy8vICAgICBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLyAgICAgaW5kZXhlZCBvbiB0aGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IHdpdGhvdXQgMHggcHJlZml4Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzZXM6IFtTdHJpbmddKToge1N0cmluZzogQm9vbD99IHsKICAgIC8vIGxldCBldm1BZGRyZXNzZXMgPSBbIjZBOWRBNWQ2M2ZGMzM1MzY2N0QzNEMwMjAyQzYyOEM3REEzYzJDMWYiXQogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CiAgICBmb3IgYWRkcmVzc0hleCBpbiBldm1BZGRyZXNzZXMgewogICAgICAgIGlmIHJlc3VsdHNbYWRkcmVzc0hleF0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KSB7CiAgICAgICAgICAgIGxldCByZXF1aXJlc09uYm9hcmRpbmcgPSBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgICAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBhZGRyZXNzSGV4LCByZXF1aXJlc09uYm9hcmRpbmcpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchIdentifierRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hJZGVudGlmaWVyUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXJzOiBbU3RyaW5nXSk6IHtTdHJpbmc6IEJvb2w/fSB7CiAgICBsZXQgcmVzdWx0czoge1N0cmluZzogQm9vbD99ID0ge30KCiAgICBmb3IgaWRlbnRpZmllciBpbiBpZGVudGlmaWVycyB7CiAgICAgICAgaWYgcmVzdWx0c1tpZGVudGlmaWVyXSAhPSBuaWwgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KICAgICAgICBsZXQgdHlwZTogVHlwZSA9IENvbXBvc2l0ZVR5cGUoaWRlbnRpZmllcikgPz8gcGFuaWMoIkludmFsaWQgdHlwZSBpZGVudGlmaWVyIikKICAgICAgICByZXN1bHRzLmluc2VydChrZXk6IGlkZW50aWZpZXIsIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKSkKICAgIH0KICAgIHJldHVybiByZXN1bHRzCn0K",
              "batchIdentifierRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hJZGVudGlmaWVyUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgbGV0IHJlc3VsdHM6IHtTdHJpbmc6IEJvb2w/fSA9IHt9CgogICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgewogICAgICAgIGlmIHJlc3VsdHNbaWRlbnRpZmllcl0gIT0gbmlsIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICB9CiAgICAgICAgbGV0IHR5cGU6IFR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgcmVzdWx0cy5pbnNlcnQoa2V5OiBpZGVudGlmaWVyLCBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0cwp9Cg==",
              "batchOnboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlFdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlFdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBhZGRyZXNzZXNBc0hleDogQXJyYXkgb2YgRVZNIGNvbnRyYWN0IGFkZHJlc3NlcyAoYXMgaGV4IHN0cmluZyB3aXRob3V0IDB4IHByZWZpeCkgZGVmaW5pbmcgdGhlIAovLy8gICAgIGJyaWRnZWFibGUgYXNzZXQgdG8gYmUgb25ib2FyZGVkCi8vLwp0cmFuc2FjdGlvbihhZGRyZXNzZXNBc0hleDogW1N0cmluZ10pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NChhZGRyZXNzZXNBc0hleC5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBwcm92aWRlZCBhcnJheQogICAgICAgIGZvciBhZGRyZXNzSGV4IGluIGFkZHJlc3Nlc0FzSGV4IHsKICAgICAgICAgICAgLy8gQ29udmVydCBoZXggc3RyaW5nIHRvIEVWTUFkZHJlc3MKICAgICAgICAgICAgbGV0IGFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzSGV4KQogICAgICAgICAgICAvLyBDb250aW51ZSBpZiB0aGUgaGV4IGlzIG5vdCBhIHZhbGlkIEVWTSBhZGRyZXNzIG9yIGlmIHRoZSBhZGRyZXNzIGlzIGFscmVhZHkgb25ib2FyZGVkCiAgICAgICAgICAgIGlmIGFkZHJlc3MgPT0gbmlsIHx8IEZsb3dFVk1CcmlkZ2UuZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyhhZGRyZXNzISkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgICAgICBhZGRyZXNzISwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlJZGVudGlmaWVyIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KHR5cGVzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXJzIGluIGlkZW50aWZpZXJzIHsgCiAgICAgICAgICAgIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgICAgICAvLyBDb250aW51ZSBvbiBpZiB0aGUgdHlwZSBkb2VzIG5vdCByZXF1aXJlIG9uYm9hcmRpbmcKICAgICAgICAgICAgaWYgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpICE9IHRydWUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBPbmJvYXJkIHRoZSBhc3NldCBUeXBlCiAgICAgICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgICAgICkKICAgICAgICB9CiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "batchOnboardByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlJZGVudGlmaWVyVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCgppbXBvcnQgRVZNIGZyb20gMHhlNDY3YjlkZDExZmEwMGRmCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXJzOiBbU3RyaW5nXSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIC8vIFNldCBhIHdpdGhkcmF3YWwgbGltaXQgZm9yIHRoZSBwcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckxpbWl0ID0gRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlICogVUZpeDY0KGlkZW50aWZpZXJzLmxlbmd0aCkKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIocHJvdmlkZXJMaW1pdCkKICAgICAgICAvLyBDcmVhdGUgU2NvcGVkRlRQcm92aWRlciB0byBleHBpcmUganVzdCBhZnRlciB0aGlzIHRyYW5zYWN0aW9uCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgZm9yIGlkZW50aWZpZXIgaW4gaWRlbnRpZmllcnMgeyAKICAgICAgICAgICAgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpID8/IHBhbmljKCJJbnZhbGlkIHR5cGUgaWRlbnRpZmllciIpCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByType": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlUeXBlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchOnboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hPbmJvYXJkQnlUeXBlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gb25ib2FyZHMgdGhlIGFzc2V0IHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIGFzc2V0cyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgYXNzZXQgdG8gRVZNCi8vLwovLy8gQHBhcmFtIHR5cGVzOiBUaGUgQ2FkZW5jZSB0eXBlcyBvZiB0aGUgYnJpZGdlYWJsZSBhc3NldCB0byBvbmJvYXJkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKHR5cGVzOiBbVHlwZV0pIHsKCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICAvLyBTZXQgYSB3aXRoZHJhd2FsIGxpbWl0IGZvciB0aGUgcHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJMaW1pdCA9IEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSAqIFVGaXg2NCh0eXBlcy5sZW5ndGgpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKHByb3ZpZGVyTGltaXQpCiAgICAgICAgLy8gQ3JlYXRlIFNjb3BlZEZUUHJvdmlkZXIgdG8gZXhwaXJlIGp1c3QgYWZ0ZXIgdGhpcyB0cmFuc2FjdGlvbgogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGZvciB0eXBlIGluIHR5cGVzIHsgCiAgICAgICAgICAgIC8vIENvbnRpbnVlIG9uIGlmIHRoZSB0eXBlIGRvZXMgbm90IHJlcXVpcmUgb25ib2FyZGluZwogICAgICAgICAgICBpZiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkgIT0gdHJ1ZSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlUeXBlKAogICAgICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "batchTypeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUeXBlUmVxdWlyZXNPbmJvYXJkaW5nIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIFJldHVybnMgd2hldGhlciBhIHR5cGUgbmVlZHMgdG8gYmUgb25ib2FyZGVkIHRvIHRoZSBGbG93RVZNQnJpZGdlCi8vLwovLy8gQHBhcmFtIFR5cGVzOiBUaGUgYXJyYXkgb2YgdHlwZXMgdG8gY2hlY2sgZm9yIG9uYm9hcmRpbmcgc3RhdHVzCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbCBpbmRleGVkCi8vLyAgICAgb24gdGhlIHR5cGUKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKHR5cGVzOiBbVHlwZV0pOiB7VHlwZTogQm9vbD99IHsKICAgIGxldCByZXN1bHRzOiB7VHlwZTogQm9vbD99ID0ge30KICAgIGZvciB0eXBlIGluIHR5cGVzIHsKICAgICAgICBpZiByZXN1bHRzW3R5cGVdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogdHlwZSwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "batchTypeRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUeXBlUmVxdWlyZXNPbmJvYXJkaW5nVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBUeXBlczogVGhlIGFycmF5IG9mIHR5cGVzIHRvIGNoZWNrIGZvciBvbmJvYXJkaW5nIHN0YXR1cwovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwgaW5kZXhlZAovLy8gICAgIG9uIHRoZSB0eXBlCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihpZGVudGlmaWVyczogW1N0cmluZ10pOiB7U3RyaW5nOiBCb29sP30gewogICAgLy8gbGV0IGlkZW50aWZpZXJzID0gWyJBLjQ5ZTdhNWE0ZWRlZmU0MmUuRXhhbXBsZVRva2VuLlZhdWx0IiwiQS40OWU3YTVhNGVkZWZlNDJlLkV4YW1wbGVORlQuTkZUIl0KICAgIGxldCByZXN1bHRzOiB7U3RyaW5nOiBCb29sP30gPSB7fQoKICAgIGZvciBpZGVudGlmaWVyIGluIGlkZW50aWZpZXJzIHsKICAgICAgICBpZiByZXN1bHRzW2lkZW50aWZpZXJdICE9IG5pbCB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQogICAgICAgIGxldCB0eXBlOiBUeXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQogICAgICAgIHJlc3VsdHMuaW5zZXJ0KGtleTogaWRlbnRpZmllciwgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpKQogICAgfQogICAgcmV0dXJuIHJlc3VsdHMKfQo=",
              "bridgeNFTFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NikgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NikgewoKICAgIGxldCBuZnRUeXBlOiBUeXBlCiAgICBsZXQgY29sbGVjdGlvbjogJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzcyMSBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gTkZUIHR5cGUKICAgICAgICBzZWxmLm5mdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogbmZ0Q29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiBuZnRDb250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJORlQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgTkZUIHR5cGUiKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBORlQgQ29sbGVjdGlvbiAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi5uZnRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uRGF0YS5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY29sbGVjdGlvbkNhcCwgYXQ6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYuY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGZyb20gc3RvcmFnZSBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZURnJvbUV2bVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgYW4gTkZUIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIEVSQzcyMSBpZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBDYWRlbmNlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgbmZ0VHlwZTogVHlwZQogICAgbGV0IGNvbGxlY3Rpb246ICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkM3MjEgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIE5GVCB0eXBlCiAgICAgICAgc2VsZi5uZnRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IG5mdENvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogbmZ0Q29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiTkZUIgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IE5GVCB0eXBlIikKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24gLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYubmZ0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbkRhdGEuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCksIHRvOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2goY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNvbGxlY3Rpb25DYXAsIGF0OiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBjb2xsZWN0aW9uIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9IDwtIHNlbGYuY29hLndpdGhkcmF3TkZUKAogICAgICAgICAgICB0eXBlOiBzZWxmLm5mdFR5cGUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIE5GVCBpbnRvIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm0gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICAgIAogICAgbGV0IG5mdDogQHtOb25GdW5naWJsZVRva2VuLk5GVH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCiAgICAgICAgCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdE5GVCgKICAgICAgICAgICAgbmZ0OiA8LXNlbGYubmZ0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeNFTToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICAvLyBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeNFTToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gQnJpZGdlcyBhbiBORlQgZnJvbSB0aGUgc2lnbmVyJ3MgY29sbGVjdGlvbiBpbiBDYWRlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRmxvd0VWTQovLy8gTk9URTogVGhlIE5GVCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIG5mdENvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gbmZ0Q29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBpZDogVGhlIENhZGVuY2UgTkZULmlkIG9mIHRoZSBORlQgdG8gYnJpZGdlIHRvIEVWTQovLy8KdHJhbnNhY3Rpb24obmZ0Q29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCBuZnRDb250cmFjdE5hbWU6IFN0cmluZywgaWQ6IFVJbnQ2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewogICAgCiAgICBsZXQgbmZ0OiBAe05vbkZ1bmdpYmxlVG9rZW4uTkZUfQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKICAgICAgICAKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIE5GVCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgTkZUIGNvbGxlY3Rpb24sIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KG5mdENvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IG5mdENvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gTkZUIGNvbnRyYWN0IikKICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KAogICAgICAgICAgICAgICAgZnJvbTogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBORlQgQ29sbGVjdGlvbiIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgTkZUICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIE5GVCBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5uZnQgPC0gY29sbGVjdGlvbi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0TkZUKAogICAgICAgICAgICBuZnQ6IDwtc2VsZi5uZnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlTkZUVG9Fdm1UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBCcmlkZ2VzIGFuIE5GVCBmcm9tIHRoZSBzaWduZXIncyBjb2xsZWN0aW9uIGluIENhZGVuY2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBGbG93RVZNCi8vLyBOT1RFOiBUaGUgTkZUIGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gbmZ0Q29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgTkZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBuZnRDb250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGlkOiBUaGUgQ2FkZW5jZSBORlQuaWQgb2YgdGhlIE5GVCB0byBicmlkZ2UgdG8gRVZNCi8vLwp0cmFuc2FjdGlvbihuZnRDb250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIG5mdENvbnRyYWN0TmFtZTogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQogICAgICAgIAogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgTkZUIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlQgY29sbGVjdGlvbiwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQobmZ0Q29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogbmZ0Q29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBORlQgY29udHJhY3QiKQogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpCiAgICAgICAgICAgICkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBORlRDb2xsZWN0aW9uRGF0YSB2aWV3IikKICAgICAgICBsZXQgY29sbGVjdGlvbiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oCiAgICAgICAgICAgICAgICBmcm9tOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIE5GVCBDb2xsZWN0aW9uIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBORlQgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gTkZUIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2KSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2KSB7CgogICAgbGV0IHZhdWx0VHlwZTogVHlwZQogICAgbGV0IHJlY2VpdmVyOiAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBDb3B5VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8vIEdldCB0aGUgRVJDMjAgY29udHJhY3QgYWRkcmVzcyBmb3IgdGhlIGdpdmVuIEZ1bmdpYmxlVG9rZW4gVmF1bHQgdHlwZQogICAgICAgIHNlbGYudmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuQ29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICAgICAgY29udHJhY3ROYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSwKICAgICAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgY29uc3RydWN0IFZhdWx0IHR5cGUgb2Y6ICIgLmNvbmNhdCh0b2tlbkNvbnRyYWN0QWRkcmVzcy50b1N0cmluZygpKS5jb25jYXQoIi4iKS5jb25jYXQodG9rZW5Db250cmFjdE5hbWUpLmNvbmNhdCgiLlZhdWx0IikpCgogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIFZhdWx0IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0LCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICAvLyBJZiB0aGUgdmF1bHQgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBpdCBhbmQgcHVibGlzaCBhY2NvcmRpbmcgdG8gdGhlIGNvbnRyYWN0J3MgZGVmaW5lZCBjb25maWd1cmF0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LXZhdWx0RGF0YS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCh2YXVsdERhdGEubWV0YWRhdGFQYXRoKQoKICAgICAgICAgICAgbGV0IHJlY2VpdmVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgbGV0IG1ldGFkYXRhQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcCwgYXQ6IHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChtZXRhZGF0YUNhcCwgYXQ6IHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCiAgICAgICAgfQogICAgICAgIHNlbGYucmVjZWl2ZXIgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWYXVsdCBmcm9tIHN0b3JhZ2UgcGF0aCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBicmlkZ2UgZmVlIC0gYnJpZGdpbmcgZnJvbSBFVk0gY29uc3VtZXMgbm8gc3RvcmFnZSwgc28gZmxhdCBmZWUKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogMCkKICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UgcmVxdWVzdAogICAgICAgIGxldCB2YXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fSA8LSBzZWxmLmNvYS53aXRoZHJhd1Rva2VucygKICAgICAgICAgICAgdHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgIGFtb3VudDogYW1vdW50LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlcG9zaXQgdGhlIGJyaWRnZWQgdG9rZW4gaW50byB0aGUgc2lnbmVyJ3MgdmF1bHQKICAgICAgICBzZWxmLnJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC12YXVsdCkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensFromEvmToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4Rmxvd0VWTUJyaWRnZQppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKLy8vLyBUaGlzIHRyYW5zYWN0aW9uIGJyaWRnZXMgZnVuZ2libGUgdG9rZW5zIGZyb20gRVZNIHRvIENhZGVuY2UgYXNzdW1pbmcgaXQgaGFzIGFscmVhZHkgYmVlbiBvbmJvYXJkZWQgdG8gdGhlCi8vLyBGbG93RVZNQnJpZGdlLgovLy8KLy8vIE5PVEU6IFRoZSBFUkM3MjEgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgdmlhIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzczogc2VsZi5ldm1Db250cmFjdEFkZHJlc3MpCi8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVSW50MjU2LCByZWNlaXZlcjogQWRkcmVzcykgewoKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUKICAgIGxldCByZWNlaXZlcjogJntGdW5naWJsZVRva2VuLlJlY2VpdmVyfQogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgQ29weVZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvLyBHZXQgdGhlIEVSQzIwIGNvbnRyYWN0IGFkZHJlc3MgZm9yIHRoZSBnaXZlbiBGdW5naWJsZVRva2VuIFZhdWx0IHR5cGUKICAgICAgICBzZWxmLnZhdWx0VHlwZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5idWlsZENvbXBvc2l0ZVR5cGUoCiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbkNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6ICJWYXVsdCIKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGNvbnN0cnVjdCBWYXVsdCB0eXBlIG9mOiAiIC5jb25jYXQodG9rZW5Db250cmFjdEFkZHJlc3MudG9TdHJpbmcoKSkuY29uY2F0KCIuIikuY29uY2F0KHRva2VuQ29udHJhY3ROYW1lKS5jb25jYXQoIi5WYXVsdCIpKQoKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBWYXVsdCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdCwgY29uZmlndXJpbmcgaWYgbmVjZXNzYXJ5CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgLy8gSWYgdGhlIHZhdWx0IGRvZXMgbm90IGV4aXN0LCBjcmVhdGUgaXQgYW5kIHB1Ymxpc2ggYWNjb3JkaW5nIHRvIHRoZSBjb250cmFjdCdzIGRlZmluZWQgY29uZmlndXJhdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pihmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC12YXVsdERhdGEuY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy51bnB1Ymxpc2godmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKCiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgIGxldCBtZXRhZGF0YUNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uVmF1bHR9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gocmVjZWl2ZXJDYXAsIGF0OiB2YXVsdERhdGEucmVjZWl2ZXJQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2gobWV0YWRhdGFDYXAsIGF0OiB2YXVsdERhdGEubWV0YWRhdGFQYXRoKQogICAgICAgIH0KICAgICAgICBsZXQgcmVjZWl2ZXJBY2N0ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgICAgICBzZWxmLnJlY2VpdmVyID0gcmVjZWl2ZXJBY2N0LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmF1bHQgcmVjZWl2ZXIgY2FwYWJpbGl0aWVzIGZyb20gcHVibGljIHBhdGgiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgYnJpZGdlIGZlZSAtIGJyaWRnaW5nIGZyb20gRVZNIGNvbnN1bWVzIG5vIHN0b3JhZ2UsIHNvIGZsYXQgZmVlCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IDApCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlIHJlcXVlc3QKICAgICAgICBsZXQgdmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0gPC0gc2VsZi5jb2Eud2l0aGRyYXdUb2tlbnMoCiAgICAgICAgICAgIHR5cGU6IHNlbGYudmF1bHRUeXBlLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXBvc2l0IHRoZSBicmlkZ2VkIHRva2VuIGludG8gdGhlIHNpZ25lcidzIHZhdWx0CiAgICAgICAgc2VsZi5yZWNlaXZlci5kZXBvc2l0KGZyb206IDwtdmF1bHQpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensFromEvmToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zRnJvbUV2bVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLy8gVGhpcyB0cmFuc2FjdGlvbiBicmlkZ2VzIGZ1bmdpYmxlIHRva2VucyBmcm9tIEVWTSB0byBDYWRlbmNlIGFzc3VtaW5nIGl0IGhhcyBhbHJlYWR5IGJlZW4gb25ib2FyZGVkIHRvIHRoZQovLy8gRmxvd0VWTUJyaWRnZS4KLy8vCi8vLyBOT1RFOiBUaGUgRVJDNzIxIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIHZpYSB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3M6IHNlbGYuZXZtQ29udHJhY3RBZGRyZXNzKQovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUludDI1NiwgcmVjZWl2ZXI6IEFkZHJlc3MpIHsKCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlCiAgICBsZXQgcmVjZWl2ZXI6ICZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0KICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIENvcHlWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLy8gR2V0IHRoZSBFUkMyMCBjb250cmFjdCBhZGRyZXNzIGZvciB0aGUgZ2l2ZW4gRnVuZ2libGVUb2tlbiBWYXVsdCB0eXBlCiAgICAgICAgc2VsZi52YXVsdFR5cGUgPSBGbG93RVZNQnJpZGdlVXRpbHMuYnVpbGRDb21wb3NpdGVUeXBlKAogICAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgICAgICBjb250cmFjdE5hbWU6IHRva2VuQ29udHJhY3ROYW1lLAogICAgICAgICAgICAgICAgcmVzb3VyY2VOYW1lOiAiVmF1bHQiCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgVmF1bHQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQsIGNvbmZpZ3VyaW5nIGlmIG5lY2Vzc2FyeQogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogc2VsZi52YXVsdFR5cGUsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIC8vIElmIHRoZSB2YXVsdCBkb2VzIG5vdCBleGlzdCwgY3JlYXRlIGl0IGFuZCBwdWJsaXNoIGFjY29yZGluZyB0byB0aGUgY29udHJhY3QncyBkZWZpbmVkIGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlZhdWx0fT4oZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtdmF1bHREYXRhLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHZhdWx0RGF0YS5tZXRhZGF0YVBhdGgpCgogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICBsZXQgbWV0YWRhdGFDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGdW5naWJsZVRva2VuLlZhdWx0fT4odmF1bHREYXRhLnN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwLCBhdDogdmF1bHREYXRhLnJlY2VpdmVyUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKG1ldGFkYXRhQ2FwLCBhdDogdmF1bHREYXRhLm1ldGFkYXRhUGF0aCkKICAgICAgICB9CiAgICAgICAgbGV0IHJlY2VpdmVyQWNjdCA9IGdldEFjY291bnQocmVjZWl2ZXIpCiAgICAgICAgc2VsZi5yZWNlaXZlciA9IHJlY2VpdmVyQWNjdC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHZhdWx0RGF0YS5yZWNlaXZlclBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZhdWx0IHJlY2VpdmVyIGNhcGFiaWxpdGllcyBmcm9tIHB1YmxpYyBwYXRoIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIGJyaWRnZSBmZWUgLSBicmlkZ2luZyBmcm9tIEVWTSBjb25zdW1lcyBubyBzdG9yYWdlLCBzbyBmbGF0IGZlZQogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKGJ5dGVzOiAwKQogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZSByZXF1ZXN0CiAgICAgICAgbGV0IHZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9IDwtIHNlbGYuY29hLndpdGhkcmF3VG9rZW5zKAogICAgICAgICAgICB0eXBlOiBzZWxmLnZhdWx0VHlwZSwKICAgICAgICAgICAgYW1vdW50OiBhbW91bnQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgYnJpZGdlZCB0b2tlbiBpbnRvIHRoZSBzaWduZXIncyB2YXVsdAogICAgICAgIHNlbGYucmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXZhdWx0KQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "bridgeTokensToEvm": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm0gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBCcmlkZ2VzIGEgVmF1bHQgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmFnZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEVWTS5BY2NvdW50LgovLy8KLy8vIE5PVEU6IFRoZSBWYXVsdCBiZWluZyBicmlkZ2VkIG11c3QgaGF2ZSBmaXJzdCBiZWVuIG9uYm9hcmRlZCB0byB0aGUgYnJpZGdlLiBUaGlzIGNhbiBiZSBjaGVja2VkIGZvciB3aXRoIHRoZSBtZXRob2QKLy8vICAgICBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSk6IEJvb2w/Ci8vLwovLy8gQHBhcmFtIHRva2VuQ29udHJhY3RBZGRyZXNzOiBUaGUgRmxvdyBhY2NvdW50IGFkZHJlc3MgaG9zdGluZyB0aGUgRlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIHRva2VuQ29udHJhY3ROYW1lOiBUaGUgbmFtZSBvZiB0aGUgVmF1bHQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIGFtb3VudDogVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYnJpZGdlIGZyb20gRVZNCi8vLwp0cmFuc2FjdGlvbih0b2tlbkNvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgdG9rZW5Db250cmFjdE5hbWU6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgc2VudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBSZWZlcmVuY2UgdGhlIHNpZ25lcidzIENhZGVuY2VPd25lZEFjY291bnQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIENPQQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkJyaWRnZSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IENPQSBmcm9tIHByb3ZpZGVkIGdhdGV3YXkgYWRkcmVzcyIpCgogICAgICAgIC8qIC0tLSBSZXRyaWV2ZSB0aGUgZnVuZHMgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIEZ1bmdpYmxlVG9rZW4gVmF1bHQKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudCh0b2tlbkNvbnRyYWN0QWRkcmVzcykuY29udHJhY3RzLmJvcnJvdzwme1ZpZXdSZXNvbHZlcn0+KG5hbWU6IHRva2VuQ29udHJhY3ROYW1lKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBWaWV3UmVzb2x2ZXIgZnJvbSBGdW5naWJsZVRva2VuIGNvbnRyYWN0IikKICAgICAgICBsZXQgdmF1bHREYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpCiAgICAgICAgICAgICkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPyA/PyBwYW5pYygiQ291bGQgbm90IHJlc29sdmUgRlRWYXVsdERhdGEgdmlldyIpCiAgICAgICAgbGV0IHZhdWx0ID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlZhdWx0fT4oCiAgICAgICAgICAgICAgICBmcm9tOiB2YXVsdERhdGEuc3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGFjY2VzcyBzaWduZXIncyBGdW5naWJsZVRva2VuIFZhdWx0IikKCiAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBiYWxhbmNlICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdC53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGluIHN0b3JhZ2UgdXNhZ2Ugd2l0aCBzb21lIGJ1ZmZlcgogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBFeGVjdXRlIHRoZSBicmlkZ2UKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0VG9rZW5zKAogICAgICAgICAgICB2YXVsdDogPC1zZWxmLnNlbnRWYXVsdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4Rmxvd0VWTUJyaWRnZQoKaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0LCBjb250cmFjdEVWTUFkZHJlc3M6IFN0cmluZywgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBsZXQgdmF1bHRUeXBlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmJ1aWxkQ29tcG9zaXRlVHlwZSgKICAgICAgICAgICAgYWRkcmVzczogdG9rZW5Db250cmFjdEFkZHJlc3MsCiAgICAgICAgICAgIGNvbnRyYWN0TmFtZTogdG9rZW5Db250cmFjdE5hbWUsCiAgICAgICAgICAgIHJlc291cmNlTmFtZTogIlZhdWx0IgogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBjb25zdHJ1Y3QgVmF1bHQgdHlwZSBvZjogIiAuY29uY2F0KHRva2VuQ29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkpLmNvbmNhdCgiLiIpLmNvbmNhdCh0b2tlbkNvbnRyYWN0TmFtZSkuY29uY2F0KCIuVmF1bHQiKSkKCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCgogICAgICAgIHZhciBhZGRyZXNzQnl0ZXM6IFtVSW50OF0gPSBjb250cmFjdEVWTUFkZHJlc3MuZGVjb2RlSGV4KCkKICAgICAgICBsZXQgZXZtVG9rZW5BZGRyID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgLy8gbGV0IGRhdGEgPSBkYXRhU3RyLmRlY29kZUhleCgpCiAgICAgICAgIGxldCByZXMgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogZXZtVG9rZW5BZGRyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCgogICAgICAgIGFzc2VydChyZXMuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIkVWTSBjYWxsIGZhaWxlZCIpCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "bridgeTokensToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIEJyaWRnZXMgYSBWYXVsdCBmcm9tIHRoZSBzaWduZXIncyBzdG9yYWdlIHRvIHRoZSBzaWduZXIncyBDT0EgaW4gRVZNLkFjY291bnQuCi8vLwovLy8gTk9URTogVGhlIFZhdWx0IGJlaW5nIGJyaWRnZWQgbXVzdCBoYXZlIGZpcnN0IGJlZW4gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UuIFRoaXMgY2FuIGJlIGNoZWNrZWQgZm9yIHdpdGggdGhlIG1ldGhvZAovLy8gICAgIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKTogQm9vbD8KLy8vCi8vLyBAcGFyYW0gdG9rZW5Db250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBGVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gdG9rZW5Db250cmFjdE5hbWU6IFRoZSBuYW1lIG9mIHRoZSBWYXVsdC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gYW1vdW50OiBUaGUgYW1vdW50IG9mIHRva2VucyB0byBicmlkZ2UgZnJvbSBFVk0KLy8vCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY29udHJhY3RFVk1BZGRyZXNzOiBTdHJpbmcsIGRhdGFTdHI6IFN0cmluZywgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIGxldCBjb2E6IGF1dGgoRVZNLkJyaWRnZSwgRVZNLkNhbGwsIEVWTS5Pd25lcikgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlLCBFVk0uQ2FsbCwgRVZNLk93bmVyKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIGJhbGFuY2UgJiBjYWxjdWxhdGUgdGhlIGFwcHJveGltYXRlIGJyaWRnZSBmZWUgYmFzZWQgb24gc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0LndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgICAgIGxldCB3aXRoZHJhd25TdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgLy8gQXBwcm94aW1hdGUgdGhlIGJyaWRnZSBmZWUgYmFzZWQgb24gdGhlIGRpZmZlcmVuY2UgaW4gc3RvcmFnZSB1c2FnZSB3aXRoIHNvbWUgYnVmZmVyCiAgICAgICAgbGV0IGFwcHJveEZlZSA9IEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoCiAgICAgICAgICAgICAgICBieXRlczogY3VycmVudFN0b3JhZ2VVc2FnZSAtIHdpdGhkcmF3blN0b3JhZ2VVc2FnZQogICAgICAgICAgICApICogMS4xMAoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoYXBwcm94RmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0VG9rZW5zKAogICAgICAgICAgICB2YXVsdDogPC1zZWxmLnNlbnRWYXVsdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IGNvbnRyYWN0RVZNQWRkcmVzcy5kZWNvZGVIZXgoKQogICAgICAgIGxldCBldm1Ub2tlbkFkZHIgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogWwogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMF0sIGFkZHJlc3NCeXRlc1sxXSwgYWRkcmVzc0J5dGVzWzJdLCBhZGRyZXNzQnl0ZXNbM10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s0XSwgYWRkcmVzc0J5dGVzWzVdLCBhZGRyZXNzQnl0ZXNbNl0sIGFkZHJlc3NCeXRlc1s3XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzhdLCBhZGRyZXNzQnl0ZXNbOV0sIGFkZHJlc3NCeXRlc1sxMF0sIGFkZHJlc3NCeXRlc1sxMV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxMl0sIGFkZHJlc3NCeXRlc1sxM10sIGFkZHJlc3NCeXRlc1sxNF0sIGFkZHJlc3NCeXRlc1sxNV0sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1sxNl0sIGFkZHJlc3NCeXRlc1sxN10sIGFkZHJlc3NCeXRlc1sxOF0sIGFkZHJlc3NCeXRlc1sxOV0KICAgICAgICBdKQogICAgICAgIGxldCB2YWx1ZUJhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICBsZXQgZGF0YSA9IGRhdGFTdHIuZGVjb2RlSGV4KCkKCiAgICAgICAgbGV0IHJlcyA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBldm1Ub2tlbkFkZHIsCiAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgIGdhc0xpbWl0OiBnYXNMaW1pdCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlQmFsYW5jZQogICAgICAgICkKCiAgICAgICAgYXNzZXJ0KHJlcy5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLCBtZXNzYWdlOiAiRVZNIGNhbGwgZmFpbGVkIikKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "bridgeTokensToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlVG9rZW5zVG9Fdm1UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gQnJpZGdlcyBhIFZhdWx0IGZyb20gdGhlIHNpZ25lcidzIHN0b3JhZ2UgdG8gdGhlIHNpZ25lcidzIENPQSBpbiBFVk0uQWNjb3VudC4KLy8vCi8vLyBOT1RFOiBUaGUgVmF1bHQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0QWRkcmVzczogVGhlIEZsb3cgYWNjb3VudCBhZGRyZXNzIGhvc3RpbmcgdGhlIEZULWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSB0b2tlbkNvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIFZhdWx0LWRlZmluaW5nIENhZGVuY2UgY29udHJhY3QKLy8vIEBwYXJhbSBhbW91bnQ6IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJyaWRnZSBmcm9tIEVWTQovLy8KdHJhbnNhY3Rpb24odG9rZW5Db250cmFjdEFkZHJlc3M6IEFkZHJlc3MsIHRva2VuQ29udHJhY3ROYW1lOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CgogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICAvKiAtLS0gUmV0cmlldmUgdGhlIGZ1bmRzIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBGdW5naWJsZVRva2VuIFZhdWx0CiAgICAgICAgbGV0IHZpZXdSZXNvbHZlciA9IGdldEFjY291bnQodG9rZW5Db250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiB0b2tlbkNvbnRyYWN0TmFtZSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgVmlld1Jlc29sdmVyIGZyb20gRnVuZ2libGVUb2tlbiBjb250cmFjdCIpCiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IHZpZXdSZXNvbHZlci5yZXNvbHZlQ29udHJhY3RWaWV3KAogICAgICAgICAgICAgICAgcmVzb3VyY2VUeXBlOiBuaWwsCiAgICAgICAgICAgICAgICB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKQogICAgICAgICAgICApIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIEZUVmF1bHREYXRhIHZpZXciKQogICAgICAgIGxldCB2YXVsdCA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5WYXVsdH0+KAogICAgICAgICAgICAgICAgZnJvbTogdmF1bHREYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgRnVuZ2libGVUb2tlbiBWYXVsdCIpCgogICAgICAgIC8vIFdpdGhkcmF3IHRoZSByZXF1ZXN0ZWQgYmFsYW5jZSAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBzdG9yYWdlIHVzYWdlCiAgICAgICAgbGV0IGN1cnJlbnRTdG9yYWdlVXNhZ2UgPSBzaWduZXIuc3RvcmFnZS51c2VkCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHQud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICAvLyBBcHByb3hpbWF0ZSB0aGUgYnJpZGdlIGZlZSBiYXNlZCBvbiB0aGUgZGlmZmVyZW5jZSBpbiBzdG9yYWdlIHVzYWdlIHdpdGggc29tZSBidWZmZXIKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgYnJpZGdlCiAgICAgICAgc2VsZi5jb2EuZGVwb3NpdFRva2VucygKICAgICAgICAgICAgdmF1bHQ6IDwtc2VsZi5zZW50VmF1bHQsCiAgICAgICAgICAgIGZlZVByb3ZpZGVyOiAmc2VsZi5zY29wZWRQcm92aWRlciBhcyBhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0KICAgICAgICApCiAgICAgICAgLy8gRGVzdHJveSB0aGUgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "calculateBridgeFee": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2FsY3VsYXRlQnJpZGdlRmVlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB0aGUgY2FsY3VsYXRlZCBmZWUgYmFzZWQgb24gdGhlIG51bWJlciBvZiBieXRlcyB1c2VkIHRvIGVzY3JvdyBhbiBhc3NldCBwbHVzIHRoZSBiYXNlIGZlZS4KLy8vCi8vLyBAcGFyYW0gYnl0ZXM6IFRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQuCi8vLwovLy8gQHJldHVybiBUaGUgY2FsY3VsYXRlZCBmZWUgdG8gYmUgcGFpZCBpbiBGbG93VG9rZW4KLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGJ5dGVzIHVzZWQ6IFVJbnQ2NCk6IFVGaXg2NCB7CiAgICByZXR1cm4gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZShieXRlczogdXNlZCkKfQo=",
              "calculateBridgeFeeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2FsY3VsYXRlQnJpZGdlRmVlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgZmVlIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgYnl0ZXMgdXNlZCB0byBlc2Nyb3cgYW4gYXNzZXQgcGx1cyB0aGUgYmFzZSBmZWUuCi8vLwovLy8gQHBhcmFtIGJ5dGVzOiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHVzZWQgdG8gZXNjcm93IGFuIGFzc2V0LgovLy8KLy8vIEByZXR1cm4gVGhlIGNhbGN1bGF0ZWQgZmVlIHRvIGJlIHBhaWQgaW4gRmxvd1Rva2VuCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihieXRlcyB1c2VkOiBVSW50NjQpOiBVRml4NjQgewogICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2VVdGlscy5jYWxjdWxhdGVCcmlkZ2VGZWUoYnl0ZXM6IHVzZWQpCn0K",
              "evmAddressRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgRVZNIGNvbnRyYWN0IG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBldm1BZGRyZXNzSGV4OiBUaGUgaGV4LWVuY29kZWQgYWRkcmVzcyBvZiB0aGUgRVZNIGNvbnRyYWN0IGFzIGEgU3RyaW5nIHdpdGhvdXQgMHggcHJlZml4Ci8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSBjb250cmFjdCByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGV2bUFkZHJlc3NIZXg6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCBhZGRyZXNzID0gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0Zyb21IZXhTdHJpbmcoYWRkcmVzczogZXZtQWRkcmVzc0hleCkgewogICAgICAgIHJldHVybiBGbG93RVZNQnJpZGdlLmV2bUFkZHJlc3NSZXF1aXJlc09uYm9hcmRpbmcoYWRkcmVzcykKICAgIH0KICAgIHJldHVybiBuaWwKfQo=",
              "evmAddressRequiresOnboardingTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZXZtQWRkcmVzc1JlcXVpcmVzT25ib2FyZGluZ1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk1VdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgd2hldGhlciBhIEVWTSBjb250cmFjdCBuZWVkcyB0byBiZSBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcGFyYW0gZXZtQWRkcmVzc0hleDogVGhlIGhleC1lbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIEVWTSBjb250cmFjdCBhcyBhIFN0cmluZyB3aXRob3V0IDB4IHByZWZpeAovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgY29udHJhY3QgcmVxdWlyZXMgb25ib2FyZGluZyB0byB0aGUgRmxvd0VWTUJyaWRnZSBpZiB0aGUgdHlwZSBpcyBicmlkZ2VhYmxlLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbihldm1BZGRyZXNzSGV4OiBTdHJpbmcpOiBCb29sPyB7CiAgICBpZiBsZXQgYWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGV2bUFkZHJlc3NIZXgpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS5ldm1BZGRyZXNzUmVxdWlyZXNPbmJvYXJkaW5nKGFkZHJlc3MpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K",
              "getAssociatedEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QXNzb2NpYXRlZEV2bUFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gUmV0dXJucyB0aGUgRVZNIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoZSBnaXZlbiBDYWRlbmNlIHR5cGUgKGFzIGl0cyBpZGVudGlmaWVyIFN0cmluZykKLy8vCi8vLyBAcGFyYW0gdHlwZUlkZW50aWZpZXIgVGhlIENhZGVuY2UgdHlwZSBpZGVudGlmaWVyIFN0cmluZwovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzIGEgaGV4IHN0cmluZyBpZiB0aGUgdHlwZSBoYXMgYW4gYXNzb2NpYXRlZCBFVk1BZGRyZXNzLCBvdGhlcndpc2UgbmlsCi8vLwphY2Nlc3MoYWxsKQpmdW4gbWFpbihpZGVudGlmaWVyOiBTdHJpbmcpOiBTdHJpbmc/IHsKICAgIGlmIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSB7CiAgICAgICAgaWYgbGV0IGFkZHJlc3MgPSBGbG93RVZNQnJpZGdlQ29uZmlnLmdldEVWTUFkZHJlc3NBc3NvY2lhdGVkKHdpdGg6IHR5cGUpIHsKICAgICAgICAgICAgcmV0dXJuIEVWTVV0aWxzLmdldEVWTUFkZHJlc3NBc0hleFN0cmluZyhhZGRyZXNzOiBhZGRyZXNzKQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getAssociatedEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QXNzb2NpYXRlZEV2bUFkZHJlc3NUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhlNDY3YjlkZDExZmEwMGRmCgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4MWU0YWEwYjg3ZDEwYjE0MQoKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuIENhZGVuY2UgdHlwZSAoYXMgaXRzIGlkZW50aWZpZXIgU3RyaW5nKQovLy8KLy8vIEBwYXJhbSB0eXBlSWRlbnRpZmllciBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgU3RyaW5nCi8vLwovLy8gQHJldHVybiBUaGUgRVZNIGFkZHJlc3MgYXMgYSBoZXggc3RyaW5nIGlmIHRoZSB0eXBlIGhhcyBhbiBhc3NvY2lhdGVkIEVWTUFkZHJlc3MsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpCmZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IFN0cmluZz8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICBpZiBsZXQgYWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2VDb25maWcuZ2V0RVZNQWRkcmVzc0Fzc29jaWF0ZWQod2l0aDogdHlwZSkgewogICAgICAgICAgICByZXR1cm4gYWRkcmVzcy50b1N0cmluZygpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIG5pbAp9",
              "getBridgeCoaAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QnJpZGdlQ29hQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcmV0dXJuIFRoZSBFVk0gYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhlIEZsb3dFVk1CcmlkZ2UncyBjb29yZGluYXRpbmcgQ2FkZW5jZU93bmVkQWNjb3VudAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IEZsb3dFVk1CcmlkZ2UuZ2V0QnJpZGdlQ09BRVZNQWRkcmVzcygpCiAgICByZXR1cm4gRVZNVXRpbHMuZ2V0RVZNQWRkcmVzc0FzSGV4U3RyaW5nKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "getBridgeCoaAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QnJpZGdlQ29hQWRkcmVzc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmltcG9ydCBFVk1VdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKLy8vIFJldHVybnMgdGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEByZXR1cm4gVGhlIEVWTSBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgRmxvd0VWTUJyaWRnZSdzIGNvb3JkaW5hdGluZyBDYWRlbmNlT3duZWRBY2NvdW50Ci8vLwphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZS5nZXRCcmlkZ2VDT0FFVk1BZGRyZXNzKCkKICAgIHJldHVybiBFVk1VdGlscy5nZXRFVk1BZGRyZXNzQXNIZXhTdHJpbmcoYWRkcmVzczogYWRkcmVzcykKfQ==",
              "onboardByEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5RXZtQWRkcmVzcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEVWTVV0aWxzIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgTkZUIHR5cGUgdG8gdGhlIGJyaWRnZSwgY29uZmlndXJpbmcgdGhlIGJyaWRnZSB0byBtb3ZlIE5GVHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIE5GVCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gY29udHJhY3RBZGRyZXNzSGV4OiBUaGUgRVZNIGFkZHJlc3Mgb2YgdGhlIGNvbnRyYWN0IChhcyBoZXggc3RyaW5nIHdpdGhvdXQgMHggcHJlZml4KSBkZWZpbmluZyB0aGUgCi8vLyAgICAgYnJpZGdlYWJsZSBhc3NldCB0byBiZSBvbmJvYXJkZWQKLy8vCnRyYW5zYWN0aW9uKGNvbnRyYWN0QWRkcmVzc0hleDogU3RyaW5nKSB7CgogICAgbGV0IGNvbnRyYWN0QWRkcmVzczogRVZNLkVWTUFkZHJlc3MKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLyogLS0tIENvbnN0cnVjdCBFVk1BZGRyZXNzIGZyb20gaGV4IHN0cmluZyAobm8gbGVhZGluZyBgIjB4ImApIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi5jb250cmFjdEFkZHJlc3MgPSBFVk1VdGlscy5nZXRFVk1BZGRyZXNzRnJvbUhleFN0cmluZyhhZGRyZXNzOiBjb250cmFjdEFkZHJlc3NIZXgpCiAgICAgICAgICAgID8/IHBhbmljKCJJbnZhbGlkIEVWTSBhZGRyZXNzIHN0cmluZyBwcm92aWRlZCIpCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgRVZNIGNvbnRyYWN0CiAgICAgICAgRmxvd0VWTUJyaWRnZS5vbmJvYXJkQnlFVk1BZGRyZXNzKAogICAgICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcywKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5RXZtQWRkcmVzc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRVZNVXRpbHMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBORlQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgTkZUcyBiZXR3ZWVuIGVudmlyb25tZW50cwovLy8gTk9URTogVGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIGJyaWRnaW5nIGEgQ2FkZW5jZS1uYXRpdmUgTkZUIHRvIEVWTQovLy8KLy8vIEBwYXJhbSBjb250cmFjdEFkZHJlc3NIZXg6IFRoZSBFVk0gYWRkcmVzcyBvZiB0aGUgY29udHJhY3QgKGFzIGhleCBzdHJpbmcgd2l0aG91dCAweCBwcmVmaXgpIGRlZmluaW5nIHRoZSAKLy8vICAgICBicmlkZ2VhYmxlIGFzc2V0IHRvIGJlIG9uYm9hcmRlZAovLy8KdHJhbnNhY3Rpb24oY29udHJhY3RBZGRyZXNzSGV4OiBTdHJpbmcpIHsKCiAgICBsZXQgY29udHJhY3RBZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gQ29uc3RydWN0IEVWTUFkZHJlc3MgZnJvbSBoZXggc3RyaW5nIChubyBsZWFkaW5nIGAiMHgiYCkgLS0tICovCiAgICAgICAgLy8KICAgICAgICBzZWxmLmNvbnRyYWN0QWRkcmVzcyA9IEVWTVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IGNvbnRyYWN0QWRkcmVzc0hleCkKICAgICAgICAgICAgPz8gcGFuaWMoIkludmFsaWQgRVZNIGFkZHJlc3Mgc3RyaW5nIHByb3ZpZGVkIikKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKEZsb3dFVk1CcmlkZ2VDb25maWcub25ib2FyZEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJDYXBDb3B5LAogICAgICAgICAgICAgICAgZmlsdGVyczogWyBwcm92aWRlckZpbHRlciBdLAogICAgICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgICAgICkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBPbmJvYXJkIHRoZSBFVk0gY29udHJhY3QKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeUVWTUFkZHJlc3MoCiAgICAgICAgICAgIHNlbGYuY29udHJhY3RBZGRyZXNzLAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIGRlc3Ryb3kgc2VsZi5zY29wZWRQcm92aWRlcgogICAgfQp9Cg==",
              "onboardByType": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSB0eXBlIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZTogVHlwZSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZUlkZW50aWZpZXIgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgoKaW1wb3J0IFNjb3BlZEZUUHJvdmlkZXJzIGZyb20gMHhGbG93RVZNQnJpZGdlCgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhGbG93RVZNQnJpZGdlCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhGbG93RVZNQnJpZGdlCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmVyOiBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXI6IFN0cmluZykgewoKICAgIGxldCB0eXBlOiBUeXBlCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgdGhlIHR5cGUgZnJvbSBpZGVudGlmaWVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi50eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHNlbGYudHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZUlkZW50aWZpZXJUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZjIzM2RjZWU4OGZlMGFiZQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweDFlNGFhMGI4N2QxMGIxNDEKCmltcG9ydCBFVk0gZnJvbSAweGU0NjdiOWRkMTFmYTAwZGYKCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHgxZTRhYTBiODdkMTBiMTQxCgovLy8gVGhpcyB0cmFuc2FjdGlvbiBvbmJvYXJkcyB0aGUgYXNzZXQgdHlwZSB0byB0aGUgYnJpZGdlLCBjb25maWd1cmluZyB0aGUgYnJpZGdlIHRvIG1vdmUgYXNzZXRzIGJldHdlZW4gZW52aXJvbm1lbnRzCi8vLyBOT1RFOiBUaGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgYnJpZGdpbmcgYSBDYWRlbmNlLW5hdGl2ZSBhc3NldCB0byBFVk0KLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmVyOiBUaGUgQ2FkZW5jZSB0eXBlIGlkZW50aWZpZXIgb2YgdGhlIGJyaWRnZWFibGUgYXNzZXQgdG8gb25ib2FyZGVkIHRvIHRoZSBicmlkZ2UKLy8vCnRyYW5zYWN0aW9uKGlkZW50aWZpZXI6IFN0cmluZykgewoKICAgIGxldCB0eXBlOiBUeXBlCiAgICBsZXQgc2NvcGVkUHJvdmlkZXI6IEBTY29wZWRGVFByb3ZpZGVycy5TY29wZWRGVFByb3ZpZGVyCiAgICAKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENvcHlWYWx1ZSwgQm9ycm93VmFsdWUsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8qIC0tLSBDb25zdHJ1Y3QgdGhlIHR5cGUgZnJvbSBpZGVudGlmaWVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgc2VsZi50eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSA/PyBwYW5pYygiSW52YWxpZCB0eXBlIGlkZW50aWZpZXIiKQoKICAgICAgICAvKiAtLS0gQ29uZmlndXJlIGEgU2NvcGVkRlRQcm92aWRlciAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIElzc3VlIGFuZCBzdG9yZSBicmlkZ2UtZGVkaWNhdGVkIFByb3ZpZGVyIENhcGFiaWxpdHkgaW4gc3RvcmFnZSBpZiBuZWNlc3NhcnkKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigKICAgICAgICAgICAgICAgIC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZShwcm92aWRlckNhcCwgdG86IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIC8vIENvcHkgdGhlIHN0b3JlZCBQcm92aWRlciBjYXBhYmlsaXR5IGFuZCBjcmVhdGUgYSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwQ29weSA9IHNpZ25lci5zdG9yYWdlLmNvcHk8Q2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigKICAgICAgICAgICAgICAgIGZyb206IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgKICAgICAgICAgICAgKSA/PyBwYW5pYygiSW52YWxpZCBQcm92aWRlciBDYXBhYmlsaXR5IGZvdW5kIGluIHN0b3JhZ2UuIikKICAgICAgICBsZXQgcHJvdmlkZXJGaWx0ZXIgPSBTY29wZWRGVFByb3ZpZGVycy5BbGxvd2FuY2VGaWx0ZXIoRmxvd0VWTUJyaWRnZUNvbmZpZy5vbmJvYXJkRmVlKQogICAgICAgIHNlbGYuc2NvcGVkUHJvdmlkZXIgPC0gU2NvcGVkRlRQcm92aWRlcnMuY3JlYXRlU2NvcGVkRlRQcm92aWRlcigKICAgICAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBbIHByb3ZpZGVyRmlsdGVyIF0sCiAgICAgICAgICAgICAgICBleHBpcmF0aW9uOiBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAgKyAxLjAKICAgICAgICAgICAgKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIE9uYm9hcmQgdGhlIGFzc2V0IFR5cGUKICAgICAgICBGbG93RVZNQnJpZGdlLm9uYm9hcmRCeVR5cGUoCiAgICAgICAgICAgIHNlbGYudHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "onboardByTypeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgb25ib2FyZEJ5VHlwZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZsb3dFVk1CcmlkZ2VDb25maWcgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIG9uYm9hcmRzIHRoZSBhc3NldCB0eXBlIHRvIHRoZSBicmlkZ2UsIGNvbmZpZ3VyaW5nIHRoZSBicmlkZ2UgdG8gbW92ZSBhc3NldHMgYmV0d2VlbiBlbnZpcm9ubWVudHMKLy8vIE5PVEU6IFRoaXMgbXVzdCBiZSBkb25lIGJlZm9yZSBicmlkZ2luZyBhIENhZGVuY2UtbmF0aXZlIGFzc2V0IHRvIEVWTQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSB0eXBlIG9mIHRoZSBicmlkZ2VhYmxlIGFzc2V0IHRvIG9uYm9hcmQgdG8gdGhlIGJyaWRnZQovLy8KdHJhbnNhY3Rpb24odHlwZTogVHlwZSkgewoKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKICAgIAogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ29weVZhbHVlLCBCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihGbG93RVZNQnJpZGdlQ29uZmlnLm9uYm9hcmRGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gT25ib2FyZCB0aGUgYXNzZXQgVHlwZQogICAgICAgIEZsb3dFVk1CcmlkZ2Uub25ib2FyZEJ5VHlwZSgKICAgICAgICAgICAgdHlwZSwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQo=",
              "typeRequiresOnboarding": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSB0eXBlOiBUaGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4odHlwZTogVHlwZSk6IEJvb2w/IHsKICAgIHJldHVybiBGbG93RVZNQnJpZGdlLnR5cGVSZXF1aXJlc09uYm9hcmRpbmcodHlwZSkKfQo=",
              "typeRequiresOnboardingByIdentifier": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZ0J5SWRlbnRpZmllciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFVk1CcmlkZ2UgZnJvbSAweEZsb3dFVk1CcmlkZ2UKCi8vLyBSZXR1cm5zIHdoZXRoZXIgYSB0eXBlIG5lZWRzIHRvIGJlIG9uYm9hcmRlZCB0byB0aGUgRmxvd0VWTUJyaWRnZQovLy8KLy8vIEBwYXJhbSBpZGVudGlmaWVyOiBUaGUgaWRlbnRpZmllciBvZiB0aGUgQ2FkZW5jZSBUeXBlIGluIHF1ZXN0aW9uCi8vLwovLy8gQHJldHVybiBXaGV0aGVyIHRoZSB0eXBlIHJlcXVpcmVzIG9uYm9hcmRpbmcgdG8gdGhlIEZsb3dFVk1CcmlkZ2UgaWYgdGhlIHR5cGUgaXMgYnJpZGdlYWJsZSwgb3RoZXJ3aXNlIG5pbAovLy8KYWNjZXNzKGFsbCkgZnVuIG1haW4oaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbD8gewogICAgaWYgbGV0IHR5cGUgPSBDb21wb3NpdGVUeXBlKGlkZW50aWZpZXIpIHsKICAgICAgICByZXR1cm4gRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpCiAgICB9CiAgICByZXR1cm4gbmlsCn0K",
              "typeRequiresOnboardingByIdentifierTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHlwZVJlcXVpcmVzT25ib2FyZGluZ0J5SWRlbnRpZmllclRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgovLy8gUmV0dXJucyB3aGV0aGVyIGEgdHlwZSBuZWVkcyB0byBiZSBvbmJvYXJkZWQgdG8gdGhlIEZsb3dFVk1CcmlkZ2UKLy8vCi8vLyBAcGFyYW0gaWRlbnRpZmllcjogVGhlIGlkZW50aWZpZXIgb2YgdGhlIENhZGVuY2UgVHlwZSBpbiBxdWVzdGlvbgovLy8KLy8vIEByZXR1cm4gV2hldGhlciB0aGUgdHlwZSByZXF1aXJlcyBvbmJvYXJkaW5nIHRvIHRoZSBGbG93RVZNQnJpZGdlIGlmIHRoZSB0eXBlIGlzIGJyaWRnZWFibGUsIG90aGVyd2lzZSBuaWwKLy8vCmFjY2VzcyhhbGwpIGZ1biBtYWluKGlkZW50aWZpZXI6IFN0cmluZyk6IEJvb2w/IHsKICAgIGlmIGxldCB0eXBlID0gQ29tcG9zaXRlVHlwZShpZGVudGlmaWVyKSB7CiAgICAgICAgcmV0dXJuIEZsb3dFVk1CcmlkZ2UudHlwZVJlcXVpcmVzT25ib2FyZGluZyh0eXBlKQogICAgfQogICAgcmV0dXJuIG5pbAp9Cg=="
            },
            "collection": {
              "checkNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tORlRDb2xsZWN0aW9uIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIGltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKICAgIC8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KICAgIC8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCiAgICBhY2Nlc3MoYWxsKSBmdW4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdCg8VG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmCiAgICB9CgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgICByZXR1cm4gY2hlY2s8VG9rZW4+VmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgIH0=",
              "enableNFTStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZW5hYmxlTkZUU3RvcmFnZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pID09IG5pbCB7CiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbihuZnRUeXBlOiBUeXBlPEA8TkZUPi5ORlQ+KCkpCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1jb2xsZWN0aW9uLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgfQogICAgICAgIGlmIChzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oPENvbGxlY3Rpb25QdWJsaWNQYXRoPikgPT0gbmlsKSB7CiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIGxldCBjYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSAgICAgICAgICAgIAogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY2FwLCBhdDogPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKCiAgICAgICAgfQogICAgfQp9",
              "enableNFTStorageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZW5hYmxlTkZUU3RvcmFnZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZWxvZHlUaWNrZXQgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKENhcGFiaWxpdGllcywgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuYm9ycm93PCZNZWxvZHlUaWNrZXQuQ29sbGVjdGlvbj4oTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBNZWxvZHlUaWNrZXQuY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LWNvbGxlY3Rpb24sIHRvOiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICBpZiAoc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpID09IG5pbCkgewogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaChNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgICAgIGxldCBjYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSAgICAgICAgICAgIAogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goY2FwLCBhdDogTWVsb2R5VGlja2V0LkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIH0KICAgIH0KfQ==",
              "getCatalogTypeData": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2F0YWxvZ1R5cGVEYXRhIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTkZUQ2F0YWxvZyBmcm9tIDB4TkZUQ2F0YWxvZwoKYWNjZXNzKGFsbCkgZnVuIG1haW4oKToge1N0cmluZyA6IHtTdHJpbmcgOiBCb29sfX0gewogIGxldCBjYXRhbG9nID0gTkZUQ2F0YWxvZy5nZXRDYXRhbG9nVHlwZURhdGEoKQogIHJldHVybiBjYXRhbG9nCn0=",
              "getNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCgoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYwogICAgICAgICkKICAgICAgfSAKICAgIH0KICAgZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJZCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCatalogByCollectionIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUQ2F0YWxvZ0J5Q29sbGVjdGlvbklkcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTCollection": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUQ29sbGVjdGlvbiAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogc3RvcmFnZVBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBwdWJsaWNQYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
              "getNFTCollectionTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUQ29sbGVjdGlvblRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZyk6IE5GVENvbGxlY3Rpb24gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb24gPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkhCiAgcmV0dXJuIE5GVENvbGxlY3Rpb24oCiAgICBpZDogYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSEuaWRlbnRpZmllciwKICAgIHBhdGg6IHN0b3JhZ2VQYXRoLnRvU3RyaW5nKCksCiAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBzdG9yYWdlUGF0aCwgcHVibGljUGF0aDogcHVibGljUGF0aCksCiAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICApCn0=",
              "getNFTDisplays": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZURGlzcGxheXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CmFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwphY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/Cgppbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/LCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgICBzZWxmLmNvbGxlY3Rpb25EaXNwbGF5ID0gY29sbGVjdGlvbkRpc3BsYXkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTDisplaysTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZURGlzcGxheXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViews": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUTWV0YWRhdGFWaWV3cyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "getNFTMetadataViewsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUTWV0YWRhdGFWaWV3c1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljUGF0aDogUHVibGljUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkOiBTdHJpbmcsIHRva2VuSUQ6IFVJbnQ2NCk6IHtTdHJpbmc6IEFueVN0cnVjdH0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cykgewogICAgcmV0dXJuIHJlcwogIH0KCiAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkhCiAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICByZXNbInJhcml0eSJdID0gcmFyaXR5CiAgICB9CgogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJkaXNwbGF5Il0gPSBkaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICByZXNbImVkaXRpb25zIl0gPSBlZGl0aW9ucwogICAgfQoKICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICByZXNbInNlcmlhbCJdID0gc2VyaWFsCiAgICB9CgogICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sicm95YWx0aWVzIl0gPSByb3lhbHRpZXMKICAgIH0KCiAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICByZXNbImxpY2Vuc2UiXSA9IGxpY2Vuc2UKICAgIH0KCiAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJtZWRpYXMiXSA9IG1lZGlhcwogICAgfQoKICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJleHRlcm5hbFVSTCJdID0gZXh0ZXJuYWxVUkwKICAgIH0KCiAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJ0cmFpdHMiXSA9IHRyYWl0cwogICAgfQoKICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJjb2xsZWN0aW9uRGlzcGxheSJdID0gY29sbGVjdGlvbkRpc3BsYXkKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgIGxldCBkYXRhID0gQ29sbGVjdGlvbkRhdGEoCiAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
              "getNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayPageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUc0Rpc3BsYXlQYWdlVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQogIGFjY2VzcyhhbGwpIGxldCByYXJpdHk6IFN0cmluZz8KICBhY2Nlc3MoYWxsKSBsZXQgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHN0YXJ0OiBJbnQsIGVuZDogSW50KToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhICAKICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KHB1YmxpY1BhdGgpIQogIHZhciB0b2tlbklEcyA9IGNvbGxlY3Rpb25DYXAuZ2V0SURzKCkKICBsZXQgbGVuID0gdG9rZW5JRHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiByZXMKICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVtID0gbGVuCiAgICAgIH0KICAgIH0KICB0b2tlbklEcyA9IHRva2VuSURzLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW0gKQogIAogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIAogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyISkgewogICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICBpZiBsZXQgcmFyaXR5VmlldyA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyISkgewogICAgICAgICAgcmFyaXR5RGVzYyA9IHJhcml0eVZpZXcuZGVzY3JpcHRpb24KICAgICAgICB9CgogICAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgICBpZiAoIWNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCkgewogICAgICAgICAgaWYgbGV0IGNEaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXkgPSBjRGlzcGxheQogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBkaXNwbGF5LmRlc2NyaXB0aW9uLAogICAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICAgIHJhcml0eTogcmFyaXR5RGVzYywKICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheQogICAgICAgICkKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
              "getNFTsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUc0Rpc3BsYXlUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgVmlld0luZm8gewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgYWNjZXNzKGFsbCkgbGV0IHJhcml0eTogU3RyaW5nPwogIGFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPywgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/KSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24KICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICBzZWxmLnJhcml0eSA9IHJhcml0eQogICAgc2VsZi5jb2xsZWN0aW9uRGlzcGxheSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSUQ6IFN0cmluZyk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpISAgCiAgbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJsaWNQYXRoKSEKICBsZXQgdG9rZW5JRHMgPSBjb2xsZWN0aW9uQ2FwLmdldElEcygpCiAgCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
              "getNFTsMetadataViewPageTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUc01ldGFkYXRhVmlld1BhZ2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EYXRhIHsKICBhY2Nlc3MoYWxsKSBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCgogIGluaXQoCiAgICBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsCiAgICBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgKSB7CiAgICBzZWxmLnN0b3JhZ2VQYXRoID0gc3RvcmFnZVBhdGgKICAgIHNlbGYucHVibGljUGF0aCA9IHB1YmxpY1BhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCBzdGFydDogSW50LCBlbmQ6IEludCk6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IG5mdHM6IFt7U3RyaW5nOiBBbnlTdHJ1Y3R9XSA9IFtdCgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJZCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24sIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIG5mdHMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogCiAgbGV0IHRva2VuSURzID0gY29sbGVjdGlvblJlZiEuZ2V0SURzKCkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHx8IHRva2VuSURzLmxlbmd0aCA9PSAwKSB7CiAgICAgIHJldHVybiBuZnRzCiAgICB9CgogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKCiAgICBsZXQgcmVzOntTdHJpbmc6IEFueVN0cnVjdH0gPSB7fQogICAgCiAgICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQodG9rZW5JRCkKCiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IHJhcml0eSA9IE1ldGFkYXRhVmlld3MuZ2V0UmFyaXR5KHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgICB9CgogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgZWRpdGlvbnMgPSBNZXRhZGF0YVZpZXdzLmdldEVkaXRpb25zKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgICAgfQoKICAgICAgaWYgbGV0IHNlcmlhbCA9IE1ldGFkYXRhVmlld3MuZ2V0U2VyaWFsKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgICB9CgogICAgICBpZiBsZXQgcm95YWx0aWVzID0gTWV0YWRhdGFWaWV3cy5nZXRSb3lhbHRpZXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICAgIH0KCiAgICAgIGlmIGxldCBsaWNlbnNlID0gTWV0YWRhdGFWaWV3cy5nZXRMaWNlbnNlKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICAgIH0KCiAgICAgIGlmIGxldCBtZWRpYXMgPSBNZXRhZGF0YVZpZXdzLmdldE1lZGlhcyhyZXNvbHZlcikgewogICAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgICAgfQoKICAgICAgaWYgbGV0IGV4dGVybmFsVVJMID0gTWV0YWRhdGFWaWV3cy5nZXRFeHRlcm5hbFVSTChyZXNvbHZlcikgewogICAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICAgIH0KCiAgICAgIGlmIGxldCB0cmFpdHMgPSBNZXRhZGF0YVZpZXdzLmdldFRyYWl0cyhyZXNvbHZlcikgewogICAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgICAgfQoKICAgICAgaWYgbGV0IGNvbGxlY3Rpb25EaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGF0YSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRhdGEocmVzb2x2ZXIpIHsKICAgICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICAgICAgcHVibGljUGF0aDogY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCwKICAgICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgICBwdWJsaWNMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNMaW5rZWRUeXBlLAogICAgICAgICkKICAgICAgICByZXNbImNvbGxlY3Rpb25EYXRhIl0gPSBkYXRhCiAgICAgIH0KICAgIH0KICAgIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICAgIG5mdHMuYXBwZW5kKHJlcykKICB9CiAgbGV0IGxlbiA9IG5mdHMubGVuZ3RoCiAgdmFyIGVuZE51bSA9IGVuZAogICBpZiBsZW4gPCBzdGFydCB7CiAgICAgIHJldHVybiBbXQogICAgfSBlbHNlIHsKICAgICAgaWYgbGVuIDwgZW5kIHsKICAgICAgICBlbmROdW0gPSBsZW4KICAgICAgfQogICAgfQoKICByZXR1cm4gbmZ0cy5zbGljZShmcm9tOiBzdGFydCwgdXBUbzogZW5kTnVtICkKfQ==",
              "getNFTsMetadataViewTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0TkZUc01ldGFkYXRhVmlld1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljUGF0aDogUHVibGljUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElkOiBTdHJpbmcpOiBbe1N0cmluZzogQW55U3RydWN0fV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBuZnRzOiBbe1N0cmluZzogQW55U3RydWN0fV0gPSBbXQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4ocHVibGljUGF0aCkKICBpZiBjb2xsZWN0aW9uUmVmID09IG5pbCB7CiAgICBwYW5pYygiR2V0IENvbGxlY3Rpb24gRmFpbGVkIikKICB9CgogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiBuZnRzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKIAogIGxldCB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYhLmdldElEcygpCgogIGlmICghY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB8fCB0b2tlbklEcy5sZW5ndGggPT0gMCkgewogICAgICByZXR1cm4gbmZ0cwogICAgfQoKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CgogICAgbGV0IHJlczp7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KICAgIAogICAgY29sbGVjdGlvblJlZiEuYm9ycm93TkZUKHRva2VuSUQpCgogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKSEKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgIGlmIGxldCByYXJpdHkgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICAgICAgfQoKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICAgICAgfQoKICAgICAgaWYgbGV0IGVkaXRpb25zID0gTWV0YWRhdGFWaWV3cy5nZXRFZGl0aW9ucyhyZXNvbHZlcikgewogICAgICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgICAgIH0KCiAgICAgIGlmIGxldCBzZXJpYWwgPSBNZXRhZGF0YVZpZXdzLmdldFNlcmlhbChyZXNvbHZlcikgewogICAgICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICAgICAgfQoKICAgICAgaWYgbGV0IHJveWFsdGllcyA9IE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0aWVzKHJlc29sdmVyKSB7CiAgICAgICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogICAgICB9CgogICAgICBpZiBsZXQgbGljZW5zZSA9IE1ldGFkYXRhVmlld3MuZ2V0TGljZW5zZShyZXNvbHZlcikgewogICAgICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogICAgICB9CgogICAgICBpZiBsZXQgbWVkaWFzID0gTWV0YWRhdGFWaWV3cy5nZXRNZWRpYXMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgICAgIH0KCiAgICAgIGlmIGxldCBleHRlcm5hbFVSTCA9IE1ldGFkYXRhVmlld3MuZ2V0RXh0ZXJuYWxVUkwocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogICAgICB9CgogICAgICBpZiBsZXQgdHJhaXRzID0gTWV0YWRhdGFWaWV3cy5nZXRUcmFpdHMocmVzb2x2ZXIpIHsKICAgICAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgICAgIH0KCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogICAgICB9CgogICAgICBpZiBsZXQgY29sbGVjdGlvbkRhdGEgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EYXRhKHJlc29sdmVyKSB7CiAgICAgICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICAgIHB1YmxpY1BhdGg6IGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgsCiAgICAgICAgICBwdWJsaWNDb2xsZWN0aW9uOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNDb2xsZWN0aW9uLAogICAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICApCiAgICAgICAgcmVzWyJjb2xsZWN0aW9uRGF0YSJdID0gZGF0YQogICAgICB9CiAgICB9CiAgICByZXNbInRva2VuSWQiXSA9IHRva2VuSUQKCiAgICBuZnRzLmFwcGVuZChyZXMpCiAgfQoKCiAgCgogIHJldHVybiBuZnRzCn0=",
              "getUserCollections": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgY29sbGVjdGlvblBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCgogIGZ1biBlYWNoUGF0aChwYXRoOiBTdG9yYWdlUGF0aCwgVHlwZTogVHlwZSk6IEJvb2wgewogICAKICAgIGlmIFR5cGUgIT0gbmlsIHsKICAgICAgaWYgVHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICB9CiAgICAgIAogICAgfQogICAKICAgIHJldHVybiB0cnVlCiAgfQoKICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChlYWNoUGF0aCkKCiAgZm9yIHBhdGggaW4gY29sbGVjdGlvblBhdGhzIHsKICAgIGxldCBwYXRoU3RyID0gcGF0aC50b1N0cmluZygpCiAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgbGV0IGlkZW50aWZpZXIgPSBzcGxpdEFyclsyXQogICAgbGV0IHB1YlBhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IGlkZW50aWZpZXIpIQogICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCgogICAgY29sbGVjdGlvbnMuYXBwZW5kKAogICAgICBORlRDb2xsZWN0aW9uKAogICAgICBpZDogaWRlbnRpZmllciwKICAgICAgcGF0aDogcHViUGF0aC50b1N0cmluZygpLAogICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICkKICAgICkKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "getUserCollectionsPage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zUGFnZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCiAgaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCiAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKICBhY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogICAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwogIAogICAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICAgIHNlbGYubmFtZSA9IG5hbWUKICAgICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgICB9CiAgfQogIAogIGFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQogIAogICAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICAgIHNlbGYuaWQgPSBpZAogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICAgIH0KICB9CiAgCiAgYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICAgIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCiAgCiAgICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICAKICAgICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQogIAogICAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAKICAgIHJldHVybiBpdGVtCiAgfQogIAogIGFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RhcnQ6IEludCwgZW5kOiBJbnQpOiBbTkZUQ29sbGVjdGlvbl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogICAgbGV0IGNvbGxlY3Rpb25QYXRoczogW1N0b3JhZ2VQYXRoXSA9IFtdCiAgICBsZXQgY29sbGVjdGlvbnM6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgCiAgICBmdW4gZWFjaFBhdGgocGF0aDogU3RvcmFnZVBhdGgsIFR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAKICAgICAgaWYgVHlwZSAhPSBuaWwgewogICAgICAgIGlmIFR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgY29sbGVjdGlvblBhdGhzLmFwcGVuZChwYXRoKQogICAgICAgIH0KICAgICAgICAKICAgICAgfQogICAgIAogICAgICByZXR1cm4gdHJ1ZQogICAgfQogIAogICAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZWFjaFBhdGgpCiAgCiAgICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgICBsZXQgcGF0aFN0ciA9IHBhdGgudG9TdHJpbmcoKQogICAgICBsZXQgc3BsaXRBcnIgPSBwYXRoU3RyLnNwbGl0KHNlcGFyYXRvcjogIi8iKQogICAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICAgIGxldCBwdWJQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKICAgICAgbGV0IGNvbGxlY3Rpb24gPSAgYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4ocHViUGF0aCkhCiAgCiAgICAgIGNvbGxlY3Rpb25zLmFwcGVuZCgKICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgIGlkOiBpZGVudGlmaWVyLAogICAgICAgIHBhdGg6IHB1YlBhdGgudG9TdHJpbmcoKSwKICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBwYXRoLCBwdWJsaWNQYXRoOiBwdWJQYXRoKSwKICAgICAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICAgICAgICApCiAgICAgICkKICAgICAgCiAgICB9CgogICAgbGV0IGxlbiA9IGNvbGxlY3Rpb25zLmxlbmd0aAogICAgdmFyIGVuZE51biA9IGVuZAogICAgaWYgbGVuIDwgc3RhcnQgewogICAgICByZXR1cm4gW10KICAgIH0gZWxzZSB7CiAgICAgIGlmIGxlbiA8IGVuZCB7CiAgICAgICAgZW5kTnVuID0gbGVuCiAgICAgIH0KICAgIH0KICAgIAogICAgcmV0dXJuIGNvbGxlY3Rpb25zLnNsaWNlKGZyb206IHN0YXJ0LCB1cFRvOiBlbmROdW4gKQogIH0=",
              "getUserCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0VXNlckNvbGxlY3Rpb25zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgcGF0aDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIGFjY2VzcyhhbGwpIGxldCBpZExpc3Q6IFtVSW50NjRdCgogIGluaXQoaWQ6U3RyaW5nLCBwYXRoOiBTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoKTogQ29sbGVjdGlvbkRpc3BsYXk/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvUmFyaWJsZU5GVENvbGxlY3Rpb24gCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pCiAgICAgICAgICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UuZmlsZS51cmkoKSwKICAgICAgICAgICAgICAgICAgbWVkaWFUeXBlOiBkaXNwbGF5LnNxdWFyZUltYWdlLm1lZGlhVHlwZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgcmV0dXJuIGl0ZW0KfQoKYWNjZXNzKGFsbClmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBjb2xsZWN0aW9uUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGxldCBjb2xsZWN0aW9uczogW05GVENvbGxlY3Rpb25dID0gW10KCiAgZnVuIGVhY2hQYXRoKHBhdGg6IFN0b3JhZ2VQYXRoLCBUeXBlOiBUeXBlKTogQm9vbCB7CiAgIAogICAgaWYgVHlwZSAhPSBuaWwgewogICAgICBpZiBUeXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICBjb2xsZWN0aW9uUGF0aHMuYXBwZW5kKHBhdGgpCiAgICAgIH0KICAgICAgCiAgICB9CiAgIAogICAgcmV0dXJuIHRydWUKICB9CgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGVhY2hQYXRoKQoKICBmb3IgcGF0aCBpbiBjb2xsZWN0aW9uUGF0aHMgewogICAgbGV0IHBhdGhTdHIgPSBwYXRoLnRvU3RyaW5nKCkKICAgIGxldCBzcGxpdEFyciA9IHBhdGhTdHIuc3BsaXQoc2VwYXJhdG9yOiAiLyIpCiAgICBsZXQgaWRlbnRpZmllciA9IHNwbGl0QXJyWzJdCiAgICBsZXQgcHViUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCiAgICBsZXQgY29sbGVjdGlvbiA9ICBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PihwdWJQYXRoKSEKCiAgICBjb2xsZWN0aW9ucy5hcHBlbmQoCiAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogcGF0aCkhLmlkZW50aWZpZXIsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogcGF0aCwgcHVibGljUGF0aDogcHViUGF0aCksCiAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICApCiAgICApCiAgICAKICB9CgoKICByZXR1cm4gY29sbGVjdGlvbnMKfQ==",
              "sendNbaNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZE5iYU5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
              "sendNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5jYXBhYmlsaXRpZXMKICAgICAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9",
              "sendNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZE5GVFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBNZWxvZHlUaWNrZXQgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCi8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgoKdHJhbnNhY3Rpb24ocmVjaXBpZW50OiBBZGRyZXNzLCB3aXRoZHJhd0lEOiBVSW50NjQpIHsKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IHJlY2lwaWVudAogICAgICAgICAgICAuY2FwYWJpbGl0aWVzCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9"
            },
            "contract": {
              "getContractByName": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29udHJhY3RCeU5hbWUgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIGNvbnRyYWN0TmFtZTogU3RyaW5nKTogU3RyaW5nPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGRlcGxveWVkQ29udHJhY3QgPSBhY2NvdW50LmNvbnRyYWN0cy5nZXQobmFtZTogY29udHJhY3ROYW1lKQoKICByZXR1cm4gU3RyaW5nLmZyb21VVEY4KGRlcGxveWVkQ29udHJhY3Q/LmNvZGUhKQp9",
              "getContractNames": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29udHJhY3ROYW1lcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6ICZbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
            },
            "domain": {
              "claimFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2xhaW1GVEZyb21JbmJveCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
              "claimNFTFromInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2xhaW1ORlRGcm9tSW5ib3ggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCmltcG9ydCBGbG93bnMgZnJvbSAweEZsb3ducwppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCi8vIGtleSB3aWxsIGJlICdBLmY4ZDZlMDU4NmIwYTIwYzcuRG9tYWlucy5Db2xsZWN0aW9uJyBvZiBhIE5GVCBjb2xsZWN0aW9uCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDogU3RyaW5nLCBrZXk6IFN0cmluZywgaXRlbUlkOiBVSW50NjQpIHsKdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9CnZhciBjb2xsZWN0aW9uUmVmOiAmPE5GVD4uQ29sbGVjdGlvbgpwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICBsZXQgcHJlZml4ID0gIjB4IgogICAgbGV0IHJvb3RIYWhzaCA9IEZsb3ducy5oYXNoKG5vZGU6ICIiLCBsYWJsZTogcm9vdCkKICAgIGxldCBuYW1lSGFzaCA9IHByZWZpeC5jb25jYXQoRmxvd25zLmhhc2gobm9kZTogcm9vdEhhaHNoLCBsYWJsZTogbmFtZSkpCiAgICB2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0/ID0gbmlsCiAgICBsZXQgY29sbGVjdGlvblByaXZhdGUgPSBhY2NvdW50LmJvcnJvdzwme0RvbWFpbnMuQ29sbGVjdGlvblByaXZhdGV9Pihmcm9tOiBEb21haW5zLkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPz8gcGFuaWMoIkNvdWxkIG5vdCBmaW5kIHlvdXIgZG9tYWluIGNvbGxlY3Rpb24gY2FwIikKCiAgICBsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQogICAgaWYgaWQgIT1uaWwgewogICAgZG9tYWluID0gY29sbGVjdGlvblByaXZhdGUuYm9ycm93RG9tYWluUHJpdmF0ZShpZCEpCiAgICB9CiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIGFjY291bnQuc2F2ZSg8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgYWNjb3VudC5saW5rPCY8Q29sbGVjdGlvblB1YmxpY1R5cGU+Pig8Q29sbGVjdGlvblB1YmxpY1BhdGg+LCB0YXJnZXQ6IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgc2VsZi5jb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KT8/IHBhbmljKCJDYW4gbm90IGJvcnJvdyBjb2xsZWN0aW9uIikKICAgIH0gZWxzZSB7CiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBjb2xsZWN0aW9uUmVmIQogICAgfQoKfQpleGVjdXRlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZi5kZXBvc2l0KHRva2VuOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd05GVChrZXk6IGtleSwgaXRlbUlkOiBpdGVtSWQpKQp9Cn0=",
              "getAddressOfDomain": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWRkcmVzc09mRG9tYWluIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRG9tYWluVXRpbHMgZnJvbSAweEZsb3dib3gKCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZyk6IEFkZHJlc3M/IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0QWRkcmVzc09mRG9tYWluKG5hbWU6IG5hbWUsIHJvb3Q6IHJvb3QpCn0=",
              "getDefaultDomainsOfAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVmYXVsdERvbWFpbnNPZkFkZHJlc3MgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBEb21haW5VdGlscyBmcm9tIDB4Rmxvd2JveAoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiB7U3RyaW5nOiBTdHJpbmd9IHsKICByZXR1cm4gRG9tYWluVXRpbHMuZ2V0RGVmYXVsdERvbWFpbnNPZkFkZHJlc3MoYWRkcmVzcykKfQ==",
              "getFlownsInbox": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Rmxvd25zSW5ib3ggLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93bnMgZnJvbSAweEZsb3ducwppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwoKcHViIGZ1biBnZXREZXRhaWwobmFtZUhhc2g6IFN0cmluZyk6IERvbWFpbnMuRG9tYWluRGV0YWlsPyB7CmxldCBhZGRyZXNzID0gRG9tYWlucy5nZXRSZWNvcmRzKG5hbWVIYXNoKSA/PyBwYW5pYygiRG9tYWluIG5vdCBleGlzdCIpCmxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQpsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCmxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKdmFyIGRldGFpbDogRG9tYWlucy5Eb21haW5EZXRhaWw/ID0gbmlsCgpsZXQgaWQgPSBEb21haW5zLmdldERvbWFpbklkKG5hbWVIYXNoKQppZiBpZCAhPSBuaWwgJiYgIURvbWFpbnMuaXNEZXByZWNhdGVkKG5hbWVIYXNoOiBuYW1lSGFzaCwgZG9tYWluSWQ6IGlkISkgewogICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCEpCiAgICBkZXRhaWwgPSBkb21haW4uZ2V0RGV0YWlsKCkKfQoKcmV0dXJuIGRldGFpbAp9CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IHByZWZpeCA9ICIweCIKbGV0IHJvb3RIYWhzaCA9IEZsb3ducy5oYXNoKG5vZGU6ICIiLCBsYWJsZTogcm9vdCkKbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKcmV0dXJuIGdldERldGFpbChuYW1lSGFzaDogbmFtZUhhc2gpCn0=",
              "sendInboxNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZEluYm94TkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgRG9tYWlucyBmcm9tIDB4RG9tYWlucwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgIGxldCBzZW5kZXJSZWYgPSBzaWduZXIKICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIAogICAgaWYgcmVjaXBpZW50UmVmID09IG5pbCB7CiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IHJlY2lwaWVudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgIHZhciBkZWZhdWx0RG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHVibGljfT8gPSBuaWwKICAgIAogICAgbGV0IGlkcyA9IGNvbGxlY3Rpb24uZ2V0SURzKCkKCiAgICBpZiBpZHMubGVuZ3RoID09IDAgewogICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgIH0KICAgIAogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIGxldCBkb21haW4gPSBjb2xsZWN0aW9uLmJvcnJvd0RvbWFpbihpZDogaWQpIQogICAgICAgIGxldCBpc0RlZmF1bHQgPSBkb21haW4uZ2V0VGV4dChrZXk6ICJpc0RlZmF1bHQiKQogICAgICAgIGlmIGlzRGVmYXVsdCA9PSAidHJ1ZSIgewogICAgICAgIGRlZmF1bHREb21haW4gPSBkb21haW4KICAgICAgICB9CiAgICB9CiAgICBsZXQgdHlwZUtleSA9IGNvbGxlY3Rpb25SZWYuZ2V0VHlwZSgpLmlkZW50aWZpZXIKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIGRlZmF1bHREb21haW4hLmFkZENvbGxlY3Rpb24oY29sbGVjdGlvbjogPC0gY29sbGVjdGlvbikKICAgIH0KICAgIGRlZmF1bHREb21haW4hLmRlcG9zaXRORlQoa2V5OiB0eXBlS2V5LCB0b2tlbjogPC0gbmZ0LCBzZW5kZXJSZWY6IHNlbmRlclJlZiApCiAgICB9IGVsc2UgewogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICByZWNpcGllbnRSZWYhLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9Cn0=",
              "transferInboxTokens": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJJbmJveFRva2VucyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
            },
            "evm": {
              "call": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2FsbCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkRGF0YTogU3RyaW5nLCBoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oQWRkcmVzcygweENPQSkpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCgogICAgbGV0IGNhbGxSZXN1bHQgPSBjb2EuY2FsbCgKICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgZGF0YTogaGV4RW5jb2RlZERhdGEuZGVjb2RlSGV4KCksCiAgICAgICAgZ2FzTGltaXQ6IDE1MDAwMDAwLCAvLyB0b2RvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBtYXggZm9yIG5vdwogICAgICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICkKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChjYWxsUmVzdWx0LmRhdGEpCn0K",
              "callContract": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2FsbENvbnRyYWN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHRvRVZNQWRkcmVzc0hleDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgZGF0YTogW1VJbnQ4XSwgZ2FzTGltaXQ6IFVJbnQ2NCkgewoKICAgIGxldCBjb2E6IGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CiAgICBsZXQgcmVjaXBpZW50RVZNQWRkcmVzczogRVZNLkVWTUFkZHJlc3MKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU2F2ZVZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IC9zdG9yYWdlL2V2bSkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCksIHRvOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgfQogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLldpdGhkcmF3LCBFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgYnJpZGdlZCBhY2NvdW50IikKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHRvRVZNQWRkcmVzc0hleCkKICAgICAgICAvLyAgICAgPz8gcGFuaWMoIkludmFsaWQgcmVjaXBpZW50IEVWTSBhZGRyZXNzIikKICAgICAgICB2YXIgYWRkcmVzc0J5dGVzOiBbVUludDhdID0gdG9FVk1BZGRyZXNzSGV4LmRlY29kZUhleCgpCgogICAgICAgIHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBbCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1swXSwgYWRkcmVzc0J5dGVzWzFdLCBhZGRyZXNzQnl0ZXNbMl0sIGFkZHJlc3NCeXRlc1szXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzRdLCBhZGRyZXNzQnl0ZXNbNV0sIGFkZHJlc3NCeXRlc1s2XSwgYWRkcmVzc0J5dGVzWzddLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbOF0sIGFkZHJlc3NCeXRlc1s5XSwgYWRkcmVzc0J5dGVzWzEwXSwgYWRkcmVzc0J5dGVzWzExXSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzEyXSwgYWRkcmVzc0J5dGVzWzEzXSwgYWRkcmVzc0J5dGVzWzE0XSwgYWRkcmVzc0J5dGVzWzE1XSwKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzE2XSwgYWRkcmVzc0J5dGVzWzE3XSwgYWRkcmVzc0J5dGVzWzE4XSwgYWRkcmVzc0J5dGVzWzE5XQogICAgICAgIF0pCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgaWYgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzLmJ5dGVzID09IHNlbGYuY29hLmFkZHJlc3MoKS5ieXRlcyB7CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgdmFsdWVCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgdmFsdWVCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIGxldCBjYWxsUmVzdWx0ID0gc2VsZi5jb2EuY2FsbCgKICAgICAgICAgICAgdG86IHNlbGYucmVjaXBpZW50RVZNQWRkcmVzcywKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZ2FzTGltaXQ6IGdhc0xpbWl0LAogICAgICAgICAgICB2YWx1ZTogdmFsdWVCYWxhbmNlCiAgICAgICAgKQogICAgICAgIGFzc2VydChjYWxsUmVzdWx0LnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsIG1lc3NhZ2U6ICJUcmFuc2ZlciB0byByZWNpcGllbnQgZmFpbGVkIikKICAgIH0KfQ==",
              "callTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2FsbFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWREYXRhOiBTdHJpbmcsIGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQoKICAgIGxldCBjYWxsUmVzdWx0ID0gY29hLmNhbGwoCiAgICAgICAgdG86IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpLAogICAgICAgIGRhdGE6IGhleEVuY29kZWREYXRhLmRlY29kZUhleCgpLAogICAgICAgIGdhc0xpbWl0OiAxNTAwMDAwMCwgLy8gdG9kbyBtYWtlIGl0IGNvbmZpZ3VyYWJsZSwgbWF4IGZvciBub3cKICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICkKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChjYWxsUmVzdWx0LmRhdGEpCn0K",
              "createAccountCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQWNjb3VudENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIA==",
              "createCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQ29hIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaEmpty": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQ29hRW1wdHkgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCgovLy8gQ3JlYXRlcyBhIENPQSBhbmQgc2F2ZXMgaXQgaW4gdGhlIHNpZ25lcidzIEZsb3cgYWNjb3VudCAmIHBhc3NpbmcgdGhlIGdpdmVuIHZhbHVlIG9mIEZsb3cgaW50byBGbG93RVZNCnRyYW5zYWN0aW9uKCkgewogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGNvYSA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiAiZXZtIikhCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtY29hLCB0bzogc3RvcmFnZVBhdGgpCiAgICAgICAgbGV0IGFkZHJlc3NhYmxlQ2FwID0gc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oc3RvcmFnZVBhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy51bnB1Ymxpc2gocHVibGljUGF0aCkKICAgICAgICBzZWxmLmF1dGguY2FwYWJpbGl0aWVzLnB1Ymxpc2goYWRkcmVzc2FibGVDYXAsIGF0OiBwdWJsaWNQYXRoKQogICAgfQp9",
              "createCoaEmptyTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQ29hRW1wdHlUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbigpIHsKICAgIGxldCBhdXRoOiBhdXRoKElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIFB1Ymxpc2hDYXBhYmlsaXR5LCBTYXZlVmFsdWUsIFVucHVibGlzaENhcGFiaWxpdHkpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "createCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlQ29hVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQoKaW1wb3J0IEVWTSBmcm9tIDB4ZTQ2N2I5ZGQxMWZhMDBkZgoKLy8vIENyZWF0ZXMgYSBDT0EgYW5kIHNhdmVzIGl0IGluIHRoZSBzaWduZXIncyBGbG93IGFjY291bnQgJiBwYXNzaW5nIHRoZSBnaXZlbiB2YWx1ZSBvZiBGbG93IGludG8gRmxvd0VWTQp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoSXNzdWVTdG9yYWdlQ2FwYWJpbGl0eUNvbnRyb2xsZXIsIElzc3VlU3RvcmFnZUNhcGFiaWxpdHlDb250cm9sbGVyLCBQdWJsaXNoQ2FwYWJpbGl0eSwgU2F2ZVZhbHVlLCBVbnB1Ymxpc2hDYXBhYmlsaXR5KSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSwgVW5wdWJsaXNoQ2FwYWJpbGl0eSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IHNpZ25lcgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBjb2EgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhjb2EuYmFsYW5jZSgpLmluRkxPVygpKQogICAgICAgIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEKICAgICAgICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogImV2bSIpIQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWNvYSwgdG86IHN0b3JhZ2VQYXRoKQogICAgICAgIGxldCBhZGRyZXNzYWJsZUNhcCA9IHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KHN0b3JhZ2VQYXRoKQogICAgICAgIHNlbGYuYXV0aC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKHB1YmxpY1BhdGgpCiAgICAgICAgc2VsZi5hdXRoLmNhcGFiaWxpdGllcy5wdWJsaXNoKGFkZHJlc3NhYmxlQ2FwLCBhdDogcHVibGljUGF0aCkKICAgIH0KfQ==",
              "deployContract": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZGVwbG95Q29udHJhY3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCgp0cmFuc2FjdGlvbihjb2RlOiBTdHJpbmcpIHsKICAgIGxldCBjb2E6IGF1dGgoRVZNLkRlcGxveSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5EZXBsb3kpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgc2VsZi5jb2EuZGVwbG95KGNvZGU6IGNvZGUuZGVjb2RlSGV4KCksICBnYXNMaW1pdDogMTUwMDAwMDAsIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkpCiAgICB9Cn0K",
              "estimateGas": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZXN0aW1hdGVHYXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZFR4OiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBbVUludDY0OyAyXSB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCB0eFJlc3VsdCA9IEVWTS5ydW4odHg6IGhleEVuY29kZWRUeC5kZWNvZGVIZXgoKSwgY29pbmJhc2U6IGNvYS5hZGRyZXNzKCkpCgogICAgcmV0dXJuIFt0eFJlc3VsdC5lcnJvckNvZGUsIHR4UmVzdWx0Lmdhc1VzZWRdCn0K",
              "estimateGasTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZXN0aW1hdGVHYXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRUeDogU3RyaW5nLCBhZGRyZXNzOiBBZGRyZXNzKTogW1VJbnQ2NDsgMl0gewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBjb2EuYWRkcmVzcygpKQoKICAgIHJldHVybiBbdHhSZXN1bHQuZXJyb3JDb2RlLCB0eFJlc3VsdC5nYXNVc2VkXQp9Cg==",
              "fundCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZnVuZENvYSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgoKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICAgICAgc2VsZi5jb2EgPSBjb2EKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "fundCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZnVuZENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IEVWTSBmcm9tIDB4ZTQ2N2I5ZGQxMWZhMDBkZgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgoKICAgICAgICBsZXQgY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICAgICAgc2VsZi5jb2EgPSBjb2EKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "fundEvmAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZnVuZEV2bUFkZHIgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGV2bUFkZHI6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pig8VG9rZW5SZWNlaXZlclBhdGg+KSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
              "fundEvmAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZnVuZEV2bUFkZHJUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgLy8gbGV0IGFkZHJlc3NCeXRlczogW1VJbnQ4OyAyMF0KICAgIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcwoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCiAgICAgICAgCiAgICAgICAgbGV0IGFkZHJlc3NCeXRlcyA9ICBbMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMiwgMjM5LCAxNTUsIDcsIDUwLCAyMzgsIDE3MCwgMTAxLCAyMjBdCiAgICAgICAgLy8gc2VsZi5hZGRyZXNzQnl0ZXMgPSAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDIsIDIzOSwgMTU1LCA3LCA1MCwgMjM4LCAxNzAsIDEwMSwgMjIwXQoKICAgICAgICBzZWxmLmFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIEludGVybmFsRVZNLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCwgdG86IHNlbGYuYWRkcmVzcy5ieXRlcykKCiAgICB9Cn0=",
              "getAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWRkciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZmxvd0FkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmc/IHsKICAgIGlmIGxldCBhZGRyZXNzOiBFVk0uRVZNQWRkcmVzcyA9IGdldEF1dGhBY2NvdW50PGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50PihmbG93QWRkcmVzcykKICAgICAgICAuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pihmcm9tOiAvc3RvcmFnZS9ldm0pPy5hZGRyZXNzKCkgewogICAgICAgIGxldCBieXRlczogW1VJbnQ4XSA9IFtdCiAgICAgICAgZm9yIGJ5dGUgaW4gYWRkcmVzcy5ieXRlcyB7CiAgICAgICAgICAgIGJ5dGVzLmFwcGVuZChieXRlKQogICAgICAgIH0KICAgICAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChieXRlcykKICAgIH0KICAgIHJldHVybiBuaWwKfQ==",
              "getBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLmJhbGFuY2UoKS5pbkF0dG9GTE9XKCkKfQo=",
              "getBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBVSW50IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3MuYmFsYW5jZSgpLmluQXR0b0ZMT1coKQp9Cg==",
              "getCoaAddr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29hQWRkciAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKQoKICAgIGlmIGNvYSA9PSBuaWwgeyAKICAgICAgICByZXR1cm4gIiIKICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IGNvYUFkZHIgPSBjb2E/LmFkZHJlc3MoKSAKCiAgICAgICAgbGV0IGFkZHJCeXRlOiBbVUludDhdID0gW10KCiAgICAgICAgZm9yIGJ5dGUgaW4gY29hQWRkcj8uYnl0ZXMhIHsKICAgICAgICAgICAgYWRkckJ5dGUuYXBwZW5kKGJ5dGUpCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyQnl0ZSkKICAgIH0KfQo=",
              "getCoaAddrTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29hQWRkclRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweGU0NjdiOWRkMTFmYTAwZGYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBTdHJpbmcgewogICAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyZXNzKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApCgogICAgaWYgY29hID09IG5pbCB7IAogICAgICAgIHJldHVybiAiIgogICAgfSBlbHNlIHsKICAgICAgICBsZXQgY29hQWRkciA9IGNvYT8uYWRkcmVzcygpIAoKICAgICAgICBsZXQgYWRkckJ5dGU6IFtVSW50OF0gPSBbXQoKICAgICAgICBmb3IgYnl0ZSBpbiBjb2FBZGRyPy5ieXRlcyEgewogICAgICAgICAgICBhZGRyQnl0ZS5hcHBlbmQoYnl0ZSkKICAgICAgICB9CgogICAgICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJCeXRlKQogICAgfQp9Cg==",
              "getCoaBalance": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29hQmFsYW5jZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgcmV0dXJuIGNvYS5iYWxhbmNlKCkuaW5GTE9XKCkKfQo=",
              "getCoaBalanceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29hQmFsYW5jZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICByZXR1cm4gY29hLmJhbGFuY2UoKS5pbkZMT1coKQp9Cg==",
              "getCode": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29kZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogU3RyaW5nIHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkcmVzcy5jb2RlKCkpCn0K",
              "getCodeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q29kZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCmFjY2VzcyhhbGwpCmZ1biBtYWluKGhleEVuY29kZWRBZGRyZXNzOiBTdHJpbmcpOiBTdHJpbmcgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyZXNzLmNvZGUoKSkKfQo=",
              "getNonce": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9uY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBFVk0gZnJvbSAweEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQ2NCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLm5vbmNlKCkKfQo=",
              "getNonceTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9uY2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgphY2Nlc3MoYWxsKQpmdW4gbWFpbihoZXhFbmNvZGVkQWRkcmVzczogU3RyaW5nKTogVUludDY0IHsKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCiAgICBsZXQgYWRkcmVzcyA9IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpCgogICAgcmV0dXJuIGFkZHJlc3Mubm9uY2UoKQp9Cg==",
              "newAccountAndCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgbmV3QWNjb3VudEFuZENvYSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "newAccountAndCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgbmV3QWNjb3VudEFuZENvYVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2Cgp0cmFuc2FjdGlvbihwdWJsaWNLZXk6IFN0cmluZywgc2lnbmF0dXJlQWxnb3JpdGhtOiBVSW50OCwgaGFzaEFsZ29yaXRobTogVUludDgsIHdlaWdodDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQoKICAgICAgICBsZXQga2V5ID0gUHVibGljS2V5KAogICAgICAgICAgICBwdWJsaWNLZXk6IHB1YmxpY0tleS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgc2lnbmF0dXJlQWxnb3JpdGhtOiBTaWduYXR1cmVBbGdvcml0aG0ocmF3VmFsdWU6IHNpZ25hdHVyZUFsZ29yaXRobSkhCiAgICAgICAgKQoKICAgICAgICBhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LCBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsIHdlaWdodDogd2VpZ2h0KQoJCQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMDAwNSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBhY2NvdW50CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
              "newAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgbmV3QWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBDcnlwdG8KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgbGV0IHNlbnRWYXVsdDogQEZsb3dUb2tlbi5WYXVsdAogICAgbGV0IGF1dGg6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewoKICAgICAgICBsZXQgYWNjb3VudCA9IEFjY291bnQocGF5ZXI6IHNpZ25lcikKCiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKCiAgICAgICAgYWNjb3VudC5rZXlzLmFkZChwdWJsaWNLZXk6IGtleSwgaGFzaEFsZ29yaXRobTogSGFzaEFsZ29yaXRobShyYXdWYWx1ZTogaGFzaEFsZ29yaXRobSkhLCB3ZWlnaHQ6IHdlaWdodCkKCQkKICAgICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiAwLjApIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gYWNjb3VudAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50IDwtIEVWTS5jcmVhdGVDYWRlbmNlT3duZWRBY2NvdW50KCkKICAgICAgICBsb2coYWNjb3VudC5hZGRyZXNzKCkpCiAgICAgICAgYWNjb3VudC5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCgogICAgICAgIGxvZyhhY2NvdW50LmJhbGFuY2UoKSkKICAgICAgICBzZWxmLmF1dGguc3RvcmFnZS5zYXZlPEBFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oPC1hY2NvdW50LCB0bzogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogImV2bSIpISkKICAgIH0KfQo=",
              "run": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcnVuIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGhleEVuY29kZWRUeDogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgdHhSZXN1bHQgPSBFVk0ucnVuKHR4OiBoZXhFbmNvZGVkVHguZGVjb2RlSGV4KCksIGNvaW5iYXNlOiBzZWxmLmNvYS5hZGRyZXNzKCkpCiAgICAgICAgLy8gdG9kbyBvbmx5IHRlbXBvcmFyeSB1bnRpbCB3ZSBjb3JyZWN0bHkgaGFuZGxlIGZhaWx1cmUgZXZlbnRzCiAgICAgICAgYXNzZXJ0KAogICAgICAgICAgICB0eFJlc3VsdC5zdGF0dXMgPT0gRVZNLlN0YXR1cy5zdWNjZXNzZnVsLAogICAgICAgICAgICBtZXNzYWdlOiAiZmFpbGVkIHRvIGV4ZWN1dGUgZXZtIHRyYW5zYWN0aW9uOiAiLmNvbmNhdCh0eFJlc3VsdC5lcnJvckNvZGUudG9TdHJpbmcoKSkKICAgICAgICApCiAgICB9Cn0K",
              "runTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcnVuVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24oaGV4VHJ4RGF0YTogU3RyaW5nKSB7CiAgICBsZXQgY29hOiAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBFVk0ucnVuKAogICAgICAgICAgICB0eDogaGV4VHJ4RGF0YS5kZWNvZGVIZXgoKSwKICAgICAgICAgICAgY29pbmJhc2U6IHNlbGYuY29hLmFkZHJlc3MoKQogICAgICAgICkgCgogICAgfQp9Cg==",
              "transferCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDb2EgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiBVSW50KGFtb3VudCkgKiAxMDAwMDAwMDAwMDAwMDAwMDApKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICByZWNlaXZlci5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0K",
              "transferCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDb2FUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCByZXZpZXZlcjogQWRkcmVzcykgewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEVWTS5XaXRoZHJhdykgJkFjY291bnQpIHsKICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQoKICAgICAgICBsZXQgcmV2aWV2ZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudD4ocmV2aWV2ZXIpCiAgICAgICAgLnN0b3JhZ2UuYm9ycm93PCZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIAogICAgICAgIHJldmlldmVyLmRlcG9zaXQoZnJvbTogPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiBVSW50KGFtb3VudCkgKiAxMDAwMDAwMDAwMDAwMDAwMDApKSBhcyEgQEZsb3dUb2tlbi5WYXVsdCkKCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAKICAgIH0KfQo=",
              "transferFlowFromCoaToFlow": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93RnJvbUNvYVRvRmxvdyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIGxldCB3aXRoZHJhd0JhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB3aXRoZHJhd0JhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IHdpdGhkcmF3QmFsYW5jZSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "transferFlowFromCoaToFlowTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93RnJvbUNvYVRvRmxvd1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIGFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBFVk0uV2l0aGRyYXcpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IGNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdykgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgICAgIGxldCB3aXRoZHJhd0JhbGFuY2UgPSBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICB3aXRoZHJhd0JhbGFuY2Uuc2V0RkxPVyhmbG93OiBhbW91bnQpCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gY29hLndpdGhkcmF3KGJhbGFuY2U6IHdpdGhkcmF3QmFsYW5jZSkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgcmVjZWl2ZXIgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mbG93VG9rZW5SZWNlaXZlcikhCiAgICAgICAgcmVjZWl2ZXIuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQogICAgfQp9Cg==",
              "transferFlowToEvmAddress": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VG9Fdm1BZGRyZXNzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGbG93VG9rZW4KaW1wb3J0IEVWTSBmcm9tIDB4RVZNCgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "transferFlowToEvmAddressTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJGbG93VG9Fdm1BZGRyZXNzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgovLy8gVHJhbnNmZXJzICRGTE9XIGZyb20gdGhlIHNpZ25lcidzIGFjY291bnQgQ2FkZW5jZSBGbG93IGJhbGFuY2UgdG8gdGhlIHJlY2lwaWVudCdzIGhleC1lbmNvZGVkIEVWTSBhZGRyZXNzLgovLy8gTm90ZSB0aGF0IGEgQ09BIG11c3QgaGF2ZSBhICRGTE9XIGJhbGFuY2UgaW4gRVZNIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdmFsdWUgdG8gYW5vdGhlciBFVk0gYWRkcmVzcy4KLy8vCnRyYW5zYWN0aW9uKHJlY2lwaWVudEVWTUFkZHJlc3NIZXg6IFN0cmluZywgYW1vdW50OiBVRml4NjQsIGdhc0xpbWl0OiBVSW50NjQpIHsKCiAgICBsZXQgY29hOiBhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHJlY2lwaWVudEVWTUFkZHJlc3M6IEVWTS5FVk1BZGRyZXNzCiAgICB2YXIgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUsIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS50eXBlKGF0OiAvc3RvcmFnZS9ldm0pID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1FVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpLCB0bzogL3N0b3JhZ2UvZXZtKQogICAgICAgIH0KICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5XaXRoZHJhdywgRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIGJyaWRnZWQgYWNjb3VudCIpCgogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKCiAgICAgICAgLy8gc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRmxvd0VWTUJyaWRnZVV0aWxzLmdldEVWTUFkZHJlc3NGcm9tSGV4U3RyaW5nKGFkZHJlc3M6IHJlY2lwaWVudEVWTUFkZHJlc3NIZXgpCiAgICAgICAgLy8gICAgID8/IHBhbmljKCJJbnZhbGlkIHJlY2lwaWVudCBFVk0gYWRkcmVzcyIpCiAgICAgICAgdmFyIGFkZHJlc3NCeXRlczogW1VJbnQ4XSA9IHJlY2lwaWVudEVWTUFkZHJlc3NIZXguZGVjb2RlSGV4KCkKCiAgICAgICAgc2VsZi5yZWNpcGllbnRFVk1BZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IFsKICAgICAgICAgICAgYWRkcmVzc0J5dGVzWzBdLCBhZGRyZXNzQnl0ZXNbMV0sIGFkZHJlc3NCeXRlc1syXSwgYWRkcmVzc0J5dGVzWzNdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbNF0sIGFkZHJlc3NCeXRlc1s1XSwgYWRkcmVzc0J5dGVzWzZdLCBhZGRyZXNzQnl0ZXNbN10sCiAgICAgICAgICAgIGFkZHJlc3NCeXRlc1s4XSwgYWRkcmVzc0J5dGVzWzldLCBhZGRyZXNzQnl0ZXNbMTBdLCBhZGRyZXNzQnl0ZXNbMTFdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTJdLCBhZGRyZXNzQnl0ZXNbMTNdLCBhZGRyZXNzQnl0ZXNbMTRdLCBhZGRyZXNzQnl0ZXNbMTVdLAogICAgICAgICAgICBhZGRyZXNzQnl0ZXNbMTZdLCBhZGRyZXNzQnl0ZXNbMTddLCBhZGRyZXNzQnl0ZXNbMThdLCBhZGRyZXNzQnl0ZXNbMTldCiAgICAgICAgXSkKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLmNvYS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICAgICAgCiAgICAgICAgbGV0IHZhbHVlQmFsYW5jZSA9IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgICAgIHZhbHVlQmFsYW5jZS5zZXRGTE9XKGZsb3c6IGFtb3VudCkKICAgICAgICBsZXQgY2FsbFJlc3VsdCA9IHNlbGYuY29hLmNhbGwoCiAgICAgICAgICAgIHRvOiBzZWxmLnJlY2lwaWVudEVWTUFkZHJlc3MsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBnYXNMaW1pdDogZ2FzTGltaXQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZUJhbGFuY2UKICAgICAgICApCiAgICAgICAgYXNzZXJ0KGNhbGxSZXN1bHQuc3RhdHVzID09IEVWTS5TdGF0dXMuc3VjY2Vzc2Z1bCwgbWVzc2FnZTogIlRyYW5zZmVyIHRvIHJlY2lwaWVudCBmYWlsZWQiKQogICAgfQp9",
              "withdrawCoa": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdDb2EgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZsb3dUb2tlbgppbXBvcnQgRVZNIGZyb20gMHhFVk0KCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo=",
              "withdrawCoaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdDb2FUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CmltcG9ydCBFVk0gZnJvbSAweDhjNTMwM2VhYTI2MjAyZDYKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCBhZGRyZXNzOiBBZGRyZXNzKSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgRVZNLldpdGhkcmF3KSAmQWNjb3VudCkgewogICAgICAgIGxldCBjb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uV2l0aGRyYXcpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgICAgICBsZXQgd2l0aGRyYXdCYWxhbmNlID0gRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICAgICAgd2l0aGRyYXdCYWxhbmNlLnNldEZMT1coZmxvdzogYW1vdW50KQogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIGNvYS53aXRoZHJhdyhiYWxhbmNlOiB3aXRoZHJhd0JhbGFuY2UpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHJlY2VpdmVyID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvZmxvd1Rva2VuUmVjZWl2ZXIpIQogICAgICAgIHJlY2VpdmVyLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQo="
            },
            "hybridCustody": {
              "addNFTCollectionToDelegator": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkTkZUQ29sbGVjdGlvblRvRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24ocGFyZW50OiBBZGRyZXNzLCBpc1B1YmxpYzogQm9vbCkgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgbyA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgbGV0IGNoaWxkOiAmSHlicmlkQ3VzdG9keS5DaGlsZEFjY291bnQgPSBvLmJvcnJvd0NoaWxkQWNjb3VudChwYXJlbnQ6IHBhcmVudCkKICAgICAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IGNhcCA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oRXhhbXBsZU5GVC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgby5hZGRDYXBhYmlsaXR5VG9EZWxlZ2F0b3IocGFyZW50OiBwYXJlbnQsIGNhcDogY2FwLCBpc1B1YmxpYzogaXNQdWJsaWMpCiAgICB9Cn0=",
              "addNFTCollectionToDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYWRkTkZUQ29sbGVjdGlvblRvRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg4OTIwZmZkM2Q4NzY4ZGFhCgp0cmFuc2FjdGlvbihwYXJlbnQ6IEFkZHJlc3MsIGlzUHVibGljOiBCb29sKSB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBvID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICBsZXQgY2hpbGQ6ICZIeWJyaWRDdXN0b2R5LkNoaWxkQWNjb3VudCA9IG8uYm9ycm93Q2hpbGRBY2NvdW50KHBhcmVudDogcGFyZW50KQogICAgICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQoKICAgICAgICBsZXQgY2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRXhhbXBsZU5GVC5Db2xsZWN0aW9uPigvc3RvcmFnZS9jYWRlbmNlRXhhbXBsZU5GVENvbGxlY3Rpb24pCiAgICAgICAgby5hZGRDYXBhYmlsaXR5VG9EZWxlZ2F0b3IocGFyZW50OiBwYXJlbnQsIGNhcDogY2FwLCBpc1B1YmxpYzogaXNQdWJsaWMpCiAgICB9Cn0=",
              "batchSendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCgppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgIAogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchSendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gRXhhbXBsZU5GVC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlTkZUIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgIAogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIGZvciBpZCBpbiBpZHMgewogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchSendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchSendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hTZW5kQ2hpbGRORlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gRXhhbXBsZU5GVC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlTkZUIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchTransferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2ZlckNoaWxkTkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsICBpZHM6IFtVSW50NjRdICkgewoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxORlQ+ICIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oY29sbGVjdGlvbkRhdGEucHVibGljUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICBmb3IgaWQgaW4gaWRzIHsgICAgIAogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogICAgfQogIH0KfQ==",
              "batchTransferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2ZlckNoaWxkTkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCAgaWRzOiBbVUludDY0XSApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQogICAgbGV0IHJlY2VpdmVyUmVmID0gIHNpZ25lci5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgZm9yIGlkIGluIGlkcyB7ICAgICAKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KICB9Cn0=",
              "batchTransferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2Zlck5GVFRvQ2hpbGQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkczogW1VJbnQ2NF0pIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IGNoaWxkQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4KICAgIGFzc2VydChjaGlsZENhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIAogICAgbGV0IHBhcmVudFJlZiA9ICBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tIDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpIQogICAgbGV0IGNoaWxkUmVmID0gY2hpbGRDYXAuYm9ycm93KCkhCgogICAgZm9yIGlkIGluIGlkcyB7ICAgICAKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IG5mdCA8LSBwYXJlbnRSZWYhLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKSEKICAgICAgICBjaGlsZFJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgICB9CiAgfQp9",
              "batchTransferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYmF0Y2hUcmFuc2Zlck5GVFRvQ2hpbGRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWRzOiBbVUludDY0XSkgewogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKCiAgICBmb3IgaWQgaW4gaWRzIHsgICAgIAogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgbmZ0IDwtIHBhcmVudFJlZiEud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpIQogICAgICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICAgIH0KICB9Cn0=",
              "bridgeChildFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlQ2hpbGRGVFRvRXZtVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CgppbXBvcnQgU2NvcGVkRlRQcm92aWRlcnMgZnJvbSAweGRmYzIwYWVlNjUwZmNiZGYKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRVZNIGZyb20gMHg4YzUzMDNlYWEyNjIwMmQ2CgppbXBvcnQgRmxvd0VWTUJyaWRnZVV0aWxzIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCmltcG9ydCBGbG93RVZNQnJpZGdlQ29uZmlnIGZyb20gMHhkZmMyMGFlZTY1MGZjYmRmCgoKCnRyYW5zYWN0aW9uKHRva2VuQ29udHJhY3RBZGRyZXNzOiBBZGRyZXNzLCB0b2tlbkNvbnRyYWN0TmFtZTogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCwgY2hpbGQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQogICAgbGV0IGNvYTogYXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKICAgIGxldCBzY29wZWRQcm92aWRlcjogQFNjb3BlZEZUUHJvdmlkZXJzLlNjb3BlZEZUUHJvdmlkZXIKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKCiAgICAgICAgLyogLS0tIFJlZmVyZW5jZSB0aGUgc2lnbmVyJ3MgQ2FkZW5jZU93bmVkQWNjb3VudCAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BCiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQnJpZGdlKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KGZyb206IC9zdG9yYWdlL2V2bSkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQ09BIGZyb20gcHJvdmlkZWQgZ2F0ZXdheSBhZGRyZXNzIikKCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBmdW5kcyAtLS0gKi8KICAgICAgICAvLwogICAgICAgIC8vIEJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgRnVuZ2libGVUb2tlbiBWYXVsdAogICAgICAgIGxldCB2aWV3UmVzb2x2ZXIgPSBnZXRBY2NvdW50KHRva2VuQ29udHJhY3RBZGRyZXNzKS5jb250cmFjdHMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyfT4obmFtZTogdG9rZW5Db250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIEZ1bmdpYmxlVG9rZW4gY29udHJhY3QiKQogICAgICAgIGxldCB2YXVsdERhdGEgPSB2aWV3UmVzb2x2ZXIucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkKICAgICAgICAgICAgKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/ID8/IHBhbmljKCJDb3VsZCBub3QgcmVzb2x2ZSBGVFZhdWx0RGF0YSB2aWV3IikKICAgICAgICBsZXQgdmF1bHQgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigKICAgICAgICAgICAgICAgIGZyb206IHZhdWx0RGF0YS5zdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYWNjZXNzIHNpZ25lcidzIEZ1bmdpYmxlVG9rZW4gVmF1bHQiKQoKICAgICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICAgICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgIAogICAgICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgICAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAgICAgCiAgICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgICAgICAKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgbGV0IHZhdWx0UmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBzZWxmLnBheW1lbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKCiAgICAgICAgICAgLy8gV2l0aGRyYXcgdGhlIHJlcXVlc3RlZCBiYWxhbmNlICYgY2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHN0b3JhZ2UgdXNhZ2UKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdC53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICAgICAgICBsZXQgd2l0aGRyYXduU3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIC8vIEFwcHJveGltYXRlIHRoZSBicmlkZ2UgZmVlIGJhc2VkIG9uIHRoZSBkaWZmZXJlbmNlIGluIHN0b3JhZ2UgdXNhZ2Ugd2l0aCBzb21lIGJ1ZmZlcgogICAgICAgIGxldCBhcHByb3hGZWUgPSBGbG93RVZNQnJpZGdlVXRpbHMuY2FsY3VsYXRlQnJpZGdlRmVlKAogICAgICAgICAgICAgICAgYnl0ZXM6IGN1cnJlbnRTdG9yYWdlVXNhZ2UgLSB3aXRoZHJhd25TdG9yYWdlVXNhZ2UKICAgICAgICAgICAgKSAqIDEuMTAKCiAgICAgICAgLyogLS0tIENvbmZpZ3VyZSBhIFNjb3BlZEZUUHJvdmlkZXIgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBJc3N1ZSBhbmQgc3RvcmUgYnJpZGdlLWRlZGljYXRlZCBQcm92aWRlciBDYXBhYmlsaXR5IGluIHN0b3JhZ2UgaWYgbmVjZXNzYXJ5CiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UudHlwZShhdDogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oCiAgICAgICAgICAgICAgICAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICAgICApCiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUocHJvdmlkZXJDYXAsIHRvOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoKQogICAgICAgIH0KICAgICAgICAvLyBDb3B5IHRoZSBzdG9yZWQgUHJvdmlkZXIgY2FwYWJpbGl0eSBhbmQgY3JlYXRlIGEgU2NvcGVkRlRQcm92aWRlcgogICAgICAgIGxldCBwcm92aWRlckNhcENvcHkgPSBzaWduZXIuc3RvcmFnZS5jb3B5PENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oCiAgICAgICAgICAgICAgICBmcm9tOiBGbG93RVZNQnJpZGdlQ29uZmlnLnByb3ZpZGVyQ2FwYWJpbGl0eVN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkludmFsaWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBmb3VuZCBpbiBzdG9yYWdlLiIpCiAgICAgICAgbGV0IHByb3ZpZGVyRmlsdGVyID0gU2NvcGVkRlRQcm92aWRlcnMuQWxsb3dhbmNlRmlsdGVyKGFwcHJveEZlZSkKICAgICAgICBzZWxmLnNjb3BlZFByb3ZpZGVyIDwtIFNjb3BlZEZUUHJvdmlkZXJzLmNyZWF0ZVNjb3BlZEZUUHJvdmlkZXIoCiAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlckNhcENvcHksCiAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgZXhwaXJhdGlvbjogZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wICsgMS4wCiAgICAgICAgKQoKICAgIH0KCiAgICBleGVjdXRlIHsKCiAgICAgICAgIHNlbGYuY29hLmRlcG9zaXRUb2tlbnMoCiAgICAgICAgICAgIHZhdWx0OiA8LXNlbGYucGF5bWVudFZhdWx0LAogICAgICAgICAgICBmZWVQcm92aWRlcjogJnNlbGYuc2NvcGVkUHJvdmlkZXIgYXMgYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9CiAgICAgICAgKQogICAgICAgIC8vIERlc3Ryb3kgdGhlIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBkZXN0cm95IHNlbGYuc2NvcGVkUHJvdmlkZXIKICAgIH0KfQog",
              "bridgeChildNFTToEvmTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgYnJpZGdlQ2hpbGRORlRUb0V2bVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDdlNjBkZjA0MmE5YzA4NjgKCmltcG9ydCBTY29wZWRGVFByb3ZpZGVycyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEVWTSBmcm9tIDB4OGM1MzAzZWFhMjYyMDJkNgoKaW1wb3J0IEZsb3dFVk1CcmlkZ2VVdGlscyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZSBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgppbXBvcnQgRmxvd0VWTUJyaWRnZUNvbmZpZyBmcm9tIDB4ZGZjMjBhZWU2NTBmY2JkZgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCgoKLy8vIEJyaWRnZXMgYW4gTkZUIGZyb20gdGhlIHNpZ25lcidzIGNvbGxlY3Rpb24gaW4gQ2FkZW5jZSB0byB0aGUgc2lnbmVyJ3MgQ09BIGluIEZsb3dFVk0KLy8vIE5PVEU6IFRoZSBORlQgYmVpbmcgYnJpZGdlZCBtdXN0IGhhdmUgZmlyc3QgYmVlbiBvbmJvYXJkZWQgdG8gdGhlIGJyaWRnZS4gVGhpcyBjYW4gYmUgY2hlY2tlZCBmb3Igd2l0aCB0aGUgbWV0aG9kCi8vLyAgICAgRmxvd0VWTUJyaWRnZS50eXBlUmVxdWlyZXNPbmJvYXJkaW5nKHR5cGUpOiBCb29sPwovLy8KLy8vIEBwYXJhbSBuZnRDb250cmFjdEFkZHJlc3M6IFRoZSBGbG93IGFjY291bnQgYWRkcmVzcyBob3N0aW5nIHRoZSBORlQtZGVmaW5pbmcgQ2FkZW5jZSBjb250cmFjdAovLy8gQHBhcmFtIG5mdENvbnRyYWN0TmFtZTogVGhlIG5hbWUgb2YgdGhlIE5GVC1kZWZpbmluZyBDYWRlbmNlIGNvbnRyYWN0Ci8vLyBAcGFyYW0gaWQ6IFRoZSBDYWRlbmNlIE5GVC5pZCBvZiB0aGUgTkZUIHRvIGJyaWRnZSB0byBFVk0KLy8vCnRyYW5zYWN0aW9uKG5mdENvbnRyYWN0QWRkcmVzczogQWRkcmVzcywgbmZ0Q29udHJhY3ROYW1lOiBTdHJpbmcsIGlkOiBVSW50NjQsIGNoaWxkOiBBZGRyZXNzKSB7CiAgICAKICAgIGxldCBuZnQ6IEB7Tm9uRnVuZ2libGVUb2tlbi5ORlR9CiAgICBsZXQgY29hOiBhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAogICAgbGV0IHNjb3BlZFByb3ZpZGVyOiBAU2NvcGVkRlRQcm92aWRlcnMuU2NvcGVkRlRQcm92aWRlcgogICAgCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChDb3B5VmFsdWUsIEJvcnJvd1ZhbHVlLCBJc3N1ZVN0b3JhZ2VDYXBhYmlsaXR5Q29udHJvbGxlciwgUHVibGlzaENhcGFiaWxpdHksIFNhdmVWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAvKiAtLS0gUmVmZXJlbmNlIHRoZSBzaWduZXIncyBDYWRlbmNlT3duZWRBY2NvdW50IC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gQm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBDT0EKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5CcmlkZ2UpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oZnJvbTogL3N0b3JhZ2UvZXZtKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBDT0EgZnJvbSBwcm92aWRlZCBnYXRld2F5IGFkZHJlc3MiKQoKICAgICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgLyogLS0tIFJldHJpZXZlIHRoZSBORlQgLS0tICovCiAgICAgICAgLy8KICAgICAgICAvLyBCb3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIE5GVCBjb2xsZWN0aW9uLCBjb25maWd1cmluZyBpZiBuZWNlc3NhcnkKICAgICAgICBsZXQgdmlld1Jlc29sdmVyID0gZ2V0QWNjb3VudChuZnRDb250cmFjdEFkZHJlc3MpLmNvbnRyYWN0cy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXJ9PihuYW1lOiBuZnRDb250cmFjdE5hbWUpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IFZpZXdSZXNvbHZlciBmcm9tIE5GVCBjb250cmFjdCIpCiAgICAgICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gdmlld1Jlc29sdmVyLnJlc29sdmVDb250cmFjdFZpZXcoCiAgICAgICAgICAgICAgICByZXNvdXJjZVR5cGU6IG5pbCwKICAgICAgICAgICAgICAgIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkKICAgICAgICAgICAgKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8gPz8gcGFuaWMoIkNvdWxkIG5vdCByZXNvbHZlIE5GVENvbGxlY3Rpb25EYXRhIHZpZXciKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigKICAgICAgICAgICAgICAgIGZyb206IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBhY2Nlc3Mgc2lnbmVyJ3MgTkZUIENvbGxlY3Rpb24iKQoKICAgICAgICAvLyBXaXRoZHJhdyB0aGUgcmVxdWVzdGVkIE5GVCAmIGNhbGN1bGF0ZSB0aGUgYXBwcm94aW1hdGUgYnJpZGdlIGZlZSBiYXNlZCBvbiBORlQgc3RvcmFnZSB1c2FnZQogICAgICAgIGxldCBjdXJyZW50U3RvcmFnZVVzYWdlID0gc2lnbmVyLnN0b3JhZ2UudXNlZAogICAgICAgIHNlbGYubmZ0IDwtIGNvbGxlY3Rpb24ud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAgICAgbGV0IHdpdGhkcmF3blN0b3JhZ2VVc2FnZSA9IHNpZ25lci5zdG9yYWdlLnVzZWQKICAgICAgICBsZXQgYXBwcm94RmVlID0gRmxvd0VWTUJyaWRnZVV0aWxzLmNhbGN1bGF0ZUJyaWRnZUZlZSgKICAgICAgICAgICAgICAgIGJ5dGVzOiBjdXJyZW50U3RvcmFnZVVzYWdlIC0gd2l0aGRyYXduU3RvcmFnZVVzYWdlCiAgICAgICAgICAgICkgKiAxLjEwCgogICAgICAgIC8qIC0tLSBDb25maWd1cmUgYSBTY29wZWRGVFByb3ZpZGVyIC0tLSAqLwogICAgICAgIC8vCiAgICAgICAgLy8gSXNzdWUgYW5kIHN0b3JlIGJyaWRnZS1kZWRpY2F0ZWQgUHJvdmlkZXIgQ2FwYWJpbGl0eSBpbiBzdG9yYWdlIGlmIG5lY2Vzc2FyeQogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLnR5cGUoYXQ6IEZsb3dFVk1CcmlkZ2VDb25maWcucHJvdmlkZXJDYXBhYmlsaXR5U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KAogICAgICAgICAgICAgICAgL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICAgICAgKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKHByb3ZpZGVyQ2FwLCB0bzogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aCkKICAgICAgICB9CiAgICAgICAgLy8gQ29weSB0aGUgc3RvcmVkIFByb3ZpZGVyIGNhcGFiaWxpdHkgYW5kIGNyZWF0ZSBhIFNjb3BlZEZUUHJvdmlkZXIKICAgICAgICBsZXQgcHJvdmlkZXJDYXBDb3B5ID0gc2lnbmVyLnN0b3JhZ2UuY29weTxDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KAogICAgICAgICAgICAgICAgZnJvbTogRmxvd0VWTUJyaWRnZUNvbmZpZy5wcm92aWRlckNhcGFiaWxpdHlTdG9yYWdlUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJJbnZhbGlkIFByb3ZpZGVyIENhcGFiaWxpdHkgZm91bmQgaW4gc3RvcmFnZS4iKQogICAgICAgIGxldCBwcm92aWRlckZpbHRlciA9IFNjb3BlZEZUUHJvdmlkZXJzLkFsbG93YW5jZUZpbHRlcihhcHByb3hGZWUpCiAgICAgICAgc2VsZi5zY29wZWRQcm92aWRlciA8LSBTY29wZWRGVFByb3ZpZGVycy5jcmVhdGVTY29wZWRGVFByb3ZpZGVyKAogICAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyQ2FwQ29weSwKICAgICAgICAgICAgICAgIGZpbHRlcnM6IFsgcHJvdmlkZXJGaWx0ZXIgXSwKICAgICAgICAgICAgICAgIGV4cGlyYXRpb246IGdldEN1cnJlbnRCbG9jaygpLnRpbWVzdGFtcCArIDEuMAogICAgICAgICAgICApCgogICAgICAgICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgICAgCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBzZWxmLm5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEV4ZWN1dGUgdGhlIGJyaWRnZQogICAgICAgIHNlbGYuY29hLmRlcG9zaXRORlQoCiAgICAgICAgICAgIG5mdDogPC1zZWxmLm5mdCwKICAgICAgICAgICAgZmVlUHJvdmlkZXI6ICZzZWxmLnNjb3BlZFByb3ZpZGVyIGFzIGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfQogICAgICAgICkKICAgICAgICAvLyBEZXN0cm95IHRoZSBTY29wZWRGVFByb3ZpZGVyCiAgICAgICAgZGVzdHJveSBzZWxmLnNjb3BlZFByb3ZpZGVyCiAgICB9Cn0K",
              "checkChildLinkedCollections": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZENvbGxlY3Rpb25zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nKTogQm9vbCB7CiAgICBsZXQgbWdyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgbWFuYWdlciBmcm9tIHBhcmVudCIpCiAgICBsZXQgY2hpbGQgPSBtZ3IuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoIkNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICBsZXQgY2FwID0gY2hpbGQuZ2V0Q2FwYWJpbGl0eSgKICAgICAgICAgICAgcGF0aDogUHJpdmF0ZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhIGFzIENhcGFiaWxpdHlQYXRoLAogICAgICAgICAgICB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQogICAgICAgICkgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj8KCiAgICAKICAgIHJldHVybiBjYXAgIT0gbmlsCn0gICAKICAgIA==",
              "checkChildLinkedCollectionsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZENvbGxlY3Rpb25zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MsIHBhdGg6IFN0cmluZyk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIAogIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhKQogIHZhciBmbGFnID0gZmFsc2UKCiAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICBjb250aW51ZQogICAgfQoKICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgY29udGludWUKICAgICAgfQoKICAgICAgZmxhZyA9IHRydWUKICAgICAgYnJlYWsKICAgIH0KICB9CgogIHJldHVybiBmbGFnCn0gCiAgICA=",
              "checkChildLinkedVaults": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZFZhdWx0cyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweENhcGFiaWxpdHlGaWx0ZXIKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MsIHBhdGg6IFN0cmluZyk6IEJvb2wgewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIAogIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aCkhKQogIHZhciBmbGFnID0gZmFsc2UKCiAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICBjb250aW51ZQogICAgfQoKICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgY29udGludWUKICAgICAgfQoKICAgICAgZmxhZyA9IHRydWUKICAgICAgYnJlYWsKICAgIH0KICB9CgogIHJldHVybiBmbGFnCn0gCiAgICA=",
              "checkChildLinkedVaultsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tDaGlsZExpbmtlZFZhdWx0c1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCi8vIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcpOiBCb29sIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCgogIGxldCBhZGRyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihjaGlsZCkKICAKICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQoKICBsZXQgY29udHJvbGxlcnMgPSBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGgpISkKICB2YXIgZmxhZyA9IGZhbHNlCgogIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgY29udGludWUKICAgIH0KCiAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgIGNvbnRpbnVlCiAgICAgIH0KCiAgICAgIGZsYWcgPSB0cnVlCiAgICAgIGJyZWFrCiAgICB9CiAgfQoKICByZXR1cm4gZmxhZwp9IAogICAg",
              "editChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZWRpdENoaWxkQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
              "getAccessibleChildAccountNFTs": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNoaWxkQWNjb3VudE5GVHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogQW55U3RydWN0IHsKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlciA9IHt9IGFzIHtBZGRyZXNzOiBbU3RyaW5nXX0KCiAgLy8gQWRkcmVzcyAtPiBuZnQgVVVJRCAtPiBEaXNwbGF5CiAgdmFyIG5mdFZpZXdzID0ge30gYXMge0FkZHJlc3M6IHtVSW50NjQ6IE1ldGFkYXRhVmlld3MuRGlzcGxheX19IAoKICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQogICAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICAgIGxldCB2aWV3czoge1VJbnQ2NDogTWV0YWRhdGFWaWV3cy5EaXNwbGF5fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgCiAgICAvLyB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCEpCiAgICAgIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQogICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwogICAgCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmlld3MKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgCiAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgICB9CgogICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldISB7CiAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgZm9yIGlkIGluIGNvbGxlY3Rpb24uZ2V0SURzKCkgewogICAgICAgICAgICAgICAgbGV0IG5mdCA9IGNvbGxlY3Rpb24uYm9ycm93TkZUKGlkKSEKICAgICAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb24uYm9ycm93Vmlld1Jlc29sdmVyKGlkOiBpZCkhCiAgICAgICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IHJlc29sdmVyLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKSEgYXM/IE1ldGFkYXRhVmlld3MuRGlzcGxheSB7CiAgICAgICAgICAgICAgICAgIHZpZXdzLmluc2VydChrZXk6IG5mdC51dWlkLCBkaXNwbGF5KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSkKICAgIG5mdFZpZXdzW2FkZHJlc3NdID0gdmlld3MKICB9CiAgcmV0dXJuIG5mdFZpZXdzCn0=",
              "getAccessibleChildAccountNFTsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNoaWxkQWNjb3VudE5GVHNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI5NGU0NGUxZWM2OTkzYzYKCgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6IEFueVN0cnVjdCB7CiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXIgPSB7fSBhcyB7QWRkcmVzczogW1N0cmluZ119CgogIC8vIEFkZHJlc3MgLT4gbmZ0IFVVSUQgLT4gRGlzcGxheQogIHZhciBuZnRWaWV3cyA9IHt9IGFzIHtBZGRyZXNzOiB7VUludDY0OiBNZXRhZGF0YVZpZXdzLkRpc3BsYXl9fSAKCiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogIGZvciBhZGRyZXNzIGluIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKSB7CiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oYWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmlld3M6IHtVSW50NjQ6IE1ldGFkYXRhVmlld3MuRGlzcGxheX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgIAogICAgLy8gdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICBsZXQgY29udHJvbGxlcnMgPSBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHBhdGghKQogICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKICAgIAoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZpZXdzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgIAogICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgcmV0dXJuIHRydWUKICAgICAgfQoKICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZS5pZGVudGlmaWVyIHsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgSURzICYgcmVzb2x2ZSB0aGUgdmlldwogICAgICAgICAgICAgIGZvciBpZCBpbiBjb2xsZWN0aW9uLmdldElEcygpIHsKICAgICAgICAgICAgICAgIGxldCBuZnQgPSBjb2xsZWN0aW9uLmJvcnJvd05GVChpZCkhCiAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogaWQpIQogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSByZXNvbHZlci5yZXNvbHZlVmlldyhUeXBlPE1ldGFkYXRhVmlld3MuRGlzcGxheT4oKSkhIGFzPyBNZXRhZGF0YVZpZXdzLkRpc3BsYXkgewogICAgICAgICAgICAgICAgICB2aWV3cy5pbnNlcnQoa2V5OiBuZnQudXVpZCwgZGlzcGxheSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCiAgICBuZnRWaWV3c1thZGRyZXNzXSA9IHZpZXdzCiAgfQogIHJldHVybiBuZnRWaWV3cwp9",
              "getAccessibleCoinInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvaW5JbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCmFjY2VzcyhhbGwpIHN0cnVjdCBUb2tlbkluZm8gewphY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiBbVG9rZW5JbmZvXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4gKGNoaWxkQWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCkKCiAgICAgICAgLy8gbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIAogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgCiAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgCiAgICByZXR1cm4gY29pbkluZm9MaXN0Cn0=",
              "getAccessibleCoinInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvaW5JbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGYyMzNkY2VlODhmZTBhYmUKCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDFkN2U1N2FhNTU4MTc0NDgKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweGQ4YTdlMDVhN2FjNjcwYzAKCmFjY2VzcyhhbGwpIHN0cnVjdCBUb2tlbkluZm8gewphY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0Cgppbml0KGlkOiBTdHJpbmcsIGJhbGFuY2U6IFVGaXg2NCkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCn0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiBbVG9rZW5JbmZvXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQoKICAgIHZhciBjb2luSW5mb0xpc3Q6IFtUb2tlbkluZm9dID0gW10KICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4gKGNoaWxkQWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCkKCiAgICAgICAgLy8gbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQogICAgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgIAogICAgYWNjdC5zdG9yYWdlLmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgCiAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgbGV0IHZhbHVlID0gdHlwZUlkc1dpdGhQcm92aWRlcltrZXldIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlLmlkZW50aWZpZXIgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZSh2YXVsdFR5cGUpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgIC8vIEl0ZXJhdGUgb3ZlciBJRHMgJiByZXNvbHZlIHRoZSB2aWV3CiAgICAgICAgICAgICAgICAgICAgY29pbkluZm9MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIH0KICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgCiAgICByZXR1cm4gY29pbkluZm9MaXN0Cn0K",
              "getAccessibleCollectionAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiBbVUludDY0XX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBY2NvdW50KQogICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBY2NvdW50KSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgIGlmIGZvdW5kVHlwZXMgPT0gbmlsIHsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIGZvdW5kVHlwZXMgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBmb3VuZFR5cGVzIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIHJldHVybiBuZnRzCn0=",
              "getAccessibleCollectionAndIdsDisplay": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHNEaXNwbGF5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgoKYWNjZXNzKGFsbCkgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBhY2Nlc3MoYWxsKSBsZXQgbmFtZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYSkgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgfQp9CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgTkZUQ29sbGVjdGlvbiB7CiAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywgaWRMaXN0OiBbVUludDY0XSkgewogICAgc2VsZi5pZCA9IGlkCiAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICBzZWxmLmlkTGlzdCA9IGlkTGlzdAogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQoKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICAvLyBsZXQgdmF1bHRUeXBlID0gVHlwZTxAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIQogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBpdGVtID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9ICBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkQWNjb3VudCkKICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICBsZXQgY29sbGVjdGlvbkxpc3Q6IFtORlRDb2xsZWN0aW9uXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWNjb3VudCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgLy8gaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgIC8vICAgICByZXR1cm4gdHJ1ZQogICAgICAgIC8vIH0KICAgICAgICAvLyBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgLy8gICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgLy8gICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgIC8vICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAvLyAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgLy8gICAgIH0KICAgICAgICAvLyAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAvLyB9CgogICAgICAgIGxldCBjb250cm9sbGVycyA9IGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcGF0aCEpCiAgICAgICAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQoKICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICBhY2N0LnN0b3JhZ2UuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgIGlmIGZvdW5kVHlwZXMgPT0gbmlsIHsKICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CgogICAgICAgIGZvciBpZHgsIHZhbHVlIGluIGZvdW5kVHlwZXMgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBmb3VuZFR5cGVzIQoKICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
              "getAccessibleCollectionAndIdsDisplayTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25BbmRJZHNEaXNwbGF5VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOTRlNDRlMWVjNjk5M2M2CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdG9yYWdlUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGFkZHJlc3MpCgogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIC8vIGxldCB2YXVsdFR5cGUgPSBUeXBlPEB7RnVuZ2libGVUb2tlbi5WYXVsdH0+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9ufT4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBwYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkhCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGRBY2NvdW50OiBBZGRyZXNzKTogW05GVENvbGxlY3Rpb25dIHsKICAgIGxldCBtYW5hZ2VyID0gIGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KHBhcmVudCkuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgLy8gQWRkcmVzcyAtPiBDb2xsZWN0aW9uIFR5cGUgLT4gb3duZWRORlRzCgogICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKCiAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oY2hpbGRBY2NvdW50KQogICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgIGxldCBjb2xsZWN0aW9uTGlzdDogW05GVENvbGxlY3Rpb25dID0gW10KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBY2NvdW50KSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAvLyBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgLy8gICAgIHJldHVybiB0cnVlCiAgICAgICAgLy8gfQogICAgICAgIC8vIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAvLyAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAvLyAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgLy8gICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgIC8vICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAvLyAgICAgfQogICAgICAgIC8vICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgIC8vIH0KCiAgICAgICAgbGV0IGNvbnRyb2xsZXJzID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBwYXRoISkKICAgICAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICB9CgogICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICB9KQoKICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIG5mdHMKICAgIGFjY3Quc3RvcmFnZS5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgIG5mdHMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCBjb2xsZWN0aW9uLmdldElEcygpKQogICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25MaXN0LmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgIE5GVENvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0eXBlLmlkZW50aWZpZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogY2hpbGRBY2NvdW50LCBwYXRoOiBwYXRoKSwKICAgICAgICAgICAgICAgICAgICAgICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKCiAgICByZXR1cm4gY29sbGVjdGlvbkxpc3QKfQ==",
              "getAccessibleCollectionsAndIds": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUNvbGxlY3Rpb25zQW5kSWRzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBUaGlzIGlzIHRoZSBtb3N0IGJhc2ljIHNjcmlwdCB5b3UgY2FuIGV4ZWN1dGUgb24gRmxvdyBOZXR3b3JrCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKToge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwogICAgdmFyIGFjY2Vzc2libGVORlRzOiB7QWRkcmVzczoge1N0cmluZzogW1VJbnQ2NF19fSAgPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgbmZ0czoge1N0cmluZzogW1VJbnQ2NF19ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwoKICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgYWNjZXNzaWJsZU5GVHNbYWRkcmVzc10gPSBuZnRzCiAgICB9CiAgICByZXR1cm4gYWNjZXNzaWJsZU5GVHMKfQ==",
              "getAccessibleFungibleToken": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QWNjZXNzaWJsZUZ1bmdpYmxlVG9rZW4gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZEFkZHJlc3M6IEFkZHJlc3MpOiB7U3RyaW5nOiBVRml4NjR9IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhdWx0QmFsYW5jZXMuaW5zZXJ0KGtleTogdHlwZS5pZGVudGlmaWVyLCB2YXVsdC5iYWxhbmNlKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgIAogICAgcmV0dXJuIHZhdWx0QmFsYW5jZXMKfQ==",
              "getChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKICAgIHB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0K",
              "getChildAccountAllowTypes": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50QWxsb3dUeXBlcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcyk6IFtTdHJpbmddPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgoKICAKICBsZXQgbmZ0UHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICBsZXQgZnRQcm92aWRlclR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQoKICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICBsZXQgYWRkciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oY2hpbGQpCiAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwoKICBmb3IgcyBpbiBhZGRyLnN0b3JhZ2Uuc3RvcmFnZVBhdGhzIHsKICAgIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcykKICAgIGZvciBjIGluIGNvbnRyb2xsZXJzIHsKICAgICAgLy8gaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSkgewogICAgICAvLyAgIGNvbnRpbnVlCiAgICAgIC8vIH0KCiAgICAgIGlmIGxldCBuZnRDYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGMuY2FwYWJpbGl0eUlELCB0eXBlOiBuZnRQcm92aWRlclR5cGUpIHsKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBuZnRDYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQobmZ0Q2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIGJyZWFrCiAgICAgIH0KICAgICAgaWYgbGV0IGZ0Q2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogZnRQcm92aWRlclR5cGUpIHsKICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBmdENhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoZnRDYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpLmlkZW50aWZpZXIpCiAgICAgICAgYnJlYWsKICAgICAgfQogICAgfQogIH0KCiAgcmV0dXJuIGZvdW5kVHlwZXMKfQ==",
              "getChildAccountAllowTypesTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50QWxsb3dUeXBlc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBbU3RyaW5nXT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikKICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKCiAgCiAgbGV0IG5mdFByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgbGV0IGZ0UHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGNoaWxkKQogIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKCiAgZm9yIHMgaW4gYWRkci5zdG9yYWdlLnN0b3JhZ2VQYXRocyB7CiAgICBsZXQgY29udHJvbGxlcnMgPSBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHMpCiAgICBmb3IgYyBpbiBjb250cm9sbGVycyB7CiAgICAgIC8vIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgLy8gICBjb250aW51ZQogICAgICAvLyB9CgogICAgICBpZiBsZXQgbmZ0Q2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogbmZ0UHJvdmlkZXJUeXBlKSB7CiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gbmZ0Q2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKG5mdENhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICBicmVhawogICAgICB9CiAgICAgIGlmIGxldCBmdENhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IGZ0UHJvdmlkZXJUeXBlKSB7CiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gZnRDYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgY29udGludWUKICAgICAgICB9CgogICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGZ0Q2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgIGJyZWFrCiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBmb3VuZFR5cGVzCn0=",
              "getChildAccountFTCapabilities": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50RlRDYXBhYmlsaXRpZXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgovLyBUaGlzIHNjcmlwdCBpdGVyYXRlcyB0aHJvdWdoIGEgcGFyZW50J3MgY2hpbGQgYWNjb3VudHMsIAovLyBpZGVudGlmaWVzIHByaXZhdGUgcGF0aHMgd2l0aCBhbiBhY2Nlc3NpYmxlIEZ1bmdpYmxlVG9rZW4uUHJvdmlkZXIsIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHR5cGVJZHMKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcjogQWRkcmVzcyk6QW55U3RydWN0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpCiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogIHZhciB0eXBlSWRzV2l0aFByb3ZpZGVyOiB7QWRkcmVzczogW1N0cmluZ119ID0ge30KICAKICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKCiAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCiAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBhZGRyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PihhZGRyZXNzKQogICAgbGV0IGZvdW5kVHlwZXM6IFtTdHJpbmddID0gW10KICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwoKICAgIGZvciBzIGluIGFkZHIuc3RvcmFnZS5zdG9yYWdlUGF0aHMgewogICAgICBmb3IgYyBpbiBhZGRyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IHMpIHsKICAgICAgICBpZiAhYy5ib3Jyb3dUeXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQoKICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICB9CgogICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKS5pZGVudGlmaWVyKQogICAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKICAgICAgICAgIGJyZWFrCiAgICAgICAgfQogICAgICB9CiAgICB9ICAgICAgCiAgfQoKICByZXR1cm4gdHlwZUlkc1dpdGhQcm92aWRlcgp9CiA=",
              "getChildAccountFTCapabilitiesTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50RlRDYXBhYmlsaXRpZXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKLy8gVGhpcyBzY3JpcHQgaXRlcmF0ZXMgdGhyb3VnaCBhIHBhcmVudCdzIGNoaWxkIGFjY291bnRzLCAKLy8gaWRlbnRpZmllcyBwcml2YXRlIHBhdGhzIHdpdGggYW4gYWNjZXNzaWJsZSBGdW5naWJsZVRva2VuLlByb3ZpZGVyLCBhbmQgcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyB0eXBlSWRzCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOkFueVN0cnVjdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKQogIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcikuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtTdHJpbmddfSA9IHt9CiAgCiAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCgogIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogIGZvciBhZGRyZXNzIGluIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKSB7CiAgICBsZXQgYWRkciA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudD4oYWRkcmVzcykKICAgIGxldCBmb3VuZFR5cGVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKCiAgICBmb3IgcyBpbiBhZGRyLnN0b3JhZ2Uuc3RvcmFnZVBhdGhzIHsKICAgICAgZm9yIGMgaW4gYWRkci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBzKSB7CiAgICAgICAgaWYgIWMuYm9ycm93VHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICBjb250aW51ZQogICAgICAgIH0KCiAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogYy5jYXBhYmlsaXR5SUQsIHR5cGU6IHByb3ZpZGVyVHlwZSkgewogICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgfQoKICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkuaWRlbnRpZmllcikKICAgICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbYWRkcmVzc10gPSBmb3VuZFR5cGVzCiAgICAgICAgICBicmVhawogICAgICAgIH0KICAgICAgfQogICAgfSAgICAgIAogIH0KCiAgcmV0dXJuIHR5cGVJZHNXaXRoUHJvdmlkZXIKfQog",
              "getChildAccountMeta": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TWV0YSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG0gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgIGlmIG0gPT0gbmlsIHsKICAgICAgICByZXR1cm4ge30KICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KICAgICAgICBmb3IgYWRkcmVzcyBpbiBtPy5nZXRDaGlsZEFkZHJlc3NlcygpISB7CiAgICAgICAgICAgIGxldCBjID0gbT8uZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzKSAKICAgICAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBjKQogICAgICAgIH0KICAgICAgICByZXR1cm4gZGF0YQogICAgfQp9",
              "getChildAccountMetaTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TWV0YVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhkOGE3ZTA1YTdhYzY3MGMwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHgxZDdlNTdhYTU1ODE3NDQ4CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweDFkN2U1N2FhNTU4MTc0NDgKCmFjY2VzcyhhbGwpIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9IHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG0gPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgIGlmIG0gPT0gbmlsIHsKICAgICAgICByZXR1cm4ge30KICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KICAgICAgICBmb3IgYWRkcmVzcyBpbiBtPy5nZXRDaGlsZEFkZHJlc3NlcygpISB7CiAgICAgICAgICAgIGxldCBjID0gbT8uZ2V0Q2hpbGRBY2NvdW50RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzKSAKICAgICAgICAgICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBjKQogICAgICAgIH0KICAgICAgICByZXR1cm4gZGF0YQogICAgfQp9",
              "getChildAccountNFT": "",
              "getChildAccountNFTCapabilitiesTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBY2NvdW50TkZUQ2FwYWJpbGl0aWVzVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCi8vIFRoaXMgc2NyaXB0IGl0ZXJhdGVzIHRocm91Z2ggYSBwYXJlbnQncyBjaGlsZCBhY2NvdW50cywgCi8vIGlkZW50aWZpZXMgcHJpdmF0ZSBwYXRocyB3aXRoIGFuIGFjY2Vzc2libGUgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlciwgYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdHlwZUlkcwphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKTogQW55U3RydWN0IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHIpCiAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihhZGRyKS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbU3RyaW5nXX0gPSB7fQogIAogIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQoKICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICBmb3IgYWRkcmVzcyBpbiBtYW5hZ2VyLmdldENoaWxkQWRkcmVzc2VzKCkgewogICAgbGV0IGFkZHIgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KGFkZHJlc3MpCiAgICBsZXQgZm91bmRUeXBlczogW1N0cmluZ10gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCgogICAgZm9yIHMgaW4gYWRkci5zdG9yYWdlLnN0b3JhZ2VQYXRocyB7CiAgICAgIGxldCBjb250cm9sbGVycyA9IGFkZHIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogcykKICAgICAgZm9yIGMgaW4gY29udHJvbGxlcnMgewogICAgICAgIGlmICFjLmJvcnJvd1R5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpIHsKICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgfQoKICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjLmNhcGFiaWxpdHlJRCwgdHlwZTogcHJvdmlkZXJUeXBlKSB7CiAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgY29udGludWUKICAgICAgICAgIH0KCiAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpLmlkZW50aWZpZXIpCiAgICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID0gZm91bmRUeXBlcwogICAgICAgICAgYnJlYWsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiB0eXBlSWRzV2l0aFByb3ZpZGVyCn0=",
              "getChildAddresses": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBZGRyZXNzZXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiBbQWRkcmVzc10gewogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpCiAgICBsZXQgbWFuYWdlciA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgIHJldHVybiAgbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpCn0=",
              "getChildAddressesTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Q2hpbGRBZGRyZXNzZXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICByZXR1cm4gIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9",
              "getExamplenftCollectionFromDelegator": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RXhhbXBsZW5mdENvbGxlY3Rpb25Gcm9tRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzLCBjaGlsZDogQWRkcmVzcywgaXNQdWJsaWM6IEJvb2wpIHsKICAgIGxldCBtID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4ocGFyZW50KS5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgbGV0IGFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpCiAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIGluIG1hbmFnZXIiKQoKICAgIGxldCB0ID0gVHlwZTxDYXBhYmlsaXR5PCZFeGFtcGxlTkZULkNvbGxlY3Rpb24+PigpCgogICAgbGV0IGNhcCA9IChpc1B1YmxpYyA/IGFjY3QuZ2V0UHVibGljQ2FwRnJvbURlbGVnYXRvcih0eXBlOiB0KSA6IGFjY3QuZ2V0UHJpdmF0ZUNhcEZyb21EZWxlZ2F0b3IodHlwZTogdCkpCiAgICAgICAgPz8gcGFuaWMoImNhcGFiaWxpdHkgbm90IGZvdW5kIikKICAgIAogICAgYXNzZXJ0KGNhcC5nZXRUeXBlKCkgPT0gdCwgbWVzc2FnZTogIm1pc21hdGNoZWQgY2FwYWJpbGl0eSB0eXBlcyIpCn0=",
              "getExamplenftCollectionFromDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RXhhbXBsZW5mdENvbGxlY3Rpb25Gcm9tRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg4OTIwZmZkM2Q4NzY4ZGFhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzLCBpc1B1YmxpYzogQm9vbCk6IEJvb2wgewogICAgbGV0IG0gPSBnZXRBdXRoQWNjb3VudDxhdXRoKFN0b3JhZ2UpICZBY2NvdW50PihwYXJlbnQpLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICBsZXQgYWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkKICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQgaW4gbWFuYWdlciIpCgogICAgbGV0IHQgPSBUeXBlPENhcGFiaWxpdHk8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4+KCkKCiAgICBsZXQgY2FwID0gKGlzUHVibGljID8gYWNjdC5nZXRQdWJsaWNDYXBGcm9tRGVsZWdhdG9yKHR5cGU6IHQpIDogYWNjdC5nZXRQcml2YXRlQ2FwRnJvbURlbGVnYXRvcih0eXBlOiB0KSkKICAgICAgICA/PyBwYW5pYygiY2FwYWJpbGl0eSBub3QgZm91bmQiKQogICAgCiAgICBhc3NlcnQoY2FwLmdldFR5cGUoKSA9PSB0LCBtZXNzYWdlOiAibWlzbWF0Y2hlZCBjYXBhYmlsaXR5IHR5cGVzIikKCiAgICByZXR1cm4gY2FwLmdldFR5cGUoKSA9PSB0Cn0=",
              "publishToParent": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcHVibGlzaFRvUGFyZW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGYWN0b3J5IGZyb20gMHhDYXBhYmlsaXR5RmFjdG9yeQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgppbXBvcnQgQ2FwYWJpbGl0eURlbGVnYXRvciBmcm9tIDB4Q2FwYWJpbGl0eURlbGVnYXRvcgoKdHJhbnNhY3Rpb24ocGFyZW50OiBBZGRyZXNzLCBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywgZmlsdGVyQWRkcmVzczogQWRkcmVzcykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IG93bmVkID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IGZhY3RvcnkgPSBnZXRBY2NvdW50KGZhY3RvcnlBZGRyZXNzKS5jYXBhYmlsaXRpZXMuZ2V0PCZDYXBhYmlsaXR5RmFjdG9yeS5NYW5hZ2VyPihDYXBhYmlsaXR5RmFjdG9yeS5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmYWN0b3J5LmNoZWNrKCksIG1lc3NhZ2U6ICJmYWN0b3J5IGFkZHJlc3MgaXMgbm90IGNvbmZpZ3VyZWQgcHJvcGVybHkiKQoKICAgICAgICBsZXQgZmlsdGVyID0gZ2V0QWNjb3VudChmaWx0ZXJBZGRyZXNzKS5jYXBhYmlsaXRpZXMuZ2V0PCZ7Q2FwYWJpbGl0eUZpbHRlci5GaWx0ZXJ9PihDYXBhYmlsaXR5RmlsdGVyLlB1YmxpY1BhdGgpCiAgICAgICAgYXNzZXJ0KGZpbHRlci5jaGVjaygpLCBtZXNzYWdlOiAiY2FwYWJpbGl0eSBmaWx0ZXIgaXMgbm90IGNvbmZpZ3VyZWQgcHJvcGVybHkiKQoKICAgICAgICBvd25lZC5wdWJsaXNoVG9QYXJlbnQocGFyZW50QWRkcmVzczogcGFyZW50LCBmYWN0b3J5OiBmYWN0b3J5LCBmaWx0ZXI6IGZpbHRlcikKICAgIH0KfQ==",
              "publishToParentTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcHVibGlzaFRvUGFyZW50VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgI2FsbG93QWNjb3VudExpbmtpbmcKCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmFjdG9yeSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQppbXBvcnQgQ2FwYWJpbGl0eURlbGVnYXRvciBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQoKCnRyYW5zYWN0aW9uKHBhcmVudDogQWRkcmVzcywgZmFjdG9yeUFkZHJlc3M6IEFkZHJlc3MsIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBvd25lZCA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCgogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgb3duZWQucHVibGlzaFRvUGFyZW50KHBhcmVudEFkZHJlc3M6IHBhcmVudCwgZmFjdG9yeTogZmFjdG9yeSwgZmlsdGVyOiBmaWx0ZXIpCiAgICB9Cn0=",
              "redeemAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVkZWVtQWNjb3VudCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4Vmlld1Jlc29sdmVyCgppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4Q2FwYWJpbGl0eUZpbHRlcgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyZXNzOiBBZGRyZXNzLCBmaWx0ZXJBZGRyZXNzOiBBZGRyZXNzPywgZmlsdGVyUGF0aDogUHVibGljUGF0aD8pIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMsIEluYm94KSAmQWNjb3VudCkgewogICAgICAgIHZhciBmaWx0ZXI6IENhcGFiaWxpdHk8JntDYXBhYmlsaXR5RmlsdGVyLkZpbHRlcn0+PyA9IG5pbAogICAgICAgIGlmIGZpbHRlckFkZHJlc3MgIT0gbmlsICYmIGZpbHRlclBhdGggIT0gbmlsIHsKICAgICAgICAgICAgZmlsdGVyID0gZ2V0QWNjb3VudChmaWx0ZXJBZGRyZXNzISkuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oZmlsdGVyUGF0aCEpCiAgICAgICAgfQoKICAgICAgICBpZiBhY2N0LnN0b3JhZ2UuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgbSA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU1hbmFnZXIoZmlsdGVyOiBmaWx0ZXIpCiAgICAgICAgICAgIGFjY3Quc3RvcmFnZS5zYXZlKDwtIG0sIHRvOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKCiAgICAgICAgICAgIGZvciBjIGluIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuZ2V0Q29udHJvbGxlcnMoZm9yUGF0aDogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgICAgIGMuZGVsZXRlKCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY1BhdGgpCgogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0h5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY30+KEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgICAgIGF0OiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQdWJsaWNQYXRoCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJntIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQcml2YXRlLCBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJQdWJsaWN9PihIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICB9CgogICAgICAgIGxldCBpbmJveE5hbWUgPSBIeWJyaWRDdXN0b2R5LmdldENoaWxkQWNjb3VudElkZW50aWZpZXIoYWNjdC5hZGRyZXNzKQogICAgICAgIGxldCBjYXAgPSBhY2N0LmluYm94LmNsYWltPGF1dGgoSHlicmlkQ3VzdG9keS5DaGlsZCkgJntIeWJyaWRDdXN0b2R5LkFjY291bnRQcml2YXRlLCBIeWJyaWRDdXN0b2R5LkFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KGluYm94TmFtZSwgcHJvdmlkZXI6IGNoaWxkQWRkcmVzcykKICAgICAgICAgICAgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgY2FwIG5vdCBmb3VuZCIpCgogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm8gZm91bmQiKQoKICAgICAgICBtYW5hZ2VyLmFkZEFjY291bnQoY2FwOiBjYXApCiAgICB9Cn0=",
              "redeemAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVkZWVtQWNjb3VudFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKCgp0cmFuc2FjdGlvbihjaGlsZEFkZHJlc3M6IEFkZHJlc3MsIGZpbHRlckFkZHJlc3M6IEFkZHJlc3M/LCBmaWx0ZXJQYXRoOiBQdWJsaWNQYXRoPykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcywgSW5ib3gpICZBY2NvdW50KSB7CiAgICAgICAgdmFyIGZpbHRlcjogQ2FwYWJpbGl0eTwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4/ID0gbmlsCiAgICAgICAgaWYgZmlsdGVyQWRkcmVzcyAhPSBuaWwgJiYgZmlsdGVyUGF0aCAhPSBuaWwgewogICAgICAgICAgICBmaWx0ZXIgPSBnZXRBY2NvdW50KGZpbHRlckFkZHJlc3MhKS5jYXBhYmlsaXRpZXMuZ2V0PCZ7Q2FwYWJpbGl0eUZpbHRlci5GaWx0ZXJ9PihmaWx0ZXJQYXRoISkKICAgICAgICB9CgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBtIDwtIEh5YnJpZEN1c3RvZHkuY3JlYXRlTWFuYWdlcihmaWx0ZXI6IGZpbHRlcikKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gbSwgdG86IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQoKICAgICAgICAgICAgZm9yIGMgaW4gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgewogICAgICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgICAgICB9CgogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy51bnB1Ymxpc2goSHlicmlkQ3VzdG9keS5NYW5hZ2VyUHVibGljUGF0aCkKCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5NYW5hZ2VyUHVibGljfT4oSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpLAogICAgICAgICAgICAgICAgYXQ6IEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY1BhdGgKICAgICAgICAgICAgKQoKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAme0h5YnJpZEN1c3RvZHkuTWFuYWdlclByaXZhdGUsIEh5YnJpZEN1c3RvZHkuTWFuYWdlclB1YmxpY30+KEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IGluYm94TmFtZSA9IEh5YnJpZEN1c3RvZHkuZ2V0Q2hpbGRBY2NvdW50SWRlbnRpZmllcihhY2N0LmFkZHJlc3MpCiAgICAgICAgbGV0IGNhcCA9IGFjY3QuaW5ib3guY2xhaW08YXV0aChIeWJyaWRDdXN0b2R5LkNoaWxkKSAme0h5YnJpZEN1c3RvZHkuQWNjb3VudFByaXZhdGUsIEh5YnJpZEN1c3RvZHkuQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oaW5ib3hOYW1lLCBwcm92aWRlcjogY2hpbGRBZGRyZXNzKQogICAgICAgICAgICA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBjYXAgbm90IGZvdW5kIikKCiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBubyBmb3VuZCIpCgogICAgICAgIG1hbmFnZXIuYWRkQWNjb3VudChjYXA6IGNhcCkKICAgIH0KfQ==",
              "sendChildFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CgovLyBIQy1vd25lZCBpbXBvcnRzCmltcG9ydCBDYXBhYmlsaXR5RmFjdG9yeSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKCnRyYW5zYWN0aW9uKGFkZHJlc3M6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIGFtb3VudDogVUZpeDY0ICkgewoKICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgbGV0IHBheW1lbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogIGxldCB2YXVsdERhdGE6IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhCgogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgIAogICAgICBzZWxmLnZhdWx0RGF0YSA9IDxUb2tlbj4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxUb2tlbj4gIikKCiAgICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogc2VsZi52YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAgIAogICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgIAogICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICBzZWxmLnBheW1lbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkKICB9CgogIGV4ZWN1dGUgewoKICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQocmVjZWl2ZXIpCgogICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudC5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHNlbGYudmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnBheW1lbnRWYXVsdCkKICB9Cn0KIA==",
              "sendChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CgppbXBvcnQgRXhhbXBsZVRva2VuIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogIGxldCBwYXltZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAKICAgICAgc2VsZi52YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVUb2tlbiIpCgogICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAKICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgfQoKICBleGVjdXRlIHsKCiAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQoKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgfQp9CiA=",
              "sendChildFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogIGxldCBwYXltZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAKICAgICAgc2VsZi52YXVsdERhdGEgPSA8VG9rZW4+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8VG9rZW4+ICIpCgogICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IHNlbGYudmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAKICAgICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgfQoKICBleGVjdXRlIHsKCiAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2VpdmVyKQoKICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgfQp9CiA=",
              "sendChildFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcmVjZWl2ZXI6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgYW1vdW50OiBVRml4NjQgKSB7CgogIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJyZWQKICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgbGV0IHZhdWx0RGF0YTogRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGEKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogYWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgCiAgICAgIHNlbGYudmF1bHREYXRhID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQoKICAgICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBzZWxmLnZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgICAgCiAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgICAgCiAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgICAgbGV0IHZhdWx0UmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgIHNlbGYucGF5bWVudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogIH0KCiAgZXhlY3V0ZSB7CgogICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNlaXZlcikKCiAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50LmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc2VsZi52YXVsdERhdGEucmVjZWl2ZXJQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQoKICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYucGF5bWVudFZhdWx0KQogIH0KfQog",
              "sendChildFTWithParent": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlRXaXRoUGFyZW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCwgdG86IEFkZHJlc3MsIGNoaWxkOiBBZGRyZXNzKSB7CgogICAgLy8gVGhlIFZhdWx0IHJlc291cmNlIHRoYXQgaG9sZHMgdGhlIHRva2VucyB0aGF0IGFyZSBiZWluZyB0cmFuc2ZlcnJlZAogICAgbGV0IHBheW1lbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQogICAgbGV0IHZhdWx0RGF0YTogRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGEKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgICAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgICAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgc2VsZi52YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKCiAgICAgICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgICAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogc2VsZi52YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgICAgICAKICAgICAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICAgICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgICAgIAogICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBwcm92aWRlckNhcC5ib3Jyb3coKSEKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYucGF5bWVudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewoKICAgICAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHRvKQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50LmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oc2VsZi52YXVsdERhdGEucmVjZWl2ZXJQYXRoKSEuYm9ycm93KCkKCQkJPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgICAgIC8vIERlcG9zaXQgdGhlIHdpdGhkcmF3biB0b2tlbnMgaW4gdGhlIHJlY2lwaWVudCdzIHJlY2VpdmVyCiAgICAgICAgcmVjZWl2ZXJSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYucGF5bWVudFZhdWx0KQogICAgfQp9CiA=",
              "sendChildFTWithParentTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkRlRXaXRoUGFyZW50VGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cyBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0LCB0bzogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVycmVkCiAgICBsZXQgcGF5bWVudFZhdWx0OiBAe0Z1bmdpYmxlVG9rZW4uVmF1bHR9CiAgICBsZXQgdmF1bHREYXRhOiBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZCkgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICBzZWxmLnZhdWx0RGF0YSA9IEV4YW1wbGVUb2tlbi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQoKICAgICAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICAgICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBzZWxmLnZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgICAgIAogICAgICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgICAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAgICAgCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBjaGlsZCdzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5wYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudCA9IGdldEFjY291bnQodG8pCgogICAgICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgICAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnQuY2FwYWJpbGl0aWVzLmdldDwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihzZWxmLnZhdWx0RGF0YS5yZWNlaXZlclBhdGgpIS5ib3Jyb3coKQoJCQk/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5wYXltZW50VmF1bHQpCiAgICB9Cn0KIA==",
              "sendChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+LnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxORlQ+ICIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgbGV0IHJlY2VpdmVyQWNjID0gZ2V0QWNjb3VudChyZWNlaXZlcikKICAgIGxldCByZWNlaXZlclJlZiA9ICByZWNlaXZlckFjYy5jYXBhYmlsaXRpZXMuZ2V0PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KGNvbGxlY3Rpb25EYXRhLnB1YmxpY1BhdGgpIS5ib3Jyb3coKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVG9DaGlsZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIHJlY2VpdmVyOiBBZGRyZXNzLCBpZGVudGlmaWVyOiBTdHJpbmcsIGlkOiBVSW50NjQpIHsKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIAogICAgbGV0IGNvbGxlY3Rpb25EYXRhID0gPE5GVD4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgPE5GVD4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgCiAgICBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiBjb250cm9sbGVySUQsIHR5cGU6IGNhcFR5cGUpID8/IHBhbmljKCJubyBjYXAgZm91bmQiKQogICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4KICAgIGFzc2VydChwcm92aWRlckNhcC5jaGVjaygpLCBtZXNzYWdlOiAiaW52YWxpZCBwcm92aWRlciBjYXBhYmlsaXR5IikKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgoKICAgIGxldCByZWNlaXZlckNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiByZWNlaXZlcikgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgIGxldCByZWNlaXZlckNvbnRyb2xsZXJJZCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogY29sbGVjdGlvbkRhdGEuc3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm5vIGNvbnRyb2xsZXIgZm91bmQgZm9yIGNhcFR5cGUiKQogICAgbGV0IHJlY2VpdmVyQ2FwID0gcmVjZWl2ZXJDaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IHJlY2VpdmVyQ29udHJvbGxlcklkLCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikgCiAgICBsZXQgcHVibGljQ2FwID0gcmVjZWl2ZXJDYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgbGV0IHJlY2VpdmVyUmVmID0gIHB1YmxpY0NhcC5ib3Jyb3coKSEKCiAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogaWQpCiAgICAKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "sendChildNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2VuZENoaWxkTkZUVG9DaGlsZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24oY2hpbGRBZGRyOiBBZGRyZXNzLCByZWNlaXZlcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKCiAgICBsZXQgcmVjZWl2ZXJDaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogcmVjZWl2ZXIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICBsZXQgcmVjZWl2ZXJDb250cm9sbGVySWQgPSByZWNlaXZlckNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIGxldCByZWNlaXZlckNhcCA9IHJlY2VpdmVyQ2hpbGRBY2N0LmdldENhcGFiaWxpdHkoY29udHJvbGxlcklEOiByZWNlaXZlckNvbnRyb2xsZXJJZCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpIAogICAgbGV0IHB1YmxpY0NhcCA9IHJlY2VpdmVyQ2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4KICAgIGxldCByZWNlaXZlclJlZiA9ICBwdWJsaWNDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQogICAgCiAgICByZWNlaXZlclJlZi5kZXBvc2l0KHRva2VuOiA8LSBuZnQpCiAgfQp9",
              "setupOwnedAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICNhbGxvd0FjY291bnRMaW5raW5nCgppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKLy8vIFRoaXMgdHJhbnNhY3Rpb24gY29uZmlndXJlcyBhbiBPd25lZEFjY291bnQgaW4gdGhlIHNpZ25lciBpZiBuZWVkZWQgYW5kIGNvbmZpZ3VyZXMgaXRzIENhcGFiaWxpdGllcyBwZXIKLy8vIEh5YnJpZEN1c3RvZHkncyBpbnRlbmRlZCBkZXNpZ24uIElmIERpc3BsYXkgdmFsdWVzIGFyZSBzcGVjaWZpZWQgKGFzIHJlY29tbWVuZGVkKSwgdGhleSB3aWxsIGJlIHNldCBvbiB0aGUKLy8vIHNpZ25lcidzIE93bmVkQWNjb3VudC4KLy8vCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZz8sIGRlc2M6IFN0cmluZz8sIHRodW1ibmFpbFVSTDogU3RyaW5nPykgewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgYWNjdENhcCA9IGFjY3QuY2FwYWJpbGl0aWVzLmFjY291bnQuaXNzdWU8YXV0aChTdG9yYWdlLCBDb250cmFjdHMsIEtleXMsIEluYm94LCBDYXBhYmlsaXRpZXMpICZBY2NvdW50PigpCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBsZXQgb3duZWRBY2NvdW50IDwtIEh5YnJpZEN1c3RvZHkuY3JlYXRlT3duZWRBY2NvdW50KGFjY3Q6IGFjY3RDYXApCiAgICAgICAgICAgIGFjY3Quc3RvcmFnZS5zYXZlKDwtb3duZWRBY2NvdW50LCB0bzogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICB9CgogICAgICAgIGxldCBvd25lZCA9IGFjY3Quc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk93bmVyKSAmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJvd25lZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgLy8gU2V0IHRoZSBkaXNwbGF5IG1ldGFkYXRhIGZvciB0aGUgT3duZWRBY2NvdW50CiAgICAgICAgaWYgbmFtZSAhPSBuaWwgJiYgZGVzYyAhPSBuaWwgJiYgdGh1bWJuYWlsVVJMICE9IG5pbCB7CiAgICAgICAgICAgIGxldCB0aHVtYm5haWwgPSBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsVVJMISkKICAgICAgICAgICAgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkobmFtZTogbmFtZSEsIGRlc2NyaXB0aW9uOiBkZXNjISwgdGh1bWJuYWlsOiB0aHVtYm5haWwpCiAgICAgICAgICAgIG93bmVkLnNldERpc3BsYXkoZGlzcGxheSkKICAgICAgICB9CgogICAgICAgIC8vIGNoZWNrIHRoYXQgcGF0aHMgYXJlIGFsbCBjb25maWd1cmVkIHByb3Blcmx5CiAgICAgICAgZm9yIGMgaW4gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5nZXRDb250cm9sbGVycyhmb3JQYXRoOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKSB7CiAgICAgICAgICAgIGMuZGVsZXRlKCkKICAgICAgICB9CgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQogICAgfQp9CiA=",
              "setupOwnedAccountAndPublishToParent": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRBbmRQdWJsaXNoVG9QYXJlbnQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICNhbGxvd0FjY291bnRMaW5raW5nCgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgVmlld1Jlc29sdmVyIGZyb20gMHhWaWV3UmVzb2x2ZXIKCgppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweENhcGFiaWxpdHlGYWN0b3J5CmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHhDYXBhYmlsaXR5RmlsdGVyCmltcG9ydCBDYXBhYmlsaXR5RGVsZWdhdG9yIGZyb20gMHhDYXBhYmlsaXR5RGVsZWdhdG9yCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGNvbmZpZ3VyZXMgYW4gT3duZWRBY2NvdW50IGluIHRoZSBzaWduZXIgaWYgbmVlZGVkLCBhbmQgcHJvY2VlZHMgdG8gY3JlYXRlIGEgQ2hpbGRBY2NvdW50IAovLy8gdXNpbmcgQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlciBhbmQgQ2FwYWJpbGl0eUZpbHRlci5GaWx0ZXIgQ2FwYWJpbGl0aWVzIGZyb20gdGhlIGdpdmVuIGFkZHJlc3Nlcy4gQQovLy8gQ2FwYWJpbGl0eSBvbiB0aGUgQ2hpbGRBY2NvdW50IGlzIHRoZW4gcHVibGlzaGVkIHRvIHRoZSBzcGVjaWZpZWQgcGFyZW50IGFjY291bnQuIAovLy8KdHJhbnNhY3Rpb24oCiAgICBwYXJlbnQ6IEFkZHJlc3MsCiAgICBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywKICAgIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MsCiAgICBuYW1lOiBTdHJpbmcsCiAgICBkZXNjOiBTdHJpbmcsCiAgICB0aHVtYm5haWxVUkw6IFN0cmluZwopIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgLy8gQ29uZmlndXJlIE93bmVkQWNjb3VudCBpZiBpdCBkb2Vzbid0IGV4aXN0CiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHZhciBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKICAgICAgICAgICAgbGV0IG93bmVkQWNjb3VudCA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU93bmVkQWNjb3VudChhY2N0OiBhY2N0Q2FwKQogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSg8LW93bmVkQWNjb3VudCwgdG86IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQoKICAgICAgICBsZXQgb3duZWQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5Pd25lcikgJkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygib3duZWQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgICAgIC8vIFNldCB0aGUgZGlzcGxheSBtZXRhZGF0YSBmb3IgdGhlIE93bmVkQWNjb3VudAogICAgICAgIGlmIG5hbWUgIT0gbmlsICYmIGRlc2MgIT0gbmlsICYmIHRodW1ibmFpbFVSTCAhPSBuaWwgewogICAgICAgICAgICBsZXQgdGh1bWJuYWlsID0gTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6IHRodW1ibmFpbFVSTCEpCiAgICAgICAgICAgIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5EaXNwbGF5KG5hbWU6IG5hbWUhLCBkZXNjcmlwdGlvbjogZGVzYyEsIHRodW1ibmFpbDogdGh1bWJuYWlsKQogICAgICAgICAgICBvd25lZC5zZXREaXNwbGF5KGRpc3BsYXkpCiAgICAgICAgfQoKICAgICAgICAvLyBHZXQgQ2FwYWJpbGl0eUZhY3RvcnkgJiBDYXBhYmlsaXR5RmlsdGVyIENhcGFiaWxpdGllcwogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgLy8gRmluYWxseSBwdWJsaXNoIGEgQ2hpbGRBY2NvdW50IGNhcGFiaWxpdHkgb24gdGhlIHNpZ25pbmcgYWNjb3VudCB0byB0aGUgc3BlY2lmaWVkIHBhcmVudAogICAgICAgIG93bmVkLnB1Ymxpc2hUb1BhcmVudChwYXJlbnRBZGRyZXNzOiBwYXJlbnQsIGZhY3Rvcnk6IGZhY3RvcnksIGZpbHRlcjogZmlsdGVyKQogICAgfQp9",
              "setupOwnedAccountAndPublishToParentTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRBbmRQdWJsaXNoVG9QYXJlbnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGYWN0b3J5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RGVsZWdhdG9yIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCi8vLyBUaGlzIHRyYW5zYWN0aW9uIGNvbmZpZ3VyZXMgYW4gT3duZWRBY2NvdW50IGluIHRoZSBzaWduZXIgaWYgbmVlZGVkLCBhbmQgcHJvY2VlZHMgdG8gY3JlYXRlIGEgQ2hpbGRBY2NvdW50IAovLy8gdXNpbmcgQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlciBhbmQgQ2FwYWJpbGl0eUZpbHRlci5GaWx0ZXIgQ2FwYWJpbGl0aWVzIGZyb20gdGhlIGdpdmVuIGFkZHJlc3Nlcy4gQQovLy8gQ2FwYWJpbGl0eSBvbiB0aGUgQ2hpbGRBY2NvdW50IGlzIHRoZW4gcHVibGlzaGVkIHRvIHRoZSBzcGVjaWZpZWQgcGFyZW50IGFjY291bnQuIAovLy8KdHJhbnNhY3Rpb24oCiAgICBwYXJlbnQ6IEFkZHJlc3MsCiAgICBmYWN0b3J5QWRkcmVzczogQWRkcmVzcywKICAgIGZpbHRlckFkZHJlc3M6IEFkZHJlc3MsCiAgICBuYW1lOiBTdHJpbmcsCiAgICBkZXNjOiBTdHJpbmcsCiAgICB0aHVtYm5haWxVUkw6IFN0cmluZwopIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgLy8gQ29uZmlndXJlIE93bmVkQWNjb3VudCBpZiBpdCBkb2Vzbid0IGV4aXN0CiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIHZhciBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKICAgICAgICAgICAgbGV0IG93bmVkQWNjb3VudCA8LSBIeWJyaWRDdXN0b2R5LmNyZWF0ZU93bmVkQWNjb3VudChhY2N0OiBhY2N0Q2FwKQogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSg8LW93bmVkQWNjb3VudCwgdG86IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5LkJvcnJvd2FibGVBY2NvdW50LCBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKAogICAgICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7SHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWMsIFZpZXdSZXNvbHZlci5SZXNvbHZlcn0+KEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpLAogICAgICAgICAgICBhdDogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRQdWJsaWNQYXRoCiAgICAgICAgKQoKICAgICAgICBsZXQgb3duZWQgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5Pd25lcikgJkh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50Pihmcm9tOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygib3duZWQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIAogICAgICAgIC8vIFNldCB0aGUgZGlzcGxheSBtZXRhZGF0YSBmb3IgdGhlIE93bmVkQWNjb3VudAogICAgICAgIGlmIG5hbWUgIT0gbmlsICYmIGRlc2MgIT0gbmlsICYmIHRodW1ibmFpbFVSTCAhPSBuaWwgewogICAgICAgICAgICBsZXQgdGh1bWJuYWlsID0gTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6IHRodW1ibmFpbFVSTCEpCiAgICAgICAgICAgIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5EaXNwbGF5KG5hbWU6IG5hbWUhLCBkZXNjcmlwdGlvbjogZGVzYyEsIHRodW1ibmFpbDogdGh1bWJuYWlsKQogICAgICAgICAgICBvd25lZC5zZXREaXNwbGF5KGRpc3BsYXkpCiAgICAgICAgfQoKICAgICAgICAvLyBHZXQgQ2FwYWJpbGl0eUZhY3RvcnkgJiBDYXBhYmlsaXR5RmlsdGVyIENhcGFiaWxpdGllcwogICAgICAgIGxldCBmYWN0b3J5ID0gZ2V0QWNjb3VudChmYWN0b3J5QWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwmQ2FwYWJpbGl0eUZhY3RvcnkuTWFuYWdlcj4oQ2FwYWJpbGl0eUZhY3RvcnkuUHVibGljUGF0aCkKICAgICAgICBhc3NlcnQoZmFjdG9yeS5jaGVjaygpLCBtZXNzYWdlOiAiZmFjdG9yeSBhZGRyZXNzIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgbGV0IGZpbHRlciA9IGdldEFjY291bnQoZmlsdGVyQWRkcmVzcykuY2FwYWJpbGl0aWVzLmdldDwme0NhcGFiaWxpdHlGaWx0ZXIuRmlsdGVyfT4oQ2FwYWJpbGl0eUZpbHRlci5QdWJsaWNQYXRoKQogICAgICAgIGFzc2VydChmaWx0ZXIuY2hlY2soKSwgbWVzc2FnZTogImNhcGFiaWxpdHkgZmlsdGVyIGlzIG5vdCBjb25maWd1cmVkIHByb3Blcmx5IikKCiAgICAgICAgLy8gRmluYWxseSBwdWJsaXNoIGEgQ2hpbGRBY2NvdW50IGNhcGFiaWxpdHkgb24gdGhlIHNpZ25pbmcgYWNjb3VudCB0byB0aGUgc3BlY2lmaWVkIHBhcmVudAogICAgICAgIG93bmVkLnB1Ymxpc2hUb1BhcmVudChwYXJlbnRBZGRyZXNzOiBwYXJlbnQsIGZhY3Rvcnk6IGZhY3RvcnksIGZpbHRlcjogZmlsdGVyKQogICAgfQp9",
              "setupOwnedAccountTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBPd25lZEFjY291bnRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAjYWxsb3dBY2NvdW50TGlua2luZwoKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4MjhiODFmNTg4MGQ1NTU0ZQovLy8gVGhpcyB0cmFuc2FjdGlvbiBjb25maWd1cmVzIGFuIE93bmVkQWNjb3VudCBpbiB0aGUgc2lnbmVyIGlmIG5lZWRlZCBhbmQgY29uZmlndXJlcyBpdHMgQ2FwYWJpbGl0aWVzIHBlcgovLy8gSHlicmlkQ3VzdG9keSdzIGludGVuZGVkIGRlc2lnbi4gSWYgRGlzcGxheSB2YWx1ZXMgYXJlIHNwZWNpZmllZCAoYXMgcmVjb21tZW5kZWQpLCB0aGV5IHdpbGwgYmUgc2V0IG9uIHRoZQovLy8gc2lnbmVyJ3MgT3duZWRBY2NvdW50LgovLy8KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCBkZXNjOiBTdHJpbmcsIHRodW1ibmFpbFVSTDogU3RyaW5nKSB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCBhY2N0Q2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuYWNjb3VudC5pc3N1ZTxhdXRoKFN0b3JhZ2UsIENvbnRyYWN0cywgS2V5cywgSW5ib3gsIENhcGFiaWxpdGllcykgJkFjY291bnQ+KCkKCiAgICAgICAgaWYgYWNjdC5zdG9yYWdlLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnQ+KGZyb206IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBvd25lZEFjY291bnQgPC0gSHlicmlkQ3VzdG9keS5jcmVhdGVPd25lZEFjY291bnQoYWNjdDogYWNjdENhcCkKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC1vd25lZEFjY291bnQsIHRvOiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgbGV0IG93bmVkID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuT3duZXIpICZIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudD4oZnJvbTogSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm93bmVkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAKICAgICAgICAvLyBTZXQgdGhlIGRpc3BsYXkgbWV0YWRhdGEgZm9yIHRoZSBPd25lZEFjY291bnQKICAgICAgICBpZiBuYW1lICE9IG5pbCAmJiBkZXNjICE9IG5pbCAmJiB0aHVtYm5haWxVUkwgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IHRodW1ibmFpbCA9IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiB0aHVtYm5haWxVUkwhKQogICAgICAgICAgICBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuRGlzcGxheShuYW1lOiBuYW1lISwgZGVzY3JpcHRpb246IGRlc2MhLCB0aHVtYm5haWw6IHRodW1ibmFpbCkKICAgICAgICAgICAgb3duZWQuc2V0RGlzcGxheShkaXNwbGF5KQogICAgICAgIH0KCiAgICAgICAgLy8gY2hlY2sgdGhhdCBwYXRocyBhcmUgYWxsIGNvbmZpZ3VyZWQgcHJvcGVybHkKICAgICAgICBmb3IgYyBpbiBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmdldENvbnRyb2xsZXJzKGZvclBhdGg6IEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50U3RvcmFnZVBhdGgpIHsKICAgICAgICAgICAgYy5kZWxldGUoKQogICAgICAgIH0KCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0h5YnJpZEN1c3RvZHkuQm9ycm93YWJsZUFjY291bnQsIEh5YnJpZEN1c3RvZHkuT3duZWRBY2NvdW50UHVibGljLCBWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJ9PihIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFN0b3JhZ2VQYXRoKQogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpYywgVmlld1Jlc29sdmVyLlJlc29sdmVyfT4oSHlicmlkQ3VzdG9keS5Pd25lZEFjY291bnRTdG9yYWdlUGF0aCksCiAgICAgICAgICAgIGF0OiBIeWJyaWRDdXN0b2R5Lk93bmVkQWNjb3VudFB1YmxpY1BhdGgKICAgICAgICApCiAgICB9Cn0KIA==",
              "transferChildFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZEZUIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKLy8gSEMtb3duZWQgaW1wb3J0cwppbXBvcnQgQ2FwYWJpbGl0eUZhY3RvcnkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgdmF1bHREYXRhID0gPFRva2VuPi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIDxUb2tlbj4gIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBwYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1wYXltZW50VmF1bHQpCiAgfQp9",
              "transferChildFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZEZUVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKCgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgdmF1bHREYXRhID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSBhcyEgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKCiAgICAvL2dldCBGdCBjYXAgZnJvbSBjaGlsZCBhY2NvdW50CiAgICBsZXQgY2FwVHlwZSA9IFR5cGU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpCiAgICBsZXQgY29udHJvbGxlcklEID0gY2hpbGRBY2N0LmdldENvbnRyb2xsZXJJREZvclR5cGUodHlwZTogY2FwVHlwZSwgZm9yUGF0aDogdmF1bHREYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCB2YXVsdFJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBwYXltZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSAgc2lnbmVyLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odmF1bHREYXRhLnJlY2VpdmVyUGF0aCkhLmJvcnJvdygpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWNlaXZlciByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFZhdWx0IikKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1wYXltZW50VmF1bHQpCiAgfQp9",
              "transferChildNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKdHJhbnNhY3Rpb24oYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCAgaWQ6IFVJbnQ2NCApIHsKCiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSA8TkZUPi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8TkZUPiAiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PgogICAgYXNzZXJ0KHByb3ZpZGVyQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIGNoaWxkJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHByb3ZpZGVyQ2FwLmJvcnJvdygpIQoKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkKICAgIGxldCByZWNlaXZlclJlZiA9ICBzaWduZXIuY2FwYWJpbGl0aWVzLmdldDwme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogIH0KfQ==",
              "transferChildNFTTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJDaGlsZE5GVFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBDYXBhYmlsaXR5RmlsdGVyIGZyb20gMHgyOGI4MWY1ODgwZDU1NTRlCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKCgp0cmFuc2FjdGlvbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsICBpZDogVUludDY0ICkgewoKICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgLy8gc2lnbmVyIGlzIHRoZSBwYXJlbnQgYWNjb3VudAogICAgLy8gZ2V0IHRoZSBtYW5hZ2VyIHJlc291cmNlIGFuZCBib3Jyb3cgY2hpbGRBY2NvdW50CiAgICBsZXQgbSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEh5YnJpZEN1c3RvZHkuTWFuYWdlKSAmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICBsZXQgY2hpbGRBY2N0ID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkgYXMhIE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE/CiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZU5GVCIpCgogICAgLy9nZXQgRnQgY2FwIGZyb20gY2hpbGQgYWNjb3VudAogICAgbGV0IGNhcFR5cGUgPSBUeXBlPGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKQogICAgbGV0IGNvbnRyb2xsZXJJRCA9IGNoaWxkQWNjdC5nZXRDb250cm9sbGVySURGb3JUeXBlKHR5cGU6IGNhcFR5cGUsIGZvclBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJubyBjb250cm9sbGVyIGZvdW5kIGZvciBjYXBUeXBlIikKICAgIAogICAgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KGNvbnRyb2xsZXJJRDogY29udHJvbGxlcklELCB0eXBlOiBjYXBUeXBlKSA/PyBwYW5pYygibm8gY2FwIGZvdW5kIikKICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+CiAgICBhc3NlcnQocHJvdmlkZXJDYXAuY2hlY2soKSwgbWVzc2FnZTogImludmFsaWQgcHJvdmlkZXIgY2FwYWJpbGl0eSIpCiAgICAKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgY2hpbGQncyBzdG9yZWQgdmF1bHQKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gcHJvdmlkZXJDYXAuYm9ycm93KCkhCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IGlkKQoKICAgIGxldCByZWNlaXZlclJlZiA9ICBzaWduZXIuY2FwYWJpbGl0aWVzLmdldDwme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pihjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoKSEuYm9ycm93KCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgVmF1bHQiKQogICAgcmVjZWl2ZXJSZWYuZGVwb3NpdCh0b2tlbjogPC0gbmZ0KQogIH0KfQ==",
              "transferNFTToChild": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJORlRUb0NoaWxkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgQ2FwYWJpbGl0eUZpbHRlciBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCnRyYW5zYWN0aW9uKGNoaWxkQWRkcjogQWRkcmVzcywgaWRlbnRpZmllcjogU3RyaW5nLCBpZDogVUludDY0KSB7CiAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgIC8vIHNpZ25lciBpcyB0aGUgcGFyZW50IGFjY291bnQKICAgIC8vIGdldCB0aGUgbWFuYWdlciByZXNvdXJjZSBhbmQgYm9ycm93IGNoaWxkQWNjb3VudAogICAgbGV0IG0gPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChIeWJyaWRDdXN0b2R5Lk1hbmFnZSkgJkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQogICAgbGV0IGNoaWxkQWNjdCA9IG0uYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHIpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IDxORlQ+IC5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPigpKSBhcyEgTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT8KICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciA8TkZUPiAiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gcGFyZW50UmVmIS53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkhCiAgICAKICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "transferNFTToChildTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdHJhbnNmZXJORlRUb0NoaWxkVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IENhcGFiaWxpdHlGaWx0ZXIgZnJvbSAweDI4YjgxZjU4ODBkNTU1NGUKaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweDYzMWU4OGFlN2YxZDdjMjAKCmltcG9ydCBFeGFtcGxlTkZUIGZyb20gMHg5Zjc0OWFlMDQxNzI4N2NiCgp0cmFuc2FjdGlvbihjaGlsZEFkZHI6IEFkZHJlc3MsIGlkZW50aWZpZXI6IFN0cmluZywgaWQ6IFVJbnQ2NCkgewogIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAvLyBzaWduZXIgaXMgdGhlIHBhcmVudCBhY2NvdW50CiAgICAvLyBnZXQgdGhlIG1hbmFnZXIgcmVzb3VyY2UgYW5kIGJvcnJvdyBjaGlsZEFjY291bnQKICAgIGxldCBtID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoSHlicmlkQ3VzdG9keS5NYW5hZ2UpICZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKICAgIGxldCBjaGlsZEFjY3QgPSBtLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGRBZGRyKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgCiAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSBFeGFtcGxlTkZULnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRhdGE+KCkpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHRoZSB2YXVsdCBkYXRhIHZpZXcgZm9yIEV4YW1wbGVORlQiKQoKICAgIC8vZ2V0IEZ0IGNhcCBmcm9tIGNoaWxkIGFjY291bnQKICAgIGxldCBjYXBUeXBlID0gVHlwZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkKICAgIGxldCBjb250cm9sbGVySUQgPSBjaGlsZEFjY3QuZ2V0Q29udHJvbGxlcklERm9yVHlwZSh0eXBlOiBjYXBUeXBlLCBmb3JQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibm8gY29udHJvbGxlciBmb3VuZCBmb3IgY2FwVHlwZSIpCiAgICAKICAgIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShjb250cm9sbGVySUQ6IGNvbnRyb2xsZXJJRCwgdHlwZTogY2FwVHlwZSkgPz8gcGFuaWMoIm5vIGNhcCBmb3VuZCIpCiAgICBsZXQgY2hpbGRDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PgogICAgYXNzZXJ0KGNoaWxkQ2FwLmNoZWNrKCksIG1lc3NhZ2U6ICJpbnZhbGlkIHByb3ZpZGVyIGNhcGFiaWxpdHkiKQogICAgCiAgICBsZXQgcGFyZW50UmVmID0gIHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb20gOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCkhCiAgICBsZXQgY2hpbGRSZWYgPSBjaGlsZENhcC5ib3Jyb3coKSEKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIGxldCBuZnQgPC0gcGFyZW50UmVmIS53aXRoZHJhdyh3aXRoZHJhd0lEOiBpZCkhCiAgICAKICAgIGNoaWxkUmVmLmRlcG9zaXQodG9rZW46IDwtIG5mdCkKICB9Cn0=",
              "unlinkChildAccount": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdW5saW5rQ2hpbGRBY2NvdW50IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQoKdHJhbnNhY3Rpb24oY2hpbGQ6IEFkZHJlc3MpIHsKICAgIHByZXBhcmUgKGFjY3Q6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKICAgICAgICBtYW5hZ2VyLnJlbW92ZUNoaWxkKGFkZHI6IGNoaWxkKQogICAgfQp9"
            },
            "staking": {
              "checkSetup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tTZXR1cCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "checkSetupTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2hlY2tTZXR1cFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIC8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
              "closeStake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2xvc2VTdGFrZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4Rmxvd1N0YWtpbmdDb2xsZWN0aW9uCgovLyBDbG9zZXMgb3V0IGEgc3Rha2luZyBvYmplY3QgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLyBUaGlzIGRvZXMgbm90IHJlbW92ZSB0aGUgcmVjb3JkIGZyb20gdGhlIGlkZW50aXR5IHRhYmxlLAovLyBidXQgaXQgZG9lcyBtZWFuIHRoYXQgdGhlIGFjY291bnQgdGhhdCBjbG9zZXMgaXQgY2Fubm90IGV2ZXIgYWNjZXNzIGl0IGFnYWluCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8pIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5jbG9zZVN0YWtlKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICB9Cn0=",
              "closeStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY2xvc2VTdGFrZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vIENsb3NlcyBvdXQgYSBzdGFraW5nIG9iamVjdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vIFRoaXMgZG9lcyBub3QgcmVtb3ZlIHRoZSByZWNvcmQgZnJvbSB0aGUgaWRlbnRpdHkgdGFibGUsCi8vIGJ1dCBpdCBkb2VzIG1lYW4gdGhhdCB0aGUgYWNjb3VudCB0aGF0IGNsb3NlcyBpdCBjYW5ub3QgZXZlciBhY2Nlc3MgaXQgYWdhaW4KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPykgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLmNsb3NlU3Rha2Uobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgIH0KfQ==",
              "createDelegator": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlRGVsZWdhdG9yIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
              "createDelegatorTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlRGVsZWdhdG9yVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
              "createStake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlU3Rha2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIG5ldyB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBmcm9tIHRoZSBsb2NrZWQgdmF1bHQgYXJlIHVzZWQgZmlyc3QsIGlmIGl0IGV4aXN0cwovLy8gZm9sbG93ZWQgYnkgdGhlIHRva2VucyBmcm9tIHRoZSB1bmxvY2tlZCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlTmV3VG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "createStakeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgY3JlYXRlU3Rha2VUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCgovLy8gQ29tbWl0cyBuZXcgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgZnJvbSB0aGUgbG9ja2VkIHZhdWx0IGFyZSB1c2VkIGZpcnN0LCBpZiBpdCBleGlzdHMKLy8vIGZvbGxvd2VkIGJ5IHRoZSB0b2tlbnMgZnJvbSB0aGUgdW5sb2NrZWQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "getApr": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QXByIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getAprTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QXByVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
              "getApyWeekly": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QXB5V2Vla2x5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAqIDU0LjAgKiAoMS4wIC0gRmxvd0lEVGFibGVTdGFraW5nLmdldFJld2FyZEN1dFBlcmNlbnRhZ2UoKSkKICAgIHJldHVybiBhcHIKfQ==",
              "getDelegatesIndo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5kbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9Cg==",
              "getDelegatesInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
              "getDelegatesInfoArray": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mb0FycmF5IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKICAgICAgICAKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10gewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxEZWxlZ2F0b3JJbmZvKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
              "getDelegatesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdGVzSW5mb1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAovLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKLy8gaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKYWNjZXNzKGFsbCkgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9ySUQ6IFVJbnQzMgogICAgYWNjZXNzKGFsbCkgbGV0IG5vZGVJRDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKCiAgICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHJvbGU6IFVJbnQ4CiAgICBhY2Nlc3MoYWxsKSBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgYWNjZXNzKGFsbCkgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgaW5pdChkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbykgewogICAgICAgIHNlbGYuZGVsZWdhdG9ySUQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICAgICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JJbmZvLm5vZGVJRCkKICAgICAgICBzZWxmLmRlbGVnYXRlZE5vZGVJbmZvID0gbm9kZUluZm8KICAgICAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYucmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zID0gc2VsZi50b2tlbnNVbnN0YWtlZCArIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBkZWxlZ2F0b3JJRHM6IFtGbG93U3Rha2luZ0NvbGxlY3Rpb24uRGVsZWdhdG9ySURzXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXREZWxlZ2F0b3JJRHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBsZXQgZm9ybWF0dGVkRGVsZWdhdG9ySW5mbzoge1N0cmluZzoge1VJbnQzMjogRGVsZWdhdGVJbmZvfX0gPSB7fQoKICAgIGZvciBkZWxlZ2F0b3JJRCBpbiBkZWxlZ2F0b3JJRHMgewogICAgICAgIGlmIGxldCBfZm9ybWF0dGVkRGVsZWdhdG9ySW5mbyA9IGZvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlEXSB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQpCiAgICAgICAgICAgIF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvW2RlbGVnYXRvcklELmRlbGVnYXRvcklEXSA9IERlbGVnYXRlSW5mbyhkZWxlZ2F0b3JJbmZvOiBkZWxlZ2F0b3JJbmZvKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3JJbmZvOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQpCiAgICAgICAgICAgIGZvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9yTm9kZUlEXSA9IHsgZGVsZWdhdG9ySUQuZGVsZWdhdG9ySUQ6IERlbGVnYXRlSW5mbyhkZWxlZ2F0b3JJbmZvOiBkZWxlZ2F0b3JJbmZvKX0KICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZvcm1hdHRlZERlbGVnYXRvckluZm8KfQ==",
              "getDelegatorInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdG9ySW5mbyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCn0=",
              "getDelegatorInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RGVsZWdhdG9ySW5mb1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
              "getEpochMetadata": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RXBvY2hNZXRhZGF0YSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YSB7CiAgICByZXR1cm4gRmxvd0Vwb2NoLmdldEVwb2NoTWV0YWRhdGEoZXBvY2hDb3VudGVyKSEKfQ==",
              "getEpochMetadataTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0RXBvY2hNZXRhZGF0YVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIAppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihlcG9jaENvdW50ZXI6IFVJbnQ2NCk6IEZsb3dFcG9jaC5FcG9jaE1ldGFkYXRhPyB7CiAgcmV0dXJuIEZsb3dFcG9jaC5nZXRFcG9jaE1ldGFkYXRhKGVwb2NoQ291bnRlcikKfQ==",
              "getNodeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9kZUluZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9kZUluZm9UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
              "getNodesInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9kZXNJbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCmFjY2VzcyhhbGwpIHN0cnVjdCBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8gewoKICAgIGFjY2VzcyhhbGwpIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlQ291bnQ6IFVJbnQ2NAoKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGluaXQoYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dLCBhbGxEZWxlZ2F0ZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mb10pIHsKCiAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBVSW50NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBVSW50NjQoMCkKCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5ub2RlQ291bnQgPSBzZWxmLm5vZGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnN0YWtlVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICAgICAgZm9yIGRlbGVnYXRlSW5mbyBpbiBhbGxEZWxlZ2F0ZUluZm8gewogICAgICAgICAgICBzZWxmLmRlbGVnYXRlQ291bnQgPSBzZWxmLmRlbGVnYXRlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKTogU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvPyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxOb2RlSW5mbyhhZGRyZXNzOiBhY2NvdW50KQogICAgbGV0IGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxEZWxlZ2F0b3JJbmZvKGFkZHJlc3M6IGFjY291bnQpCgogICAgcmV0dXJuIFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyhhbGxOb2RlSW5mbzogYWxsTm9kZUluZm8sIGFsbERlbGVnYXRlSW5mbzogYWxsRGVsZWdhdGVJbmZvKQp9Cg==",
              "getNodesInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0Tm9kZXNJbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgYWNjZXNzKGFsbCkgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVDb3VudDogVUludDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgaW5pdChhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10sIGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSkgewoKICAgICAgICBzZWxmLm5vZGVDb3VudCA9IFVJbnQ2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IFVJbnQ2NCgwKQoKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgICAgICBzZWxmLm5vZGVDb3VudCA9IHNlbGYubm9kZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgICAgICBmb3IgZGVsZWdhdGVJbmZvIGluIGFsbERlbGVnYXRlSW5mbyB7CiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IHNlbGYuZGVsZWdhdGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
              "getStakeInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3Rha2VJbmZvIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCmFjY2VzcyhhbGwpIHN0cnVjdCBTdGFrZUluZm8gewogICAgYWNjZXNzKGFsbCkgbGV0IGlkOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCByb2xlOiBVSW50OAogICAgYWNjZXNzKGFsbCkgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBuZXR3b3JraW5nS2V5OiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9yc0NudDogSW50CiAgICBhY2Nlc3MoYWxsKSBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIGFjY2VzcyhhbGwpIGxldCBub2RlSUQ6IFN0cmluZwogICAgYWNjZXNzKGFsbCkgbGV0IHVuc3Rha2FibGVUb2tlbnM6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSBsZXQgbWFjaGluZUFjY291bnRBZGRyZXNzOiBBZGRyZXNzPwogICAgYWNjZXNzKGFsbCkgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzQ250ID0gbm9kZUluZm8uZGVsZWdhdG9ycy5sZW5ndGggCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgICAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIHNlbGYubm9kZUlEID0gbm9kZUluZm8uaWQKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgbGV0IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgPSBub2RlSW5mby50b3RhbFN0YWtlZFdpdGhEZWxlZ2F0b3JzKCkKICAgICAgICBzZWxmLnRva2Vuc0RlbGVnYXRlZCA9IG5vZGVTdGFrZWRCYWxhbmNlV2l0aERlbGVnYXRvcnMgLSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICBpZiBsZXQgX21hY2hpbmVBY2NvdW50SW5mbyA9IG1hY2hpbmVBY2NvdW50SW5mbyB7CiAgICAgICAgICAgIGxldCBfbWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50SW5mby5nZXRBZGRyZXNzKCkKCiAgICAgICAgICAgIGxldCBtYWNoaW5lQWNjb3VudCA9IGdldEFjY291bnQoX21hY2hpbmVBY2NvdW50QWRkcmVzcykKCiAgICAgICAgICAgIHNlbGYubWFjaGluZUFjY291bnRBZGRyZXNzID0gX21hY2hpbmVBY2NvdW50QWRkcmVzcwogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG1hY2hpbmVBY2NvdW50LmJhbGFuY2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IG5pbAogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QmFsYW5jZSA9IG5pbAogICAgICAgIH0KICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFN0YWtlSW5mb30/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgZm9ybWF0dGVkTm9kZUluZm86IHtTdHJpbmc6IFN0YWtlSW5mb30gPSB7fQogICAgbGV0IGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRBbGxOb2RlSW5mbyhhZGRyZXNzOiBhY2NvdW50KQogICAgbGV0IG1hY2hpbmVBY2NvdW50czoge1N0cmluZzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLk1hY2hpbmVBY2NvdW50SW5mb30gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZ2V0TWFjaGluZUFjY291bnRzKGFkZHJlc3M6IGFjY291bnQpCgogICAgZm9yIG5vZGVJbmZvIGluIGFsbE5vZGVJbmZvIHsKICAgICAgICBmb3JtYXR0ZWROb2RlSW5mb1tub2RlSW5mby5pZF0gPSBTdGFrZUluZm8obm9kZUluZm86IG5vZGVJbmZvLCBtYWNoaW5lQWNjb3VudEluZm86IG1hY2hpbmVBY2NvdW50c1tub2RlSW5mby5pZF0pCiAgICB9CgogICAgcmV0dXJuIGZvcm1hdHRlZE5vZGVJbmZvCn0K",
              "getStakeInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3Rha2VJbmZvVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
              "getStakingInfo": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3Rha2luZ0luZm8gLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IEVwb2NoSW5mbyB7CiAgcHViIGxldCBjdXJyZW50RXBvY2hDb3VudGVyOiBVSW50NjQKICBwdWIgbGV0IGN1cnJlbnRFcG9jaFBoYXNlOiBVSW50OAoKICBpbml0KAogICAgICBjdXJyZW50RXBvY2hDb3VudGVyOiBVSW50NjQsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBVSW50OAogICkgewogICAgICBzZWxmLmN1cnJlbnRFcG9jaENvdW50ZXIgPSBjdXJyZW50RXBvY2hDb3VudGVyCiAgICAgIHNlbGYuY3VycmVudEVwb2NoUGhhc2UgPSBjdXJyZW50RXBvY2hQaGFzZQogIH0KfQoKcHViIHN0cnVjdCBSZXN1bHQgewogIHB1YiBsZXQgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPwoKICBpbml0KHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8pIHsKICAgIHNlbGYuc3Rha2luZ0luZm8gPSBzdGFraW5nSW5mbwogIH0KfQoKcHViIHN0cnVjdCBTdGFraW5nSW5mbyB7CiAgcHViIGxldCBlcG9jaEluZm86IEVwb2NoSW5mbwogIHB1YiBsZXQgbG9ja2VkQWRkcmVzczogQWRkcmVzcyAgIAogIHB1YiBsZXQgbG9ja2VkQmFsYW5jZTogVUZpeDY0CiAgcHViIGxldCB1bmxvY2tMaW1pdDogVUZpeDY0CiAgcHViIGxldCBub2RlSW5mbzogTm9kZUluZm8/CiAgcHViIGxldCBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/CiAgcHViIGxldCBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPwoKICBpbml0KAogICAgZXBvY2hJbmZvOiBFcG9jaEluZm8sCiAgICBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzLAogICAgbG9ja2VkQmFsYW5jZTogVUZpeDY0LAogICAgdW5sb2NrTGltaXQ6IFVGaXg2NCwKICAgIG5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8sCiAgKSB7CiAgICBzZWxmLmVwb2NoSW5mbyA9IGVwb2NoSW5mbwogICAgc2VsZi5sb2NrZWRBZGRyZXNzID0gbG9ja2VkQWRkcmVzcwogICAgc2VsZi5sb2NrZWRCYWxhbmNlID0gbG9ja2VkQmFsYW5jZQogICAgc2VsZi51bmxvY2tMaW1pdCA9IHVubG9ja0xpbWl0CiAgICBzZWxmLm5vZGVJbmZvID0gbm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9yTm9kZUluZm8gPSBkZWxlZ2F0b3JOb2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JJbmZvID0gZGVsZWdhdG9ySW5mbwogIH0KfQoKcHViIHN0cnVjdCBOb2RlSW5mbyB7CiAgcHViIGxldCBpZDogU3RyaW5nCiAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgcHViIGxldCByb2xlOiBVSW50OAogIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIAogIHB1YiBsZXQgZGVsZWdhdG9ySURDb3VudGVyOiBVSW50MzIKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgcHViIGxldCBpbml0aWFsV2VpZ2h0OiBVSW50NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZykgewogICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKSAKCiAgICBzZWxmLmlkID0gbm9kZUluZm8uaWQKICAgIHNlbGYubmV0d29ya2luZ0FkZHJlc3MgPSBub2RlSW5mby5uZXR3b3JraW5nQWRkcmVzcwogICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgc2VsZi5pbml0aWFsV2VpZ2h0ID0gbm9kZUluZm8uaW5pdGlhbFdlaWdodAogIH0KfQoKcHViIHN0cnVjdCBEZWxlZ2F0b3JJbmZvIHsKICBwdWIgbGV0IGlkOiBVSW50MzIKICBwdWIgbGV0IG5vZGVJRDogU3RyaW5nCiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKSB7CiAgICBsZXQgZGVsZWdhdG9ySW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCgogICAgc2VsZi5pZCA9IGRlbGVnYXRvckluZm8uaWQKICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBSZXN1bHQgewogIGxldCB0b2tlbkhvbGRlclJlZiA9IAogICAgICBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogICAgICAgICAgLmJvcnJvdzwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKCiAgdmFyIHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8gPSBuaWwKICBpZiBsZXQgdG9rZW5Ib2xkZXIgPSB0b2tlbkhvbGRlclJlZiB7CiAgICBsZXQgbG9ja2VkQWRkcmVzcyA9IHRva2VuSG9sZGVyLmdldExvY2tlZEFjY291bnRBZGRyZXNzKCkgICAgICAgCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IHRva2VuSG9sZGVyLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIGxldCB1bmxvY2tMaW1pdCA9IHRva2VuSG9sZGVyLmdldFVubG9ja0xpbWl0KCkKICAgIAogICAgdmFyIG5vZGVJbmZvOiBOb2RlSW5mbz8gPSBuaWwKICAgIGlmIGxldCBub2RlSUQgPSB0b2tlbkhvbGRlci5nZXROb2RlSUQoKSB7CiAgICAgIG5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBub2RlSUQpCiAgICB9CgogICAgdmFyIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8gPSBuaWwKICAgIHZhciBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPyA9IG5pbAogICAgaWYgbGV0IGRlbGVnYXRvck5vZGVJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvck5vZGVJRCgpIHsKICAgICAgaWYgbGV0IGRlbGVnYXRvcklEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9ySUQoKSB7CiAgICAgICAgZGVsZWdhdG9yTm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvck5vZGVJRCkKICAgICAgICBkZWxlZ2F0b3JJbmZvID0gRGVsZWdhdG9ySW5mbyhub2RlSUQ6IGRlbGVnYXRvck5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQogICAgICB9IAogICAgfSAKCiAgICBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
              "getStakingInfoTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3Rha2luZ0luZm9UZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIHN0cnVjdCBFcG9jaEluZm8gewogIHB1YiBsZXQgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0CiAgcHViIGxldCBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKCiAgaW5pdCgKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogVUludDY0LAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogVUludDgKICApIHsKICAgICAgc2VsZi5jdXJyZW50RXBvY2hDb3VudGVyID0gY3VycmVudEVwb2NoQ291bnRlcgogICAgICBzZWxmLmN1cnJlbnRFcG9jaFBoYXNlID0gY3VycmVudEVwb2NoUGhhc2UKICB9Cn0KCnB1YiBzdHJ1Y3QgUmVzdWx0IHsKICBwdWIgbGV0IHN0YWtpbmdJbmZvOiBTdGFraW5nSW5mbz8KCiAgaW5pdChzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/KSB7CiAgICBzZWxmLnN0YWtpbmdJbmZvID0gc3Rha2luZ0luZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgU3Rha2luZ0luZm8gewogIHB1YiBsZXQgZXBvY2hJbmZvOiBFcG9jaEluZm8KICBwdWIgbGV0IGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MgICAKICBwdWIgbGV0IGxvY2tlZEJhbGFuY2U6IFVGaXg2NAogIHB1YiBsZXQgdW5sb2NrTGltaXQ6IFVGaXg2NAogIHB1YiBsZXQgbm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPwogIHB1YiBsZXQgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8KCiAgaW5pdCgKICAgIGVwb2NoSW5mbzogRXBvY2hJbmZvLAogICAgbG9ja2VkQWRkcmVzczogQWRkcmVzcywKICAgIGxvY2tlZEJhbGFuY2U6IFVGaXg2NCwKICAgIHVubG9ja0xpbWl0OiBVRml4NjQsCiAgICBub2RlSW5mbzogTm9kZUluZm8/LAogICAgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/LAogICkgewogICAgc2VsZi5lcG9jaEluZm8gPSBlcG9jaEluZm8KICAgIHNlbGYubG9ja2VkQWRkcmVzcyA9IGxvY2tlZEFkZHJlc3MKICAgIHNlbGYubG9ja2VkQmFsYW5jZSA9IGxvY2tlZEJhbGFuY2UKICAgIHNlbGYudW5sb2NrTGltaXQgPSB1bmxvY2tMaW1pdAogICAgc2VsZi5ub2RlSW5mbyA9IG5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvck5vZGVJbmZvID0gZGVsZWdhdG9yTm9kZUluZm8KICAgIHNlbGYuZGVsZWdhdG9ySW5mbyA9IGRlbGVnYXRvckluZm8KICB9Cn0KCnB1YiBzdHJ1Y3QgTm9kZUluZm8gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgbmV0d29ya2luZ0FkZHJlc3M6IFN0cmluZwogIHB1YiBsZXQgcm9sZTogVUludDgKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAKICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgcHViIGxldCB0b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAogIHB1YiBsZXQgaW5pdGlhbFdlaWdodDogVUludDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcpIHsKICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkgCgogICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICBzZWxmLmRlbGVnYXRvcklEQ291bnRlciA9IG5vZGVJbmZvLmRlbGVnYXRvcklEQ291bnRlcgogICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIHNlbGYuaW5pdGlhbFdlaWdodCA9IG5vZGVJbmZvLmluaXRpYWxXZWlnaHQKICB9Cn0KCnB1YiBzdHJ1Y3QgRGVsZWdhdG9ySW5mbyB7CiAgcHViIGxldCBpZDogVUludDMyCiAgcHViIGxldCBub2RlSUQ6IFN0cmluZwogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgaW5pdChub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMikgewogICAgbGV0IGRlbGVnYXRvckluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQoKICAgIHNlbGYuaWQgPSBkZWxlZ2F0b3JJbmZvLmlkCiAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zU3Rha2VkCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgdG9rZW5Ib2xkZXJSZWYgPSAKICAgICAgZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICAgICAgICAgIC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCgogIHZhciBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/ID0gbmlsCiAgaWYgbGV0IHRva2VuSG9sZGVyID0gdG9rZW5Ib2xkZXJSZWYgewogICAgbGV0IGxvY2tlZEFkZHJlc3MgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QWRkcmVzcygpICAgICAgIAogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSB0b2tlbkhvbGRlci5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICBsZXQgdW5sb2NrTGltaXQgPSB0b2tlbkhvbGRlci5nZXRVbmxvY2tMaW1pdCgpCiAgICAKICAgIHZhciBub2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICBpZiBsZXQgbm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0Tm9kZUlEKCkgewogICAgICBub2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQogICAgfQoKICAgIHZhciBkZWxlZ2F0b3JOb2RlSW5mbzogTm9kZUluZm8/ID0gbmlsCiAgICB2YXIgZGVsZWdhdG9ySW5mbzogRGVsZWdhdG9ySW5mbz8gPSBuaWwKICAgIGlmIGxldCBkZWxlZ2F0b3JOb2RlSUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JOb2RlSUQoKSB7CiAgICAgIGlmIGxldCBkZWxlZ2F0b3JJRCA9IHRva2VuSG9sZGVyLmdldERlbGVnYXRvcklEKCkgewogICAgICAgIGRlbGVnYXRvck5vZGVJbmZvID0gTm9kZUluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQpCiAgICAgICAgZGVsZWdhdG9ySW5mbyA9IERlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKICAgICAgfSAKICAgIH0gCgogICAgbGV0IGVwb2NoSW5mbyA9IEVwb2NoSW5mbygKICAgICAgY3VycmVudEVwb2NoQ291bnRlcjogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaENvdW50ZXIsCiAgICAgIGN1cnJlbnRFcG9jaFBoYXNlOiBGbG93RXBvY2guY3VycmVudEVwb2NoUGhhc2UucmF3VmFsdWUKICAgICkKCiAgICBzdGFraW5nSW5mbyA9IFN0YWtpbmdJbmZvKAogICAgICBlcG9jaEluZm86IGVwb2NoSW5mbywKICAgICAgbG9ja2VkQWRkcmVzczogbG9ja2VkQWRkcmVzcywKICAgICAgbG9ja2VkQmFsYW5jZTogbG9ja2VkQmFsYW5jZSwKICAgICAgdW5sb2NrTGltaXQ6IHVubG9ja0xpbWl0LAogICAgICBub2RlSW5mbzogbm9kZUluZm8sCiAgICAgIGRlbGVnYXRvck5vZGVJbmZvOiBkZWxlZ2F0b3JOb2RlSW5mbywKICAgICAgZGVsZWdhdG9ySW5mbzogZGVsZWdhdG9ySW5mbyAKICAgICkKICB9CgogIHJldHVybiBSZXN1bHQoc3Rha2luZ0luZm86IHN0YWtpbmdJbmZvKQp9",
              "restakeReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVzdGFrZVJld2FyZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "restakeRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVzdGFrZVJld2FyZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyByZXdhcmRlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "restakeUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgcmVzdGFrZVVuc3Rha2VkIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gQ29tbWl0cyB1bnN0YWtlZCB0b2tlbnMgdG8gc3Rha2UgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "setup": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXAgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIHNldHMgdXAgYW4gYWNjb3VudCB0byB1c2UgYSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIEl0IHdpbGwgd29yayByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGEgcmVndWxhciBhY2NvdW50LCBhIHR3by1hY2NvdW50IGxvY2tlZCB0b2tlbnMgc2V0dXAsCi8vLyBvciBzdGFraW5nIG9iamVjdHMgc3RvcmVkIGluIHRoZSB1bmxvY2tlZCBhY2NvdW50Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSwgU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdywgTG9ja2VkVG9rZW5zLlRva2VuT3BlcmF0aW9ucykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBsZXQgZmxvd1Rva2VuID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpIQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IFN0YWtpbmcgQ29sbGVjdGlvbiBhbmQgcHV0IGl0IGluIHN0b3JhZ2UKICAgICAgICAgICAgaWYgbG9ja2VkSG9sZGVyLmNoZWNrKCkgewogICAgICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSgKICAgICAgICAgICAgICAgICAgICA8LSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uY3JlYXRlU3Rha2luZ0NvbGxlY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlcgogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgdG86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKAogICAgICAgICAgICAgICAgICAgIDwtIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgdW5sb2NrZWRWYXVsdDogZmxvd1Rva2VuLAogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbkhvbGRlcjogbmlsCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gUHVibGlzaCBhIGNhcGFiaWxpdHkgdG8gdGhlIGNyZWF0ZWQgc3Rha2luZyBjb2xsZWN0aW9uLgogICAgICAgICAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oCiAgICAgICAgICAgICAgICBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgICAgICApCgogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goCiAgICAgICAgICAgICAgICBzdGFraW5nQ29sbGVjdGlvbkNhcCwKICAgICAgICAgICAgICAgIGF0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgbm9kZSA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGREZWxlZ2F0b3JPYmplY3QoPC1kZWxlZ2F0b3IpCiAgICAgICAgfQogICAgfQp9",
              "setupTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICAvLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgxNjU0NjUzMzk5MDQwYTYxCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQovLyBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhmMjMzZGNlZTg4ZmUwYWJlCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDE2NTQ2NTMzOTkwNDBhNjEKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBUaGlzIHRyYW5zYWN0aW9uIHNldHMgdXAgYW4gYWNjb3VudCB0byB1c2UgYSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIEl0IHdpbGwgd29yayByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGEgcmVndWxhciBhY2NvdW50LCBhIHR3by1hY2NvdW50IGxvY2tlZCB0b2tlbnMgc2V0dXAsCi8vLyBvciBzdGFraW5nIG9iamVjdHMgc3RvcmVkIGluIHRoZSB1bmxvY2tlZCBhY2NvdW50Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMsIFNhdmVWYWx1ZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIC8vIElmIHRoZXJlIGlzbid0IGFscmVhZHkgYSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpID09IG5pbCB7CgogICAgICAgICAgICAvLyBDcmVhdGUgcHJpdmF0ZSBjYXBhYmlsaXRpZXMgZm9yIHRoZSB0b2tlbiBob2xkZXIgYW5kIHVubG9ja2VkIHZhdWx0CiAgICAgICAgICAgIGxldCBsb2NrZWRIb2xkZXIgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3LCBMb2NrZWRUb2tlbnMuVG9rZW5PcGVyYXRpb25zKSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0Pigvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IGxvY2tlZEhvbGRlciksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC1GbG93U3Rha2luZ0NvbGxlY3Rpb24uY3JlYXRlU3Rha2luZ0NvbGxlY3Rpb24odW5sb2NrZWRWYXVsdDogZmxvd1Rva2VuLCB0b2tlbkhvbGRlcjogbmlsKSwgdG86IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDcmVhdGUgYSBwdWJsaWMgbGluayB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgICAgIC8vIHNpZ25lci5saW5rPCZ7Rmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljfT4oCiAgICAgICAgICAgIC8vICAgICBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoLAogICAgICAgICAgICAvLyAgICAgdGFyZ2V0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgICAgICAvLyApCiAgICAgICAgICAgIGxldCBzdGFraW5nQ29sbGVjdGlvbkNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goc3Rha2luZ0NvbGxlY3Rpb25DYXAsIGF0OiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIH0KCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgc3Rha2luZyBjb2xsZWN0aW9uIHJlZmVyZW5jZSIpCgogICAgICAgIC8vIElmIHRoZXJlIGlzIGEgbm9kZSBzdGFrZXIgb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGROb2RlT2JqZWN0KDwtbm9kZSwgbWFjaGluZUFjY291bnRJbmZvOiBuaWwpCiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGRlbGVnYXRvciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgZGVsZWdhdG9yIDwtIHNpZ25lci5zdG9yYWdlLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
              "unstake": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdW5zdGFrZSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlcXVlc3RVbnN0YWtpbmcobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
              "unstakeTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgdW5zdGFrZVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdHMgdW5zdGFraW5nIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawLocked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdMb2NrZWQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGVU5HSUJMRVRPS0VOQUREUkVTUwppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHhGTE9XVE9LRU5BRERSRVNTCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExPQ0tFRFRPS0VOQUREUkVTUwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiBhdXRoKExvY2tlZFRva2Vucy5Ub2tlbk9wZXJhdGlvbnMsIEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogYXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5zdG9yYWdlLmJvcnJvdzxhdXRoKExvY2tlZFRva2Vucy5Ub2tlbk9wZXJhdGlvbnMsIEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiVGhlIHByaW1hcnkgdXNlciBhY2NvdW50IGRvZXMgbm90IGhhdmUgYW4gYXNzb2NpYXRlZCBsb2NrZWQgYWNjb3VudCIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkpCiAgICB9Cn0=",
              "withdrawReward": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdSZXdhcmQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHJld2FyZGVkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Jld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawRewardTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdSZXdhcmRUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyByZXdhcmRlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIGEgU3Rha2luZ0NvbGxlY3Rpb24gaW4gdGhlIHByaW1hcnkgdXNlcidzIGFjY291bnQiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
              "withdrawUnstaked": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdVbnN0YWtlZCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiBhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gYSBTdGFraW5nQ29sbGVjdGlvbiBpbiB0aGUgcHJpbWFyeSB1c2VyJ3MgYWNjb3VudCIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi53aXRoZHJhd1Vuc3Rha2VkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
              "withdrawUnstakedTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgd2l0aGRyYXdVbnN0YWtlZFRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgICBpbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgovLy8gUmVxdWVzdCB0byB3aXRoZHJhdyB1bnN0YWtlZCB0b2tlbnMgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gVGhlIHRva2VucyBhcmUgYXV0b21hdGljYWxseSBkZXBvc2l0ZWQgdG8gdGhlIHVubG9ja2VkIGFjY291bnQgdmF1bHQgZmlyc3QsCi8vLyBBbmQgdGhlbiBhbnkgbG9ja2VkIHRva2VucyBhcmUgZGVwb3NpdGVkIGludG8gdGhlIGxvY2tlZCBhY2NvdW50IHZhdWx0IGlmIGl0IGlzIHRoZXJlCgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBhIFN0YWtpbmdDb2xsZWN0aW9uIGluIHRoZSBwcmltYXJ5IHVzZXIncyBhY2NvdW50IikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
            },
            "storage": {
              "enableTokenStorage": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZW5hYmxlVG9rZW5TdG9yYWdlIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgPFRva2VuPiBmcm9tIDxUb2tlbkFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewoKICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPiApID09IG5pbCB7CiAgICAgICAgICAgIHNpZ25lci5zdG9yYWdlLnNhdmUoPC0gPFRva2VuPi5jcmVhdGVFbXB0eVZhdWx0KHZhdWx0VHlwZTogVHlwZTxAPFRva2VuPi5WYXVsdD4oKSksIHRvOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JjxUb2tlbj4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmPFRva2VuPi5WYXVsdD4oPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnB1Ymxpc2goYmFsYW5jZUNhcGFiaWxpdHksIGF0OiA8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICAgICAgfQogICAgCiAgICB9Cn0=",
              "getBasicPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QmFzaWNQdWJsaWNJdGVtcyAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getBasicPublicItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0QmFzaWNQdWJsaWNJdGVtc1Rlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGFjY2VzcyhhbGwpc3RydWN0IEl0ZW0gewogIGFjY2VzcyhhbGwpbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBhY2Nlc3MoYWxsKWxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RyaW5nLCB0YXJnZXRQYXRoOiBTdHJpbmc/KSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgphY2Nlc3MoYWxsKWZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCgogIGZ1biBlYWNoUGF0aChwYXRoOiBQdWJsaWNQYXRoLCBjYXBUeXBlOiBUeXBlKTogQm9vbCB7CiAgICAvLyB0b2RvCiAgICBsZXQgY2FwID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZ2V0PCZBbnlTdHJ1Y3Q+KHBhdGgpCiAgICB2YXIgdGFyZ2V0UGF0aCA9ICIiCgogICAgaWYgY2FwICE9IG5pbCB7CiAgICAgIHRhcmdldFBhdGggPSAiMTIiIAogICAgfQogICAgbGV0IGl0ZW0gPSBJdGVtKGFkZHJlc3M6IGFkZHJlc3MsIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCkKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9CiAgYWNjb3VudC5zdG9yYWdlLmZvckVhY2hQdWJsaWMoZWFjaFBhdGgpCgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZUl0ZW1zIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgYWNjb3VudC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivateItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZUl0ZW1zVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgYWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHR5cGU6IFR5cGUKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPrivatePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHJpdmF0ZVBhdGhzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtQcml2YXRlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQcml2YXRlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHJpdmF0ZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getPublicItem": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbSAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicItemTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbVRlc3QgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
              "getPublicItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHVibGljSXRlbXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKCiAgcHViIGxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIHB1YiBsZXQgaXNDb2xsZWN0aW9uQ2FwOiBCb29sCiAgcHViIGxldCB0b2tlbklEczogW1VJbnQ2NF0KCiAgcHViIGxldCBpc0JhbGFuY2VDYXA6IEJvb2wKICBwdWIgbGV0IGJhbGFuY2U6IFVGaXg2ND8KCiAgaW5pdCgKICAgIGFkZHJlc3M6IEFkZHJlc3MsIAogICAgcGF0aDogU3RyaW5nLCAKICAgIHR5cGU6IFR5cGUsIAogICAgdGFyZ2V0UGF0aDogU3RyaW5nPywgCiAgICBpc0NvbGxlY3Rpb25DYXA6IEJvb2wsIAogICAgdG9rZW5JRHM6IFtVSW50NjRdLAogICAgaXNCYWxhbmNlQ2FwOiBCb29sLAogICAgYmFsYW5jZTogVUZpeDY0PwogICkgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50eXBlID0gdHlwZQogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogICAgc2VsZi5pc0NvbGxlY3Rpb25DYXAgPSBpc0NvbGxlY3Rpb25DYXAKICAgIHNlbGYudG9rZW5JRHMgPSB0b2tlbklEcwogICAgc2VsZi5pc0JhbGFuY2VDYXAgPSBpc0JhbGFuY2VDYXAKICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoTWFwOiB7U3RyaW5nOiBCb29sfSk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCiAgbGV0IGJhbGFuY2VDYXBUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtGdW5naWJsZVRva2VuLkJhbGFuY2V9Pj4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwmQW55UmVzb3VyY2V7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4+KCkKCiAgYWNjb3VudC5mb3JFYWNoUHVibGljKGZ1biAocGF0aDogUHVibGljUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIHZhciBpc0NvbGxlY3Rpb25DYXAgPSBmYWxzZQogICAgdmFyIGlzQmFsYW5jZUNhcCA9IGZhbHNlCiAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGlmICh0eXBlLmlzU3VidHlwZShvZjogYmFsYW5jZUNhcFR5cGUpKSB7CiAgICAgIGlzQmFsYW5jZUNhcCA9IHRydWUKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgICAgLmdldENhcGFiaWxpdHkocGF0aCkKICAgICAgICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCgogICAgICBpZiBsZXQgdmF1bHQgPSB2YXVsdFJlZiB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHQuYmFsYW5jZQogICAgICB9CiAgICB9IGVsc2UgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkpIHsKICAgICAgaXNDb2xsZWN0aW9uQ2FwID0gdHJ1ZQogICAgICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25SZWYgewogICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICB9CiAgICB9CgogICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICBwYXRoOiBwYXRoLnRvU3RyaW5nKCksCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRhcmdldFBhdGg6IHRhcmdldFBhdGgsCiAgICAgIGlzQ29sbGVjdGlvbkNhcDogaXNDb2xsZWN0aW9uQ2FwLAogICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgIGlzQmFsYW5jZUNhcDogaXNCYWxhbmNlQ2FwLAogICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
              "getPublicPaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0UHVibGljUGF0aHMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogW1B1YmxpY1BhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHVibGljUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgY2xlYW5kUGF0aHMuYXBwZW5kKHBhdGgpCiAgfQogIHJldHVybiBjbGVhbmRQYXRocwp9",
              "getStoragePaths": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmFnZVBhdGhzIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtTdG9yYWdlUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtTdG9yYWdlUGF0aF0gPSBbXQogIGZvciBwYXRoIGluIGFjY291bnQuc3RvcmFnZVBhdGhzIHsKICAgIGNsZWFuZFBhdGhzLmFwcGVuZChwYXRoKQogIH0KICByZXR1cm4gY2xlYW5kUGF0aHMKfQ==",
              "getStoredItems": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmVkSXRlbXMgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCgpwdWIgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBwdWIgbGV0IG5hbWU6IFN0cmluZwogIHB1YiBsZXQgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBNZXRhZGF0YVZpZXdzLk1lZGlhKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICB9Cn0KCnB1YiBzdHJ1Y3QgSXRlbSB7CiAgcHViIGxldCBhZGRyZXNzOiBBZGRyZXNzCiAgcHViIGxldCBwYXRoOiBTdHJpbmcKICBwdWIgbGV0IHR5cGU6IFR5cGUKICBwdWIgbGV0IGlzUmVzb3VyY2U6IEJvb2wKICBwdWIgbGV0IGlzTkZUQ29sbGVjdGlvbjogQm9vbAogIHB1YiBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgcHViIGxldCB0b2tlbklEczogW1VJbnQ2NF0KICBwdWIgbGV0IGlzVmF1bHQ6IEJvb2wKICBwdWIgbGV0IGJhbGFuY2U6IFVGaXg2ND8KCiAgaW5pdChhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIHR5cGU6IFR5cGUsIGlzUmVzb3VyY2U6IEJvb2wsIAogICAgaXNORlRDb2xsZWN0aW9uOiBCb29sLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sCiAgICB0b2tlbklEczogW1VJbnQ2NF0sIGlzVmF1bHQ6IEJvb2wsIGJhbGFuY2U6IFVGaXg2ND8pIHsKICAgICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgICBzZWxmLnBhdGggPSBwYXRoCiAgICAgIHNlbGYudHlwZSA9IHR5cGUKICAgICAgc2VsZi5pc1Jlc291cmNlID0gaXNSZXNvdXJjZQogICAgICBzZWxmLmlzTkZUQ29sbGVjdGlvbiA9IGlzTkZUQ29sbGVjdGlvbgogICAgICBzZWxmLmRpc3BsYXkgPSBkaXNwbGF5CiAgICAgIHNlbGYudG9rZW5JRHMgPSB0b2tlbklEcwogICAgICBzZWxmLmlzVmF1bHQgPSBpc1ZhdWx0CiAgICAgIHNlbGYuYmFsYW5jZSA9IGJhbGFuY2UKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWRlbnRpZmllcnM6IFtTdHJpbmddKTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IHZhdWx0VHlwZSA9IFR5cGU8QEZ1bmdpYmxlVG9rZW4uVmF1bHQ+KCkKICBsZXQgY29sbGVjdGlvblR5cGUgPSBUeXBlPEBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QEFueVJlc291cmNle01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBpdGVtczogW0l0ZW1dID0gW10KCiAgZm9yIGlkZW50aWZpZXIgaW4gcGF0aElkZW50aWZpZXJzIHsKICAgIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogaWRlbnRpZmllcikhCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsKICAgICAgICAgIHRva2VuSURzID0gY29sbGVjdGlvblJlZi5nZXRJRHMoKQoKICAgICAgICAgIC8vIFRPRE86IG1vdmUgdG8gYSBsaXN0CiAgICAgICAgICBpZiB0b2tlbklEcy5sZW5ndGggPiAwIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL0FybGVlU2NlbmUgewogICAgICAgICAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRHNbMF0pIAogICAgICAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgc3F1YXJlSW1hZ2U6IGRpc3BsYXkuc3F1YXJlSW1hZ2UKICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiBpc05GVENvbGxlY3Rpb24gewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCiAgICAgICAgfQogICAgICB9CgogICAgICBsZXQgaXNWYXVsdCA9IHR5cGUuaXNTdWJ0eXBlKG9mOiB2YXVsdFR5cGUpIAogICAgICB2YXIgYmFsYW5jZTogVUZpeDY0PyA9IG5pbAogICAgICBpZiBpc1ZhdWx0IHsKICAgICAgICBpZiBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgewogICAgICAgICAgYmFsYW5jZSA9IHZhdWx0UmVmLmJhbGFuY2UKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgIGlzUmVzb3VyY2U6IGlzUmVzb3VyY2UsCiAgICAgICAgaXNORlRDb2xsZWN0aW9uOiBpc05GVENvbGxlY3Rpb24sCiAgICAgICAgZGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXksCiAgICAgICAgdG9rZW5JRHM6IHRva2VuSURzLAogICAgICAgIGlzVmF1bHQ6IGlzVmF1bHQsCiAgICAgICAgYmFsYW5jZTogYmFsYW5jZQogICAgICApCgogICAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIH0KICB9CgogIHJldHVybiBpdGVtcwp9",
              "getStoredItemsTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmVkSXRlbXNUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
              "getStoredResource": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmVkUmVzb3VyY2UgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoU3RyOiBTdHJpbmcpOiAmQW55UmVzb3VyY2U/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVJlc291cmNlPihmcm9tOiBwYXRoKQp9",
              "getStoredStruct": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3RvcmVkU3RydWN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aFN0cjogU3RyaW5nKTogJkFueVN0cnVjdD8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55U3RydWN0Pihmcm9tOiBwYXRoKQp9"
            },
            "switchboard": {
              "getSwitchboard": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgZ2V0U3dpdGNoYm9hcmQgLSB2Mi4wNAogICAgICAgICAgIC8vIDxwbGF0Zm9ybV9pbmZvPgogICAgIGltcG9ydCBGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQgZnJvbSAweEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKcHViIHN0cnVjdCBTd2l0Y2hib2FyZEluZm8gewogIHB1YiBsZXQgdmF1bHRUeXBlczogW1R5cGVdCgogIGluaXQodmF1bHRUeXBlczogW1R5cGVdKSB7CiAgICBzZWxmLnZhdWx0VHlwZXMgPSB2YXVsdFR5cGVzCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFN3aXRjaGJvYXJkSW5mbz8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBpZiBsZXQgYm9hcmQgPSBhY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlblN3aXRjaGJvYXJkLlN3aXRjaGJvYXJkPihmcm9tOiBGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3RvcmFnZVBhdGgpIHsKICAgIGxldCB0eXBlcyA9IGJvYXJkLmdldFZhdWx0VHlwZXMoKQogICAgcmV0dXJuIFN3aXRjaGJvYXJkSW5mbyh2YXVsdFR5cGVzOiB0eXBlcykKICB9CiAgcmV0dXJuIG5pbAp9"
            },
            "temp": {
              "mintNFT": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgbWludE5GVCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgLy8vIFRoaXMgc2NyaXB0IHVzZXMgdGhlIE5GVE1pbnRlciByZXNvdXJjZSB0byBtaW50IGEgbmV3IE5GVAovLy8gSXQgbXVzdCBiZSBydW4gd2l0aCB0aGUgYWNjb3VudCB0aGF0IGhhcyB0aGUgbWludGVyIHJlc291cmNlCi8vLyBzdG9yZWQgaW4gL3N0b3JhZ2UvTkZUTWludGVyCgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4NjMxZTg4YWU3ZjFkN2MyMAoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IEV4YW1wbGVORlQgZnJvbSAweDM5MGI0NzA1ZGE2MzA1YzMKCnRyYW5zYWN0aW9uKAogICAgcmVjaXBpZW50OiBBZGRyZXNzLAogICAgbmFtZTogU3RyaW5nLAogICAgZGVzY3JpcHRpb246IFN0cmluZywKICAgIHRodW1ibmFpbDogU3RyaW5nLAogICAgY3V0czogW1VGaXg2NF0sCiAgICByb3lhbHR5RGVzY3JpcHRpb25zOiBbU3RyaW5nXSwKICAgIHJveWFsdHlCZW5lZmljaWFyaWVzOiBbQWRkcmVzc10KKSB7CgogICAgLy8vIGxvY2FsIHZhcmlhYmxlIGZvciBzdG9yaW5nIHRoZSBtaW50ZXIgcmVmZXJlbmNlCiAgICBsZXQgbWludGVyOiAmRXhhbXBsZU5GVC5ORlRNaW50ZXIKCiAgICAvLy8gUmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24KICAgIGxldCByZWNpcGllbnRDb2xsZWN0aW9uUmVmOiAme05vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CgogICAgICAgIGxldCBjb2xsZWN0aW9uRGF0YSA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldygKICAgICAgICAgICAgICAgIHJlc291cmNlVHlwZTogbmlsLAogICAgICAgICAgICAgICAgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQogICAgICAgICAgICApIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiVmlld1Jlc29sdmVyIGRvZXMgbm90IHJlc29sdmUgTkZUQ29sbGVjdGlvbkRhdGEgdmlldyIpCiAgICAgICAgCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBORlRNaW50ZXIgcmVzb3VyY2UgaW4gc3RvcmFnZQogICAgICAgIHNlbGYubWludGVyID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZFeGFtcGxlTkZULk5GVE1pbnRlcj4oZnJvbTogRXhhbXBsZU5GVC5NaW50ZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkFjY291bnQgZG9lcyBub3Qgc3RvcmUgYW4gb2JqZWN0IGF0IHRoZSBzcGVjaWZpZWQgcGF0aCIpCgogICAgICAgIC8vIEJvcnJvdyB0aGUgcmVjaXBpZW50J3MgcHVibGljIE5GVCBjb2xsZWN0aW9uIHJlZmVyZW5jZQogICAgICAgIHNlbGYucmVjaXBpZW50Q29sbGVjdGlvblJlZiA9IGdldEFjY291bnQocmVjaXBpZW50KS5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgY29sbGVjdGlvbkRhdGEucHVibGljUGF0aAogICAgICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgZ2V0IHJlY2VpdmVyIHJlZmVyZW5jZSB0byB0aGUgTkZUIENvbGxlY3Rpb24iKQogICAgfQoKICAgIHByZSB7CiAgICAgICAgY3V0cy5sZW5ndGggPT0gcm95YWx0eURlc2NyaXB0aW9ucy5sZW5ndGggJiYgY3V0cy5sZW5ndGggPT0gcm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoOiAiQXJyYXkgbGVuZ3RoIHNob3VsZCBiZSBlcXVhbCBmb3Igcm95YWx0eSByZWxhdGVkIGRldGFpbHMiCiAgICB9CgogICAgZXhlY3V0ZSB7CgogICAgICAgIC8vIENyZWF0ZSB0aGUgcm95YWx0eSBkZXRhaWxzCiAgICAgICAgdmFyIGNvdW50ID0gMAogICAgICAgIHZhciByb3lhbHRpZXM6IFtNZXRhZGF0YVZpZXdzLlJveWFsdHldID0gW10KICAgICAgICBsb2cocm95YWx0eUJlbmVmaWNpYXJpZXMubGVuZ3RoKQogICAgICAgIHdoaWxlIHJveWFsdHlCZW5lZmljaWFyaWVzLmxlbmd0aCA+IGNvdW50IHsKICAgICAgICAgICAgbGV0IGJlbmVmaWNpYXJ5ID0gcm95YWx0eUJlbmVmaWNpYXJpZXNbY291bnRdCiAgICAgICAgICAgIGxldCBiZW5lZmljaWFyeUNhcGFiaWxpdHkgPSBnZXRBY2NvdW50KGJlbmVmaWNpYXJ5KS5jYXBhYmlsaXRpZXMuZ2V0PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgICAgICAgICAgICAgICAgIE1ldGFkYXRhVmlld3MuZ2V0Um95YWx0eVJlY2VpdmVyUHVibGljUGF0aCgpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIGlmICFiZW5lZmljaWFyeUNhcGFiaWxpdHkuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBwYW5pYygiQmVuZWZpY2lhcnkgZG9lcyBub3QgaGF2ZSBSZWNlaXZlciBjb25maWd1cmVkIGF0IFJveWFsdHlSZWNlaXZlclB1YmxpY1BhdGgiKQogICAgICAgICAgICB9CgogICAgICAgICAgICByb3lhbHRpZXMuYXBwZW5kKAogICAgICAgICAgICAgICAgTWV0YWRhdGFWaWV3cy5Sb3lhbHR5KAogICAgICAgICAgICAgICAgICAgIHJlY2VpdmVyOiBiZW5lZmljaWFyeUNhcGFiaWxpdHksCiAgICAgICAgICAgICAgICAgICAgY3V0OiBjdXRzW2NvdW50XSwKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogcm95YWx0eURlc2NyaXB0aW9uc1tjb3VudF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKQogICAgICAgICAgICBjb3VudCA9IGNvdW50ICsgMQogICAgICAgIH0KCgogICAgICAgIC8vIE1pbnQgdGhlIE5GVCBhbmQgZGVwb3NpdCBpdCB0byB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgICAgIGxldCBtaW50ZWRORlQgPC0gc2VsZi5taW50ZXIubWludE5GVCgKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICB0aHVtYm5haWw6IHRodW1ibmFpbCwKICAgICAgICAgICAgcm95YWx0aWVzOiByb3lhbHRpZXMKICAgICAgICApCiAgICAgICAgc2VsZi5yZWNpcGllbnRDb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtbWludGVkTkZUKQogICAgfQoKfQ==",
              "setupFTFullTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBGVEZ1bGxUZXN0IC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4OWEwNzY2ZDkzYjY2MDhiNwoKaW1wb3J0IEV4YW1wbGVUb2tlbiBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgppbXBvcnQgRnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MgZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChTdG9yYWdlLCBDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IG1kID0gRXhhbXBsZVRva2VuLnJlc29sdmVDb250cmFjdFZpZXcocmVzb3VyY2VUeXBlOiBuaWwsIHZpZXdUeXBlOiBUeXBlPEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPigpKSEgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhCiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IEV4YW1wbGVUb2tlbiBWYXVsdCBhbmQgcHV0IGl0IGluIHN0b3JhZ2UgaWYgb25lIGRvZXNuJ3QgZXhpc3QKICAgICAgICBpZiBhY2N0LnN0b3JhZ2UuYm9ycm93PCZFeGFtcGxlVG9rZW4uVmF1bHQ+KGZyb206IG1kLnN0b3JhZ2VQYXRoKSA9PSBuaWwgewogICAgICAgICAgICBhY2N0LnN0b3JhZ2Uuc2F2ZSgKICAgICAgICAgICAgICAgIDwtRXhhbXBsZVRva2VuLmNyZWF0ZUVtcHR5VmF1bHQodmF1bHRUeXBlOiBUeXBlPEBFeGFtcGxlVG9rZW4uVmF1bHQ+KCkpLAogICAgICAgICAgICAgICAgdG86IG1kLnN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBjYXBhYmlsaXR5IHRvIHRoZSBWYXVsdCB0aGF0IG9ubHkgZXhwb3NlcwogICAgICAgIC8vIHRoZSBkZXBvc2l0IGZ1bmN0aW9uIHRocm91Z2ggdGhlIFJlY2VpdmVyIGludGVyZmFjZQogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnVucHVibGlzaChtZC5yZWNlaXZlclBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaCgKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXIsIEZ1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KG1kLnN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgYXQ6IG1kLnJlY2VpdmVyUGF0aAogICAgICAgICkKCiAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGNhcGFiaWxpdHkgdG8gdGhlIFZhdWx0IHRoYXQgZXhwb3NlcyB0aGUgQmFsYW5jZSBhbmQgUmVzb2x2ZXIgaW50ZXJmYWNlcwogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnVucHVibGlzaChtZC5tZXRhZGF0YVBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaCgKICAgICAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KG1kLnN0b3JhZ2VQYXRoKSwKICAgICAgICAgICAgYXQ6IG1kLm1ldGFkYXRhUGF0aAogICAgICAgICkKCiAgICB9Cn0KIA==",
              "setupFTProvider": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBGVFByb3ZpZGVyIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgoKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoYWNjdDogYXV0aChDYXBhYmlsaXRpZXMpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0RGF0YSA9IEV4YW1wbGVUb2tlbi5yZXNvbHZlQ29udHJhY3RWaWV3KHJlc291cmNlVHlwZTogbmlsLCB2aWV3VHlwZTogVHlwZTxGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT4oKSkgYXMhIEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzLkZUVmF1bHREYXRhPwogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGdldCB0aGUgdmF1bHQgZGF0YSB2aWV3IGZvciBFeGFtcGxlVG9rZW4iKQogICAgCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KHZhdWx0RGF0YS5zdG9yYWdlUGF0aCkKICAgIH0KfQog",
              "setupFTProviderTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBGVFByb3ZpZGVyVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKCmltcG9ydCBFeGFtcGxlVG9rZW4gZnJvbSAweDlmNzQ5YWUwNDE3Mjg3Y2IKaW1wb3J0IEZ1bmdpYmxlVG9rZW5NZXRhZGF0YVZpZXdzIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3Cgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKGFjY3Q6IGF1dGgoQ2FwYWJpbGl0aWVzKSAmQWNjb3VudCkgewogICAgICAgIGxldCB2YXVsdERhdGEgPSBFeGFtcGxlVG9rZW4ucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8RnVuZ2libGVUb2tlbk1ldGFkYXRhVmlld3MuRlRWYXVsdERhdGE+KCkpIGFzISBGdW5naWJsZVRva2VuTWV0YWRhdGFWaWV3cy5GVFZhdWx0RGF0YT8KICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBnZXQgdGhlIHZhdWx0IGRhdGEgdmlldyBmb3IgRXhhbXBsZVRva2VuIikKICAgIAogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pih2YXVsdERhdGEuc3RvcmFnZVBhdGgpCiAgICB9Cn0KIA==",
              "setupNFTFull": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBORlRGdWxsIC0gdjIuMDQKICAgICAgICAgICAvLyA8cGxhdGZvcm1faW5mbz4KICAgICBpbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgZCA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkhIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oZnJvbTogZC5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gRXhhbXBsZU5GVC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IEV4YW1wbGVORlQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgIH0KCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKGQucHVibGljUGF0aCkKICAgICAgICBsZXQgY2FwID0gYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwme0V4YW1wbGVORlQuRXhhbXBsZU5GVENvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGQuc3RvcmFnZVBhdGgpCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMucHVibGlzaChjYXAsIGF0OiBkLnB1YmxpY1BhdGgpCgogICAgICAgIGFjY3QuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8YXV0aChOb25GdW5naWJsZVRva2VuLldpdGhkcmF3KSAme0V4YW1wbGVORlQuRXhhbXBsZU5GVENvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGQuc3RvcmFnZVBhdGgpCiAgICB9Cn0K",
              "setupNFTFullTest": "Ly8gRmxvdyBXYWxsZXQgLSB0ZXN0bmV0IFNjcmlwdCAgc2V0dXBORlRGdWxsVGVzdCAtIHYyLjA0CiAgICAgICAgICAgLy8gPHBsYXRmb3JtX2luZm8+CiAgICAgCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHg2MzFlODhhZTdmMWQ3YzIwCgppbXBvcnQgRXhhbXBsZU5GVCBmcm9tIDB4OWY3NDlhZTA0MTcyODdjYgoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShhY2N0OiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKICAgICAgICBsZXQgZCA9IEV4YW1wbGVORlQucmVzb2x2ZUNvbnRyYWN0VmlldyhyZXNvdXJjZVR5cGU6IG5pbCwgdmlld1R5cGU6IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKSkhIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhCgogICAgICAgIGlmIGFjY3Quc3RvcmFnZS5ib3Jyb3c8JkV4YW1wbGVORlQuQ29sbGVjdGlvbj4oZnJvbTogZC5zdG9yYWdlUGF0aCkgPT0gbmlsIHsKICAgICAgICAgICAgYWNjdC5zdG9yYWdlLnNhdmUoPC0gZC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKSwgdG86IGQuc3RvcmFnZVBhdGgpCiAgICAgICAgfQoKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy51bnB1Ymxpc2goZC5wdWJsaWNQYXRoKQogICAgICAgIGxldCBjYXAgPSBhY2N0LmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlciwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZC5zdG9yYWdlUGF0aCkKICAgICAgICBhY2N0LmNhcGFiaWxpdGllcy5wdWJsaXNoKGNhcCwgYXQ6IGQucHVibGljUGF0aCkKCiAgICAgICAgYWNjdC5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZ7Tm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcixOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWMsIE5vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PihkLnN0b3JhZ2VQYXRoKQogICAgfQp9Cg==",
              "test": ""
            }
          }
        },
        "version": "2.04"
}

